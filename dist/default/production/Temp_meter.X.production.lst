

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Aug 13 08:21:04 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57   000000                     
    58                           ; Generated 23/03/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4620 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   0029AA                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _lat_reg
    98   0029AA  89                 	db	137
    99   0029AB  0F                 	db	15
   100   0029AC  8A                 	db	138
   101   0029AD  0F                 	db	15
   102   0029AE  8B                 	db	139
   103   0029AF  0F                 	db	15
   104   0029B0  8C                 	db	140
   105   0029B1  0F                 	db	15
   106   0029B2  8D                 	db	141
   107   0029B3  0F                 	db	15
   108                           
   109                           ;initializer for _tris_reg
   110   0029B4  92                 	db	146
   111   0029B5  0F                 	db	15
   112   0029B6  93                 	db	147
   113   0029B7  0F                 	db	15
   114   0029B8  94                 	db	148
   115   0029B9  0F                 	db	15
   116   0029BA  95                 	db	149
   117   0029BB  0F                 	db	15
   118   0029BC  96                 	db	150
   119   0029BD  0F                 	db	15
   120                           
   121                           ;initializer for _RB7_Flag
   122   0029BE  01                 	db	1
   123                           
   124                           ;initializer for _RB6_Flag
   125   0029BF  01                 	db	1
   126                           
   127                           ;initializer for _RB5_Flag
   128   0029C0  01                 	db	1
   129                           
   130                           ;initializer for _RB4_Flag
   131   0029C1  01                 	db	1
   132                           
   133                           ;initializer for _AIR_CONDITIONER
   134   0029C2  23                 	db	35
   135   0029C3  33                 	db	51
   136                           
   137                           ;initializer for _HEATER
   138   0029C4  03                 	db	3
   139   0029C5  13                 	db	19
   140                           
   141                           	psect	idataBANK0
   142   0029C6                     __pidataBANK0:
   143                           	callstack 0
   144                           
   145                           ;initializer for _port_reg
   146   0029C6  80                 	db	128
   147   0029C7  0F                 	db	15
   148   0029C8  81                 	db	129
   149   0029C9  0F                 	db	15
   150   0029CA  82                 	db	130
   151   0029CB  0F                 	db	15
   152   0029CC  83                 	db	131
   153   0029CD  0F                 	db	15
   154   0029CE  84                 	db	132
   155   0029CF  0F                 	db	15
   156                           
   157                           ;initializer for _lcd_obj
   158   0029D0  28                 	db	40
   159   0029D1  30                 	db	48
   160   0029D2  02                 	db	2
   161   0029D3  0A                 	db	10
   162   0029D4  12                 	db	18
   163   0029D5  1A                 	db	26
   164   0029D6  22                 	db	34
   165   0029D7  2A                 	db	42
   166   0029D8  32                 	db	50
   167   0029D9  3A                 	db	58
   168                           
   169                           ;initializer for _adc_1
   170   0029DA  00                 	db	0
   171   0029DB  00                 	db	0
   172   0029DC  00                 	db	0
   173   0029DD  05                 	db	5
   174   0029DE  05                 	db	5
   175   0029DF  00                 	db	0
   176   0029E0  02                 	db	2
   177   000000                     _INTCON2bits	set	4081
   178   000000                     _ADCON1bits	set	4033
   179   000000                     _ADRESL	set	4035
   180   000000                     _ADRESH	set	4036
   181   000000                     _INTCONbits	set	4082
   182   000000                     _TRISD	set	3989
   183   000000                     _TRISC	set	3988
   184   000000                     _TRISB	set	3987
   185   000000                     _TRISE	set	3990
   186                           
   187                           	psect	nvCOMRAM
   188   000077                     __pnvCOMRAM:
   189                           	callstack 0
   190   000077                     _lcd_temp2:
   191                           	callstack 0
   192   000077                     	ds	2
   193   000079                     _lcd_temp1:
   194                           	callstack 0
   195   000079                     	ds	2
   196   00007B                     _adc_temp:
   197                           	callstack 0
   198   00007B                     	ds	2
   199                           
   200                           	psect	nvBANK0
   201   0000A8                     __pnvBANK0:
   202                           	callstack 0
   203   0000A8                     _ret:
   204                           	callstack 0
   205   0000A8                     	ds	1
   206   000000                     _PORTBbits	set	3969
   207   000000                     _PIE1bits	set	3997
   208   000000                     _ADCON2bits	set	4032
   209   000000                     _ADCON0bits	set	4034
   210   000000                     _PORTE	set	3972
   211   000000                     _PORTD	set	3971
   212   000000                     _PORTC	set	3970
   213   000000                     _PORTB	set	3969
   214   000000                     _PORTA	set	3968
   215   000000                     _LATA	set	3977
   216   000000                     _TRISA	set	3986
   217   000000                     _PIR1bits	set	3998
   218   000000                     _INTCON3bits	set	4080
   219   000000                     _LATE	set	3981
   220   000000                     _LATD	set	3980
   221   000000                     _LATC	set	3979
   222   000000                     _LATB	set	3978
   223                           
   224                           	psect	smallconst
   225   001000                     __psmallconst:
   226                           	callstack 0
   227   001000  00                 	db	0
   228   001001                     STR_1:
   229   001001  54                 	db	84	;'T'
   230   001002  65                 	db	101	;'e'
   231   001003  6D                 	db	109	;'m'
   232   001004  70                 	db	112	;'p'
   233   001005  65                 	db	101	;'e'
   234   001006  72                 	db	114	;'r'
   235   001007  61                 	db	97	;'a'
   236   001008  74                 	db	116	;'t'
   237   001009  75                 	db	117	;'u'
   238   00100A  72                 	db	114	;'r'
   239   00100B  65                 	db	101	;'e'
   240   00100C  3A                 	db	58	;':'
   241   00100D  00                 	db	0
   242   00100E                     STR_2:
   243   00100E  25                 	db	37
   244   00100F  69                 	db	105	;'i'
   245   001010  00                 	db	0
   246   001011  00                 	db	0	; dummy byte at the end
   247   000000                     
   248                           ; #config settings
   249                           
   250                           	psect	cinit
   251   002744                     __pcinit:
   252                           	callstack 0
   253   002744                     start_initialization:
   254                           	callstack 0
   255   002744                     __initialization:
   256                           	callstack 0
   257                           
   258                           ; Initialize objects allocated to BANK0 (27 bytes)
   259                           ; load TBLPTR registers with __pidataBANK0
   260   002744  0EC6               	movlw	low __pidataBANK0
   261   002746  6EF6               	movwf	tblptrl,c
   262   002748  0E29               	movlw	high __pidataBANK0
   263   00274A  6EF7               	movwf	tblptrh,c
   264   00274C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   265   00274E  6EF8               	movwf	tblptru,c
   266   002750  EE00  F080         	lfsr	0,__pdataBANK0
   267   002754  EE10 F01B          	lfsr	1,27
   268   002758                     copy_data0:
   269   002758  0009               	tblrd		*+
   270   00275A  CFF5 FFEE          	movff	tablat,postinc0
   271   00275E  50E5               	movf	postdec1,w,c
   272   002760  50E1               	movf	fsr1l,w,c
   273   002762  E1FA               	bnz	copy_data0
   274                           
   275                           ; Initialize objects allocated to COMRAM (28 bytes)
   276                           ; load TBLPTR registers with __pidataCOMRAM
   277   002764  0EAA               	movlw	low __pidataCOMRAM
   278   002766  6EF6               	movwf	tblptrl,c
   279   002768  0E29               	movlw	high __pidataCOMRAM
   280   00276A  6EF7               	movwf	tblptrh,c
   281   00276C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   282   00276E  6EF8               	movwf	tblptru,c
   283   002770  EE00  F05B         	lfsr	0,__pdataCOMRAM
   284   002774  EE10 F01C          	lfsr	1,28
   285   002778                     copy_data1:
   286   002778  0009               	tblrd		*+
   287   00277A  CFF5 FFEE          	movff	tablat,postinc0
   288   00277E  50E5               	movf	postdec1,w,c
   289   002780  50E1               	movf	fsr1l,w,c
   290   002782  E1FA               	bnz	copy_data1
   291                           
   292                           ; Clear objects allocated to BANK0 (11 bytes)
   293   002784  EE00  F09B         	lfsr	0,__pbssBANK0
   294   002788  0E0B               	movlw	11
   295   00278A                     clear_0:
   296   00278A  6AEE               	clrf	postinc0,c
   297   00278C  06E8               	decf	wreg,f,c
   298   00278E  E1FD               	bnz	clear_0
   299                           
   300                           ; Clear objects allocated to COMRAM (42 bytes)
   301   002790  EE00  F031         	lfsr	0,__pbssCOMRAM
   302   002794  0E2A               	movlw	42
   303   002796                     clear_1:
   304   002796  6AEE               	clrf	postinc0,c
   305   002798  06E8               	decf	wreg,f,c
   306   00279A  E1FD               	bnz	clear_1
   307   00279C                     end_of_initialization:
   308                           	callstack 0
   309   00279C                     __end_of__initialization:
   310                           	callstack 0
   311   00279C  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312   00279E  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313   0027A0  0100               	movlb	0
   314   0027A2  EF73  F00D         	goto	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMRAM
   317   000031                     __pbssCOMRAM:
   318                           	callstack 0
   319   000031                     	ds	6
   320   000037                     	ds	4
   321   00003B                     _RB7_InterruptHandler_LOW:
   322                           	callstack 0
   323   00003B                     	ds	2
   324   00003D                     _RB7_InterruptHandler_HIGH:
   325                           	callstack 0
   326   00003D                     	ds	2
   327   00003F                     _RB6_InterruptHandler_LOW:
   328                           	callstack 0
   329   00003F                     	ds	2
   330   000041                     _RB6_InterruptHandler_HIGH:
   331                           	callstack 0
   332   000041                     	ds	2
   333   000043                     _RB5_InterruptHandler_LOW:
   334                           	callstack 0
   335   000043                     	ds	2
   336   000045                     _RB5_InterruptHandler_HIGH:
   337                           	callstack 0
   338   000045                     	ds	2
   339   000047                     _RB4_InterruptHandler_LOW:
   340                           	callstack 0
   341   000047                     	ds	2
   342   000049                     _RB4_InterruptHandler_HIGH:
   343                           	callstack 0
   344   000049                     	ds	2
   345   00004B                     _INT2_InterruptHandler:
   346                           	callstack 0
   347   00004B                     	ds	2
   348   00004D                     _INT1_InterruptHandler:
   349                           	callstack 0
   350   00004D                     	ds	2
   351   00004F                     _INT0_InterruptHandler:
   352                           	callstack 0
   353   00004F                     	ds	2
   354   000051                     _ADC_InterruptHandler:
   355                           	callstack 0
   356   000051                     	ds	2
   357   000053                     motor_stop@F3087:
   358                           	callstack 0
   359   000053                     	ds	1
   360   000054                     motor_stop@F3085:
   361                           	callstack 0
   362   000054                     	ds	1
   363   000055                     motor_move_left@F3080:
   364                           	callstack 0
   365   000055                     	ds	1
   366   000056                     motor_move_left@F3078:
   367                           	callstack 0
   368   000056                     	ds	1
   369   000057                     motor_move_right@F3073:
   370                           	callstack 0
   371   000057                     	ds	1
   372   000058                     motor_move_right@F3071:
   373                           	callstack 0
   374   000058                     	ds	1
   375   000059                     motor_init@F3066:
   376                           	callstack 0
   377   000059                     	ds	1
   378   00005A                     motor_init@F3064:
   379                           	callstack 0
   380   00005A                     	ds	1
   381                           
   382                           	psect	dataCOMRAM
   383   00005B                     __pdataCOMRAM:
   384                           	callstack 0
   385   00005B                     _lat_reg:
   386                           	callstack 0
   387   00005B                     	ds	10
   388   000065                     _tris_reg:
   389                           	callstack 0
   390   000065                     	ds	10
   391   00006F                     _RB7_Flag:
   392                           	callstack 0
   393   00006F                     	ds	1
   394   000070                     _RB6_Flag:
   395                           	callstack 0
   396   000070                     	ds	1
   397   000071                     _RB5_Flag:
   398                           	callstack 0
   399   000071                     	ds	1
   400   000072                     _RB4_Flag:
   401                           	callstack 0
   402   000072                     	ds	1
   403   000073                     _AIR_CONDITIONER:
   404                           	callstack 0
   405   000073                     	ds	2
   406   000075                     _HEATER:
   407                           	callstack 0
   408   000075                     	ds	2
   409                           
   410                           	psect	bssBANK0
   411   00009B                     __pbssBANK0:
   412                           	callstack 0
   413   00009B                     	ds	11
   414                           
   415                           	psect	dataBANK0
   416   000080                     __pdataBANK0:
   417                           	callstack 0
   418   000080                     _port_reg:
   419                           	callstack 0
   420   000080                     	ds	10
   421   00008A                     _lcd_obj:
   422                           	callstack 0
   423   00008A                     	ds	10
   424   000094                     _adc_1:
   425                           	callstack 0
   426   000094                     	ds	7
   427                           
   428                           	psect	cstackBANK0
   429   0000A6                     __pcstackBANK0:
   430                           	callstack 0
   431   0000A6                     ___fltol@sign1:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x0
   435   0000A6                     	ds	1
   436   0000A7                     ___fltol@exp1:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1
   440   0000A7                     	ds	1
   441                           
   442                           	psect	cstackCOMRAM
   443   000001                     __pcstackCOMRAM:
   444                           	callstack 0
   445   000001                     RB4_ISR@RB4_Source:
   446                           	callstack 0
   447   000001                     RB5_ISR@RB5_Source:
   448                           	callstack 0
   449   000001                     RB6_ISR@RB6_Source:
   450                           	callstack 0
   451   000001                     RB7_ISR@RB7_Source:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x0
   455   000001                     	ds	1
   456   000002                     ??_adc_input_channel_port_config:
   457   000002                     ?___lwdiv:
   458                           	callstack 0
   459   000002                     ?___lwmod:
   460                           	callstack 0
   461   000002                     ?___xxtofl:
   462                           	callstack 0
   463   000002                     ADC_StartConversion@adc:
   464                           	callstack 0
   465   000002                     ADC_GetConversionResult@adc:
   466                           	callstack 0
   467   000002                     adc_Select_result_format@adc:
   468                           	callstack 0
   469   000002                     adc_select_volt_ref@adc:
   470                           	callstack 0
   471   000002                     gpio_pin_direction_init@_pin_config:
   472                           	callstack 0
   473   000002                     gpio_pin_write_logic@_pin_config:
   474                           	callstack 0
   475   000002                     ___lwdiv@dividend:
   476                           	callstack 0
   477   000002                     ___lwmod@dividend:
   478                           	callstack 0
   479   000002                     ___xxtofl@val:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x1
   483   000002                     	ds	1
   484   000003                     ??_gpio_pin_direction_init:
   485   000003                     ADC_StartConversion@ret:
   486                           	callstack 0
   487   000003                     ADC_GetConversionResult@conversion_result:
   488                           	callstack 0
   489   000003                     gpio_pin_write_logic@logic:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x2
   493   000003                     	ds	1
   494   000004                     ??_gpio_pin_write_logic:
   495   000004                     ??_ADC_GetConversionResult:
   496   000004                     adc_input_channel_port_config@channel:
   497                           	callstack 0
   498   000004                     ___lwdiv@divisor:
   499                           	callstack 0
   500   000004                     ___lwmod@divisor:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x3
   504   000004                     	ds	1
   505   000005                     ADC_Init@adc:
   506                           	callstack 0
   507   000005                     ADC_SelectChannel@adc:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x4
   511   000005                     	ds	1
   512   000006                     ??_ADC_Init:
   513   000006                     ??___xxtofl:
   514   000006                     ADC_SelectChannel@channel:
   515                           	callstack 0
   516   000006                     ___lwmod@counter:
   517                           	callstack 0
   518   000006                     ___lwdiv@quotient:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x5
   522   000006                     	ds	1
   523   000007                     ??_ADC_SelectChannel:
   524   000007                     ADC_Init@ret:
   525                           	callstack 0
   526   000007                     ADC_GetConversionResult@ret:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x6
   530   000007                     	ds	1
   531   000008                     ADC_SelectChannel@ret:
   532                           	callstack 0
   533   000008                     gpio_pin_direction_init@ret:
   534                           	callstack 0
   535   000008                     ___lwdiv@counter:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x7
   539   000008                     	ds	1
   540   000009                     ADC_GetConversion_Blocking@adc:
   541                           	callstack 0
   542   000009                     gpio_pin_write_logic@ret:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x8
   546   000009                     	ds	1
   547   00000A                     ADC_GetConversion_Blocking@channel:
   548                           	callstack 0
   549   00000A                     lcd_8bit_send_enable@lcd:
   550                           	callstack 0
   551   00000A                     motor_init@motor:
   552                           	callstack 0
   553   00000A                     motor_move_right@motor:
   554                           	callstack 0
   555   00000A                     motor_stop@motor:
   556                           	callstack 0
   557   00000A                     ___xxtofl@sign:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x9
   561   00000A                     	ds	1
   562   00000B                     ??_motor_init:
   563   00000B                     ??_motor_move_right:
   564   00000B                     ??_motor_stop:
   565   00000B                     ADC_GetConversion_Blocking@conversion_status:
   566                           	callstack 0
   567   00000B                     lcd_8bit_send_enable@ret:
   568                           	callstack 0
   569   00000B                     ___xxtofl@exp:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0xA
   573   00000B                     	ds	1
   574   00000C                     ADC_GetConversion_Blocking@ret:
   575                           	callstack 0
   576   00000C                     lcd_8bit_send_command@lcd:
   577                           	callstack 0
   578   00000C                     lcd_8bit_send_char_data@lcd:
   579                           	callstack 0
   580   00000C                     motor_init@ret:
   581                           	callstack 0
   582   00000C                     motor_move_right@obj1:
   583                           	callstack 0
   584   00000C                     motor_stop@obj1:
   585                           	callstack 0
   586   00000C                     ___xxtofl@arg:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0xB
   590   00000C                     	ds	1
   591   00000D                     lcd_8bit_send_command@command:
   592                           	callstack 0
   593   00000D                     lcd_8bit_send_char_data@data:
   594                           	callstack 0
   595   00000D                     motor_init@obj1:
   596                           	callstack 0
   597   00000D                     motor_move_right@obj2:
   598                           	callstack 0
   599   00000D                     motor_stop@obj2:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xC
   603   00000D                     	ds	1
   604   00000E                     ??_lcd_8bit_send_command:
   605   00000E                     ??_lcd_8bit_send_char_data:
   606   00000E                     motor_init@obj2:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0xD
   610   00000E                     	ds	2
   611   000010                     ?___flmul:
   612                           	callstack 0
   613   000010                     lcd_8bit_send_command@ret:
   614                           	callstack 0
   615   000010                     lcd_8bit_send_char_data@ret:
   616                           	callstack 0
   617   000010                     ___flmul@b:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0xF
   621   000010                     	ds	1
   622   000011                     lcd_8bit_send_command@count:
   623                           	callstack 0
   624   000011                     lcd_8bit_send_char_data@count:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x10
   628   000011                     	ds	1
   629   000012                     lcd_8bit_init@lcd:
   630                           	callstack 0
   631   000012                     lcd_8bit_send_string@lcd:
   632                           	callstack 0
   633   000012                     lcd_8bit_set_cursor@lcd:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x11
   637   000012                     	ds	1
   638   000013                     ??_lcd_8bit_init:
   639   000013                     lcd_8bit_send_string@str:
   640                           	callstack 0
   641   000013                     lcd_8bit_set_cursor@row:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x12
   645   000013                     	ds	1
   646   000014                     lcd_8bit_init@ret:
   647                           	callstack 0
   648   000014                     lcd_8bit_send_string@ret:
   649                           	callstack 0
   650   000014                     lcd_8bit_set_cursor@column:
   651                           	callstack 0
   652   000014                     ___flmul@a:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x13
   656   000014                     	ds	1
   657   000015                     ??_lcd_8bit_set_cursor:
   658                           
   659                           ; 1 bytes @ 0x14
   660   000015                     	ds	2
   661   000017                     lcd_8bit_set_cursor@ret:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x16
   665   000017                     	ds	1
   666   000018                     ??___flmul:
   667   000018                     lcd_8bit_send_char_data_pos@lcd:
   668                           	callstack 0
   669   000018                     lcd_8bit_send_string_pos@lcd:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x17
   673   000018                     	ds	1
   674   000019                     lcd_8bit_send_char_data_pos@row:
   675                           	callstack 0
   676   000019                     lcd_8bit_send_string_pos@row:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x18
   680   000019                     	ds	1
   681   00001A                     lcd_8bit_send_char_data_pos@col:
   682                           	callstack 0
   683   00001A                     lcd_8bit_send_string_pos@col:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x19
   687   00001A                     	ds	1
   688   00001B                     lcd_8bit_send_char_data_pos@data:
   689                           	callstack 0
   690   00001B                     lcd_8bit_send_string_pos@str:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x1A
   694   00001B                     	ds	1
   695   00001C                     lcd_8bit_send_char_data_pos@ret:
   696                           	callstack 0
   697   00001C                     lcd_8bit_send_string_pos@ret:
   698                           	callstack 0
   699   00001C                     ___flmul@sign:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x1B
   703   00001C                     	ds	1
   704   00001D                     ___flmul@grs:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x1C
   708   00001D                     	ds	4
   709   000021                     ___flmul@aexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x20
   713   000021                     	ds	1
   714   000022                     ___flmul@bexp:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x21
   718   000022                     	ds	1
   719   000023                     ___flmul@prod:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x22
   723   000023                     	ds	4
   724   000027                     ___flmul@temp:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x26
   728   000027                     	ds	2
   729   000029                     ?___fltol:
   730                           	callstack 0
   731   000029                     ___fltol@f1:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x28
   735   000029                     	ds	4
   736   00002D                     ??___fltol:
   737                           
   738                           ; 1 bytes @ 0x2C
   739   00002D                     	ds	4
   740   000031                     
   741                           ; 1 bytes @ 0x30
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 91 in file "application.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  2   36[None  ] int 
   754 ;; Registers used:
   755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels required when called: 7
   767 ;; This function calls:
   768 ;;		_ADC_GetConversion_Blocking
   769 ;;		_ADC_Init
   770 ;;		___flmul
   771 ;;		___fltol
   772 ;;		___lwdiv
   773 ;;		___lwmod
   774 ;;		___xxtofl
   775 ;;		_lcd_8bit_init
   776 ;;		_lcd_8bit_send_char_data_pos
   777 ;;		_lcd_8bit_send_string_pos
   778 ;;		_motor_init
   779 ;;		_motor_move_right
   780 ;;		_motor_stop
   781 ;; This function is called by:
   782 ;;		Startup code after reset
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text0
   787   001AE6                     __ptext0:
   788                           	callstack 0
   789   001AE6                     _main:
   790                           	callstack 24
   791   001AE6                     
   792                           ;application.c: 92:     ret = lcd_8bit_init(&lcd_obj);
   793   001AE6  0E8A               	movlw	low _lcd_obj
   794   001AE8  6E12               	movwf	lcd_8bit_init@lcd^0,c
   795   001AEA  EC71  F00B         	call	_lcd_8bit_init	;wreg free
   796   001AEE  0100               	movlb	0	; () banked
   797   001AF0  6FA8               	movwf	_ret& (0+255),b
   798   001AF2                     
   799                           ; BSR set to: 0
   800                           ;application.c: 93:     ret = ADC_Init(&adc_1);
   801   001AF2  0E94               	movlw	low _adc_1
   802   001AF4  6E05               	movwf	ADC_Init@adc^0,c
   803   001AF6  EC35  F012         	call	_ADC_Init	;wreg free
   804   001AFA  0100               	movlb	0	; () banked
   805   001AFC  6FA8               	movwf	_ret& (0+255),b
   806   001AFE                     
   807                           ; BSR set to: 0
   808                           ;application.c: 94:     ret = lcd_8bit_send_string_pos(&lcd_obj,1,1,"Temperature:");
   809   001AFE  0E8A               	movlw	low _lcd_obj
   810   001B00  6E18               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   811   001B02  0E01               	movlw	1
   812   001B04  6E19               	movwf	lcd_8bit_send_string_pos@row^0,c
   813   001B06  0E01               	movlw	1
   814   001B08  6E1A               	movwf	lcd_8bit_send_string_pos@col^0,c
   815   001B0A  0E01               	movlw	low STR_1
   816   001B0C  6E1B               	movwf	lcd_8bit_send_string_pos@str^0,c
   817   001B0E  EC03  F014         	call	_lcd_8bit_send_string_pos	;wreg free
   818   001B12  0100               	movlb	0	; () banked
   819   001B14  6FA8               	movwf	_ret& (0+255),b
   820   001B16                     
   821                           ; BSR set to: 0
   822                           ;application.c: 95:     ret = motor_init(&HEATER);
   823   001B16  0E75               	movlw	low _HEATER
   824   001B18  6E0A               	movwf	motor_init@motor^0,c
   825   001B1A  ECD5  F00F         	call	_motor_init	;wreg free
   826   001B1E  0100               	movlb	0	; () banked
   827   001B20  6FA8               	movwf	_ret& (0+255),b
   828   001B22                     
   829                           ; BSR set to: 0
   830                           ;application.c: 96:     ret = motor_init(&AIR_CONDITIONER);
   831   001B22  0E73               	movlw	low _AIR_CONDITIONER
   832   001B24  6E0A               	movwf	motor_init@motor^0,c
   833   001B26  ECD5  F00F         	call	_motor_init	;wreg free
   834   001B2A  0100               	movlb	0	; () banked
   835   001B2C  6FA8               	movwf	_ret& (0+255),b
   836   001B2E                     l4352:
   837                           
   838                           ;application.c: 100:         ret = ADC_GetConversion_Blocking(&adc_1, ADC_CHANNEL_AN0, &
      +                          adc_temp);
   839   001B2E  0E94               	movlw	low _adc_1
   840   001B30  6E09               	movwf	ADC_GetConversion_Blocking@adc^0,c
   841   001B32  0E00               	movlw	0
   842   001B34  6E0A               	movwf	ADC_GetConversion_Blocking@channel^0,c
   843   001B36  0E7B               	movlw	low _adc_temp
   844   001B38  6E0B               	movwf	ADC_GetConversion_Blocking@conversion_status^0,c
   845   001B3A  ECD3  F013         	call	_ADC_GetConversion_Blocking	;wreg free
   846   001B3E  0100               	movlb	0	; () banked
   847   001B40  6FA8               	movwf	_ret& (0+255),b
   848   001B42                     
   849                           ; BSR set to: 0
   850                           ;application.c: 101:         adc_temp = adc_temp * 0.4878048780487805;
   851   001B42  0E90               	movlw	144
   852   001B44  6E14               	movwf	___flmul@a^0,c
   853   001B46  0EC1               	movlw	193
   854   001B48  6E15               	movwf	(___flmul@a+1)^0,c
   855   001B4A  0EF9               	movlw	249
   856   001B4C  6E16               	movwf	(___flmul@a+2)^0,c
   857   001B4E  0E3E               	movlw	62
   858   001B50  6E17               	movwf	(___flmul@a+3)^0,c
   859   001B52  C07B  F002         	movff	_adc_temp,___xxtofl@val
   860   001B56  C07C  F003         	movff	_adc_temp+1,___xxtofl@val+1
   861   001B5A  6A04               	clrf	(___xxtofl@val+2)^0,c
   862   001B5C  6A05               	clrf	(___xxtofl@val+3)^0,c
   863   001B5E  0E00               	movlw	0
   864   001B60  EC99  F00C         	call	___xxtofl
   865   001B64  C002  F010         	movff	?___xxtofl,___flmul@b
   866   001B68  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
   867   001B6C  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
   868   001B70  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
   869   001B74  EC09  F008         	call	___flmul	;wreg free
   870   001B78  C010  F029         	movff	?___flmul,___fltol@f1
   871   001B7C  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
   872   001B80  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
   873   001B84  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
   874   001B88  EC51  F00F         	call	___fltol	;wreg free
   875   001B8C  C029  F07B         	movff	?___fltol,_adc_temp
   876   001B90  C02A  F07C         	movff	?___fltol+1,_adc_temp+1
   877   001B94                     
   878                           ;application.c: 102:         lcd_temp1 = (adc_temp/10) + 48;
   879   001B94  C07B  F002         	movff	_adc_temp,___lwdiv@dividend
   880   001B98  C07C  F003         	movff	_adc_temp+1,___lwdiv@dividend+1
   881   001B9C  0E00               	movlw	0
   882   001B9E  6E05               	movwf	(___lwdiv@divisor+1)^0,c
   883   001BA0  0E0A               	movlw	10
   884   001BA2  6E04               	movwf	___lwdiv@divisor^0,c
   885   001BA4  EC01  F013         	call	___lwdiv	;wreg free
   886   001BA8  0E30               	movlw	48
   887   001BAA  2402               	addwf	?___lwdiv^0,w,c
   888   001BAC  6E79               	movwf	_lcd_temp1^0,c
   889   001BAE  0E00               	movlw	0
   890   001BB0  2003               	addwfc	(?___lwdiv+1)^0,w,c
   891   001BB2  6E7A               	movwf	(_lcd_temp1+1)^0,c
   892   001BB4                     
   893                           ;application.c: 103:         lcd_temp2 = (adc_temp%10) + 48;
   894   001BB4  C07B  F002         	movff	_adc_temp,___lwmod@dividend
   895   001BB8  C07C  F003         	movff	_adc_temp+1,___lwmod@dividend+1
   896   001BBC  0E00               	movlw	0
   897   001BBE  6E05               	movwf	(___lwmod@divisor+1)^0,c
   898   001BC0  0E0A               	movlw	10
   899   001BC2  6E04               	movwf	___lwmod@divisor^0,c
   900   001BC4  EC70  F013         	call	___lwmod	;wreg free
   901   001BC8  0E30               	movlw	48
   902   001BCA  2402               	addwf	?___lwmod^0,w,c
   903   001BCC  6E77               	movwf	_lcd_temp2^0,c
   904   001BCE  0E00               	movlw	0
   905   001BD0  2003               	addwfc	(?___lwmod+1)^0,w,c
   906   001BD2  6E78               	movwf	(_lcd_temp2+1)^0,c
   907   001BD4                     
   908                           ;application.c: 104:         lcd_8bit_send_char_data_pos(&lcd_obj,1,13,lcd_temp1);
   909   001BD4  0E8A               	movlw	low _lcd_obj
   910   001BD6  6E18               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   911   001BD8  0E01               	movlw	1
   912   001BDA  6E19               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   913   001BDC  0E0D               	movlw	13
   914   001BDE  6E1A               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   915   001BE0  C079  F01B         	movff	_lcd_temp1,lcd_8bit_send_char_data_pos@data
   916   001BE4  EC8A  F014         	call	_lcd_8bit_send_char_data_pos	;wreg free
   917   001BE8                     
   918                           ;application.c: 105:         lcd_8bit_send_char_data_pos(&lcd_obj,1,14,lcd_temp2);
   919   001BE8  0E8A               	movlw	low _lcd_obj
   920   001BEA  6E18               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   921   001BEC  0E01               	movlw	1
   922   001BEE  6E19               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   923   001BF0  0E0E               	movlw	14
   924   001BF2  6E1A               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   925   001BF4  C077  F01B         	movff	_lcd_temp2,lcd_8bit_send_char_data_pos@data
   926   001BF8  EC8A  F014         	call	_lcd_8bit_send_char_data_pos	;wreg free
   927   001BFC                     
   928                           ;application.c: 106:         lcd_8bit_send_char_data_pos(&lcd_obj,1,15,'C');
   929   001BFC  0E8A               	movlw	low _lcd_obj
   930   001BFE  6E18               	movwf	lcd_8bit_send_char_data_pos@lcd^0,c
   931   001C00  0E01               	movlw	1
   932   001C02  6E19               	movwf	lcd_8bit_send_char_data_pos@row^0,c
   933   001C04  0E0F               	movlw	15
   934   001C06  6E1A               	movwf	lcd_8bit_send_char_data_pos@col^0,c
   935   001C08  0E43               	movlw	67
   936   001C0A  6E1B               	movwf	lcd_8bit_send_char_data_pos@data^0,c
   937   001C0C  EC8A  F014         	call	_lcd_8bit_send_char_data_pos	;wreg free
   938   001C10                     
   939                           ;application.c: 108:         if(adc_temp < 20){
   940   001C10  507C               	movf	(_adc_temp+1)^0,w,c
   941   001C12  E107               	bnz	u3601
   942   001C14  0E14               	movlw	20
   943   001C16  5C7B               	subwf	_adc_temp^0,w,c
   944   001C18  B0D8               	btfsc	status,0,c
   945   001C1A  EF11  F00E         	goto	u3601
   946   001C1E  EF13  F00E         	goto	u3600
   947   001C22                     u3601:
   948   001C22  EF19  F00E         	goto	l4370
   949   001C26                     u3600:
   950   001C26                     
   951                           ;application.c: 109:             motor_move_right(&HEATER);
   952   001C26  0E75               	movlw	low _HEATER
   953   001C28  6E0A               	movwf	motor_move_right@motor^0,c
   954   001C2A  EC1C  F011         	call	_motor_move_right	;wreg free
   955                           
   956                           ;application.c: 110:         }
   957   001C2E  EF97  F00D         	goto	l4352
   958   001C32                     l4370:
   959   001C32  507C               	movf	(_adc_temp+1)^0,w,c
   960   001C34  E109               	bnz	u3610
   961   001C36  0E1F               	movlw	31
   962   001C38  5C7B               	subwf	_adc_temp^0,w,c
   963   001C3A  A0D8               	btfss	status,0,c
   964   001C3C  EF22  F00E         	goto	u3611
   965   001C40  EF24  F00E         	goto	u3610
   966   001C44                     u3611:
   967   001C44  EF2A  F00E         	goto	l4374
   968   001C48                     u3610:
   969   001C48                     
   970                           ;application.c: 112:              motor_move_right(&AIR_CONDITIONER);
   971   001C48  0E73               	movlw	low _AIR_CONDITIONER
   972   001C4A  6E0A               	movwf	motor_move_right@motor^0,c
   973   001C4C  EC1C  F011         	call	_motor_move_right	;wreg free
   974                           
   975                           ;application.c: 113:         }
   976   001C50  EF97  F00D         	goto	l4352
   977   001C54                     l4374:
   978                           
   979                           ;application.c: 115:             motor_stop(&AIR_CONDITIONER);
   980   001C54  0E73               	movlw	low _AIR_CONDITIONER
   981   001C56  6E0A               	movwf	motor_stop@motor^0,c
   982   001C58  ECB7  F010         	call	_motor_stop	;wreg free
   983                           
   984                           ;application.c: 116:             motor_stop(&HEATER);
   985   001C5C  0E75               	movlw	low _HEATER
   986   001C5E  6E0A               	movwf	motor_stop@motor^0,c
   987   001C60  ECB7  F010         	call	_motor_stop	;wreg free
   988   001C64  EF97  F00D         	goto	l4352
   989   001C68  EF07  F000         	goto	start
   990   001C6C                     __end_of_main:
   991                           	callstack 0
   992                           
   993 ;; *************** function _motor_stop *****************
   994 ;; Defined at:
   995 ;;		line 100 in file "ECU_layer/MOTOR/ecu_motor.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  motor           1    9[COMRAM] PTR const struct .
   998 ;;		 -> AIR_CONDITIONER(2), HEATER(2), 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  obj2            1   12[COMRAM] struct .
  1001 ;;  obj1            1   11[COMRAM] struct .
  1002 ;;  ret             1    0        unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      unsigned char 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        4 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 3
  1019 ;; This function calls:
  1020 ;;		_gpio_pin_write_logic
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text1
  1027   00216E                     __ptext1:
  1028                           	callstack 0
  1029   00216E                     _motor_stop:
  1030                           	callstack 27
  1031   00216E                     
  1032                           ;ECU_layer/MOTOR/ecu_motor.c: 102: if(((void*)0) == motor){
  1033   00216E  500A               	movf	motor_stop@motor^0,w,c
  1034   002170  A4D8               	btfss	status,2,c
  1035   002172  EFBD  F010         	goto	u2711
  1036   002176  EFBF  F010         	goto	u2710
  1037   00217A                     u2711:
  1038   00217A  EFC1  F010         	goto	l537
  1039   00217E                     u2710:
  1040   00217E                     
  1041                           ;ECU_layer/MOTOR/ecu_motor.c: 104: }
  1042   00217E  EF1B  F011         	goto	l543
  1043   002182                     l537:
  1044                           
  1045                           ;ECU_layer/MOTOR/ecu_motor.c: 106:     pin_config_t obj1 ={
  1046   002182  C054  F00C         	movff	motor_stop@F3085,motor_stop@obj1
  1047   002186  500A               	movf	motor_stop@motor^0,w,c
  1048   002188  6ED9               	movwf	fsr2l,c
  1049   00218A  6ADA               	clrf	fsr2h,c
  1050   00218C  50DF               	movf	223,w,c
  1051   00218E  0B0F               	andlw	15
  1052   002190  6E0B               	movwf	??_motor_stop^0,c
  1053   002192  500C               	movf	motor_stop@obj1^0,w,c
  1054   002194  180B               	xorwf	??_motor_stop^0,w,c
  1055   002196  0BF8               	andlw	-8
  1056   002198  180B               	xorwf	??_motor_stop^0,w,c
  1057   00219A  6E0C               	movwf	motor_stop@obj1^0,c
  1058   00219C  500A               	movf	motor_stop@motor^0,w,c
  1059   00219E  6ED9               	movwf	fsr2l,c
  1060   0021A0  6ADA               	clrf	fsr2h,c
  1061   0021A2  38DF               	swapf	223,w,c
  1062   0021A4  0B07               	andlw	7
  1063   0021A6  6E0B               	movwf	??_motor_stop^0,c
  1064   0021A8  460B               	rlncf	??_motor_stop^0,f,c
  1065   0021AA  460B               	rlncf	??_motor_stop^0,f,c
  1066   0021AC  460B               	rlncf	??_motor_stop^0,f,c
  1067   0021AE  500C               	movf	motor_stop@obj1^0,w,c
  1068   0021B0  180B               	xorwf	??_motor_stop^0,w,c
  1069   0021B2  0BC7               	andlw	-57
  1070   0021B4  180B               	xorwf	??_motor_stop^0,w,c
  1071   0021B6  6E0C               	movwf	motor_stop@obj1^0,c
  1072   0021B8  9C0C               	bcf	motor_stop@obj1^0,6,c
  1073   0021BA  500A               	movf	motor_stop@motor^0,w,c
  1074   0021BC  6ED9               	movwf	fsr2l,c
  1075   0021BE  6ADA               	clrf	fsr2h,c
  1076   0021C0  AEDF               	btfss	indf2,7,c
  1077   0021C2  D002               	bra	u2725
  1078   0021C4  8E0C               	bsf	motor_stop@obj1^0,7,c
  1079   0021C6  D001               	bra	u2727
  1080   0021C8                     u2725:
  1081   0021C8  9E0C               	bcf	motor_stop@obj1^0,7,c
  1082   0021CA                     u2727:
  1083   0021CA                     
  1084                           ;ECU_layer/MOTOR/ecu_motor.c: 112:     pin_config_t obj2={
  1085   0021CA  C053  F00D         	movff	motor_stop@F3087,motor_stop@obj2
  1086   0021CE  500A               	movf	motor_stop@motor^0,w,c
  1087   0021D0  6ED9               	movwf	fsr2l,c
  1088   0021D2  6ADA               	clrf	fsr2h,c
  1089   0021D4  0E01               	movlw	1
  1090   0021D6  26D9               	addwf	fsr2l,f,c
  1091   0021D8  50DF               	movf	223,w,c
  1092   0021DA  0B0F               	andlw	15
  1093   0021DC  6E0B               	movwf	??_motor_stop^0,c
  1094   0021DE  500D               	movf	motor_stop@obj2^0,w,c
  1095   0021E0  180B               	xorwf	??_motor_stop^0,w,c
  1096   0021E2  0BF8               	andlw	-8
  1097   0021E4  180B               	xorwf	??_motor_stop^0,w,c
  1098   0021E6  6E0D               	movwf	motor_stop@obj2^0,c
  1099   0021E8  500A               	movf	motor_stop@motor^0,w,c
  1100   0021EA  6ED9               	movwf	fsr2l,c
  1101   0021EC  6ADA               	clrf	fsr2h,c
  1102   0021EE  0E01               	movlw	1
  1103   0021F0  26D9               	addwf	fsr2l,f,c
  1104   0021F2  38DF               	swapf	223,w,c
  1105   0021F4  0B07               	andlw	7
  1106   0021F6  6E0B               	movwf	??_motor_stop^0,c
  1107   0021F8  460B               	rlncf	??_motor_stop^0,f,c
  1108   0021FA  460B               	rlncf	??_motor_stop^0,f,c
  1109   0021FC  460B               	rlncf	??_motor_stop^0,f,c
  1110   0021FE  500D               	movf	motor_stop@obj2^0,w,c
  1111   002200  180B               	xorwf	??_motor_stop^0,w,c
  1112   002202  0BC7               	andlw	-57
  1113   002204  180B               	xorwf	??_motor_stop^0,w,c
  1114   002206  6E0D               	movwf	motor_stop@obj2^0,c
  1115   002208  9C0D               	bcf	motor_stop@obj2^0,6,c
  1116   00220A  500A               	movf	motor_stop@motor^0,w,c
  1117   00220C  6ED9               	movwf	fsr2l,c
  1118   00220E  6ADA               	clrf	fsr2h,c
  1119   002210  0E01               	movlw	1
  1120   002212  26D9               	addwf	fsr2l,f,c
  1121   002214  AEDF               	btfss	indf2,7,c
  1122   002216  D002               	bra	u2735
  1123   002218  8E0D               	bsf	motor_stop@obj2^0,7,c
  1124   00221A  D001               	bra	u2737
  1125   00221C                     u2735:
  1126   00221C  9E0D               	bcf	motor_stop@obj2^0,7,c
  1127   00221E                     u2737:
  1128   00221E                     
  1129                           ;ECU_layer/MOTOR/ecu_motor.c: 118:     gpio_pin_write_logic(&obj1,LOW);
  1130   00221E  0E0C               	movlw	low motor_stop@obj1
  1131   002220  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1132   002222  0E00               	movlw	0
  1133   002224  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1134   002226  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1135   00222A                     
  1136                           ;ECU_layer/MOTOR/ecu_motor.c: 119:     gpio_pin_write_logic(&obj2,LOW);
  1137   00222A  0E0D               	movlw	low motor_stop@obj2
  1138   00222C  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1139   00222E  0E00               	movlw	0
  1140   002230  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1141   002232  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1142   002236                     l543:
  1143   002236  0012               	return		;funcret
  1144   002238                     __end_of_motor_stop:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _motor_move_right *****************
  1148 ;; Defined at:
  1149 ;;		line 43 in file "ECU_layer/MOTOR/ecu_motor.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  motor           1    9[COMRAM] PTR const struct .
  1152 ;;		 -> AIR_CONDITIONER(2), HEATER(2), 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  obj2            1   12[COMRAM] struct .
  1155 ;;  obj1            1   11[COMRAM] struct .
  1156 ;;  ret             1    0        unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      unsigned char 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;Total ram usage:        4 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 3
  1173 ;; This function calls:
  1174 ;;		_gpio_pin_write_logic
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text2
  1181   002238                     __ptext2:
  1182                           	callstack 0
  1183   002238                     _motor_move_right:
  1184                           	callstack 27
  1185   002238                     
  1186                           ;ECU_layer/MOTOR/ecu_motor.c: 45: if(((void*)0) == motor){
  1187   002238  500A               	movf	motor_move_right@motor^0,w,c
  1188   00223A  A4D8               	btfss	status,2,c
  1189   00223C  EF22  F011         	goto	u2681
  1190   002240  EF24  F011         	goto	u2680
  1191   002244                     u2681:
  1192   002244  EF26  F011         	goto	l519
  1193   002248                     u2680:
  1194   002248                     
  1195                           ;ECU_layer/MOTOR/ecu_motor.c: 47: }
  1196   002248  EF80  F011         	goto	l525
  1197   00224C                     l519:
  1198                           
  1199                           ;ECU_layer/MOTOR/ecu_motor.c: 49:     pin_config_t obj1 ={
  1200   00224C  C058  F00C         	movff	motor_move_right@F3071,motor_move_right@obj1
  1201   002250  500A               	movf	motor_move_right@motor^0,w,c
  1202   002252  6ED9               	movwf	fsr2l,c
  1203   002254  6ADA               	clrf	fsr2h,c
  1204   002256  50DF               	movf	223,w,c
  1205   002258  0B0F               	andlw	15
  1206   00225A  6E0B               	movwf	??_motor_move_right^0,c
  1207   00225C  500C               	movf	motor_move_right@obj1^0,w,c
  1208   00225E  180B               	xorwf	??_motor_move_right^0,w,c
  1209   002260  0BF8               	andlw	-8
  1210   002262  180B               	xorwf	??_motor_move_right^0,w,c
  1211   002264  6E0C               	movwf	motor_move_right@obj1^0,c
  1212   002266  500A               	movf	motor_move_right@motor^0,w,c
  1213   002268  6ED9               	movwf	fsr2l,c
  1214   00226A  6ADA               	clrf	fsr2h,c
  1215   00226C  38DF               	swapf	223,w,c
  1216   00226E  0B07               	andlw	7
  1217   002270  6E0B               	movwf	??_motor_move_right^0,c
  1218   002272  460B               	rlncf	??_motor_move_right^0,f,c
  1219   002274  460B               	rlncf	??_motor_move_right^0,f,c
  1220   002276  460B               	rlncf	??_motor_move_right^0,f,c
  1221   002278  500C               	movf	motor_move_right@obj1^0,w,c
  1222   00227A  180B               	xorwf	??_motor_move_right^0,w,c
  1223   00227C  0BC7               	andlw	-57
  1224   00227E  180B               	xorwf	??_motor_move_right^0,w,c
  1225   002280  6E0C               	movwf	motor_move_right@obj1^0,c
  1226   002282  9C0C               	bcf	motor_move_right@obj1^0,6,c
  1227   002284  500A               	movf	motor_move_right@motor^0,w,c
  1228   002286  6ED9               	movwf	fsr2l,c
  1229   002288  6ADA               	clrf	fsr2h,c
  1230   00228A  AEDF               	btfss	indf2,7,c
  1231   00228C  D002               	bra	u2695
  1232   00228E  8E0C               	bsf	motor_move_right@obj1^0,7,c
  1233   002290  D001               	bra	u2697
  1234   002292                     u2695:
  1235   002292  9E0C               	bcf	motor_move_right@obj1^0,7,c
  1236   002294                     u2697:
  1237   002294                     
  1238                           ;ECU_layer/MOTOR/ecu_motor.c: 55:     pin_config_t obj2={
  1239   002294  C057  F00D         	movff	motor_move_right@F3073,motor_move_right@obj2
  1240   002298  500A               	movf	motor_move_right@motor^0,w,c
  1241   00229A  6ED9               	movwf	fsr2l,c
  1242   00229C  6ADA               	clrf	fsr2h,c
  1243   00229E  0E01               	movlw	1
  1244   0022A0  26D9               	addwf	fsr2l,f,c
  1245   0022A2  50DF               	movf	223,w,c
  1246   0022A4  0B0F               	andlw	15
  1247   0022A6  6E0B               	movwf	??_motor_move_right^0,c
  1248   0022A8  500D               	movf	motor_move_right@obj2^0,w,c
  1249   0022AA  180B               	xorwf	??_motor_move_right^0,w,c
  1250   0022AC  0BF8               	andlw	-8
  1251   0022AE  180B               	xorwf	??_motor_move_right^0,w,c
  1252   0022B0  6E0D               	movwf	motor_move_right@obj2^0,c
  1253   0022B2  500A               	movf	motor_move_right@motor^0,w,c
  1254   0022B4  6ED9               	movwf	fsr2l,c
  1255   0022B6  6ADA               	clrf	fsr2h,c
  1256   0022B8  0E01               	movlw	1
  1257   0022BA  26D9               	addwf	fsr2l,f,c
  1258   0022BC  38DF               	swapf	223,w,c
  1259   0022BE  0B07               	andlw	7
  1260   0022C0  6E0B               	movwf	??_motor_move_right^0,c
  1261   0022C2  460B               	rlncf	??_motor_move_right^0,f,c
  1262   0022C4  460B               	rlncf	??_motor_move_right^0,f,c
  1263   0022C6  460B               	rlncf	??_motor_move_right^0,f,c
  1264   0022C8  500D               	movf	motor_move_right@obj2^0,w,c
  1265   0022CA  180B               	xorwf	??_motor_move_right^0,w,c
  1266   0022CC  0BC7               	andlw	-57
  1267   0022CE  180B               	xorwf	??_motor_move_right^0,w,c
  1268   0022D0  6E0D               	movwf	motor_move_right@obj2^0,c
  1269   0022D2  9C0D               	bcf	motor_move_right@obj2^0,6,c
  1270   0022D4  500A               	movf	motor_move_right@motor^0,w,c
  1271   0022D6  6ED9               	movwf	fsr2l,c
  1272   0022D8  6ADA               	clrf	fsr2h,c
  1273   0022DA  0E01               	movlw	1
  1274   0022DC  26D9               	addwf	fsr2l,f,c
  1275   0022DE  AEDF               	btfss	indf2,7,c
  1276   0022E0  D002               	bra	u2705
  1277   0022E2  8E0D               	bsf	motor_move_right@obj2^0,7,c
  1278   0022E4  D001               	bra	u2707
  1279   0022E6                     u2705:
  1280   0022E6  9E0D               	bcf	motor_move_right@obj2^0,7,c
  1281   0022E8                     u2707:
  1282   0022E8                     
  1283                           ;ECU_layer/MOTOR/ecu_motor.c: 61:     gpio_pin_write_logic(&obj1,HIGH);
  1284   0022E8  0E0C               	movlw	low motor_move_right@obj1
  1285   0022EA  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1286   0022EC  0E01               	movlw	1
  1287   0022EE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1288   0022F0  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1289   0022F4                     
  1290                           ;ECU_layer/MOTOR/ecu_motor.c: 62:     gpio_pin_write_logic(&obj2,LOW);
  1291   0022F4  0E0D               	movlw	low motor_move_right@obj2
  1292   0022F6  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1293   0022F8  0E00               	movlw	0
  1294   0022FA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1295   0022FC  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1296   002300                     l525:
  1297   002300  0012               	return		;funcret
  1298   002302                     __end_of_motor_move_right:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _motor_init *****************
  1302 ;; Defined at:
  1303 ;;		line 13 in file "ECU_layer/MOTOR/ecu_motor.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  motor           1    9[COMRAM] PTR const struct .
  1306 ;;		 -> AIR_CONDITIONER(2), HEATER(2), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  obj2            1   13[COMRAM] struct .
  1309 ;;  obj1            1   12[COMRAM] struct .
  1310 ;;  ret             1   11[COMRAM] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      unsigned char 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        5 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 3
  1327 ;; This function calls:
  1328 ;;		_gpio_pin_direction_init
  1329 ;;		_gpio_pin_write_logic
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text3
  1336   001FAA                     __ptext3:
  1337                           	callstack 0
  1338   001FAA                     _motor_init:
  1339                           	callstack 27
  1340   001FAA                     
  1341                           ;ECU_layer/MOTOR/ecu_motor.c: 14: Std_ReturnType ret = (Std_ReturnType)0x01;
  1342   001FAA  0E01               	movlw	1
  1343   001FAC  6E0C               	movwf	motor_init@ret^0,c
  1344                           
  1345                           ;ECU_layer/MOTOR/ecu_motor.c: 15: if(((void*)0) == motor){
  1346   001FAE  500A               	movf	motor_init@motor^0,w,c
  1347   001FB0  A4D8               	btfss	status,2,c
  1348   001FB2  EFDD  F00F         	goto	u2611
  1349   001FB6  EFDF  F00F         	goto	u2610
  1350   001FBA                     u2611:
  1351   001FBA  EFE3  F00F         	goto	l510
  1352   001FBE                     u2610:
  1353   001FBE                     
  1354                           ;ECU_layer/MOTOR/ecu_motor.c: 16:     ret = (Std_ReturnType)0x00;
  1355   001FBE  0E00               	movlw	0
  1356   001FC0  6E0C               	movwf	motor_init@ret^0,c
  1357                           
  1358                           ;ECU_layer/MOTOR/ecu_motor.c: 17: }
  1359   001FC2  EF49  F010         	goto	l3488
  1360   001FC6                     l510:
  1361                           
  1362                           ;ECU_layer/MOTOR/ecu_motor.c: 19:     pin_config_t obj1 ={
  1363   001FC6  C05A  F00D         	movff	motor_init@F3064,motor_init@obj1
  1364   001FCA  500A               	movf	motor_init@motor^0,w,c
  1365   001FCC  6ED9               	movwf	fsr2l,c
  1366   001FCE  6ADA               	clrf	fsr2h,c
  1367   001FD0  50DF               	movf	223,w,c
  1368   001FD2  0B0F               	andlw	15
  1369   001FD4  6E0B               	movwf	??_motor_init^0,c
  1370   001FD6  500D               	movf	motor_init@obj1^0,w,c
  1371   001FD8  180B               	xorwf	??_motor_init^0,w,c
  1372   001FDA  0BF8               	andlw	-8
  1373   001FDC  180B               	xorwf	??_motor_init^0,w,c
  1374   001FDE  6E0D               	movwf	motor_init@obj1^0,c
  1375   001FE0  500A               	movf	motor_init@motor^0,w,c
  1376   001FE2  6ED9               	movwf	fsr2l,c
  1377   001FE4  6ADA               	clrf	fsr2h,c
  1378   001FE6  38DF               	swapf	223,w,c
  1379   001FE8  0B07               	andlw	7
  1380   001FEA  6E0B               	movwf	??_motor_init^0,c
  1381   001FEC  460B               	rlncf	??_motor_init^0,f,c
  1382   001FEE  460B               	rlncf	??_motor_init^0,f,c
  1383   001FF0  460B               	rlncf	??_motor_init^0,f,c
  1384   001FF2  500D               	movf	motor_init@obj1^0,w,c
  1385   001FF4  180B               	xorwf	??_motor_init^0,w,c
  1386   001FF6  0BC7               	andlw	-57
  1387   001FF8  180B               	xorwf	??_motor_init^0,w,c
  1388   001FFA  6E0D               	movwf	motor_init@obj1^0,c
  1389   001FFC  9C0D               	bcf	motor_init@obj1^0,6,c
  1390   001FFE  500A               	movf	motor_init@motor^0,w,c
  1391   002000  6ED9               	movwf	fsr2l,c
  1392   002002  6ADA               	clrf	fsr2h,c
  1393   002004  AEDF               	btfss	indf2,7,c
  1394   002006  D002               	bra	u2625
  1395   002008  8E0D               	bsf	motor_init@obj1^0,7,c
  1396   00200A  D001               	bra	u2627
  1397   00200C                     u2625:
  1398   00200C  9E0D               	bcf	motor_init@obj1^0,7,c
  1399   00200E                     u2627:
  1400   00200E                     
  1401                           ;ECU_layer/MOTOR/ecu_motor.c: 25:     pin_config_t obj2={
  1402   00200E  C059  F00E         	movff	motor_init@F3066,motor_init@obj2
  1403   002012  500A               	movf	motor_init@motor^0,w,c
  1404   002014  6ED9               	movwf	fsr2l,c
  1405   002016  6ADA               	clrf	fsr2h,c
  1406   002018  0E01               	movlw	1
  1407   00201A  26D9               	addwf	fsr2l,f,c
  1408   00201C  50DF               	movf	223,w,c
  1409   00201E  0B0F               	andlw	15
  1410   002020  6E0B               	movwf	??_motor_init^0,c
  1411   002022  500E               	movf	motor_init@obj2^0,w,c
  1412   002024  180B               	xorwf	??_motor_init^0,w,c
  1413   002026  0BF8               	andlw	-8
  1414   002028  180B               	xorwf	??_motor_init^0,w,c
  1415   00202A  6E0E               	movwf	motor_init@obj2^0,c
  1416   00202C  500A               	movf	motor_init@motor^0,w,c
  1417   00202E  6ED9               	movwf	fsr2l,c
  1418   002030  6ADA               	clrf	fsr2h,c
  1419   002032  0E01               	movlw	1
  1420   002034  26D9               	addwf	fsr2l,f,c
  1421   002036  38DF               	swapf	223,w,c
  1422   002038  0B07               	andlw	7
  1423   00203A  6E0B               	movwf	??_motor_init^0,c
  1424   00203C  460B               	rlncf	??_motor_init^0,f,c
  1425   00203E  460B               	rlncf	??_motor_init^0,f,c
  1426   002040  460B               	rlncf	??_motor_init^0,f,c
  1427   002042  500E               	movf	motor_init@obj2^0,w,c
  1428   002044  180B               	xorwf	??_motor_init^0,w,c
  1429   002046  0BC7               	andlw	-57
  1430   002048  180B               	xorwf	??_motor_init^0,w,c
  1431   00204A  6E0E               	movwf	motor_init@obj2^0,c
  1432   00204C  9C0E               	bcf	motor_init@obj2^0,6,c
  1433   00204E  500A               	movf	motor_init@motor^0,w,c
  1434   002050  6ED9               	movwf	fsr2l,c
  1435   002052  6ADA               	clrf	fsr2h,c
  1436   002054  0E01               	movlw	1
  1437   002056  26D9               	addwf	fsr2l,f,c
  1438   002058  AEDF               	btfss	indf2,7,c
  1439   00205A  D002               	bra	u2635
  1440   00205C  8E0E               	bsf	motor_init@obj2^0,7,c
  1441   00205E  D001               	bra	u2637
  1442   002060                     u2635:
  1443   002060  9E0E               	bcf	motor_init@obj2^0,7,c
  1444   002062                     u2637:
  1445   002062                     
  1446                           ;ECU_layer/MOTOR/ecu_motor.c: 31:     gpio_pin_direction_init(&obj1);
  1447   002062  0E0D               	movlw	low motor_init@obj1
  1448   002064  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  1449   002066  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  1450   00206A                     
  1451                           ;ECU_layer/MOTOR/ecu_motor.c: 32:     gpio_pin_write_logic(&obj1,obj1.logic);
  1452   00206A  0E0D               	movlw	low motor_init@obj1
  1453   00206C  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1454   00206E  0E00               	movlw	0
  1455   002070  BE0D               	btfsc	motor_init@obj1^0,7,c
  1456   002072  0E01               	movlw	1
  1457   002074  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1458   002076  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1459   00207A                     
  1460                           ;ECU_layer/MOTOR/ecu_motor.c: 33:     gpio_pin_direction_init(&obj2);
  1461   00207A  0E0E               	movlw	low motor_init@obj2
  1462   00207C  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  1463   00207E  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  1464   002082                     
  1465                           ;ECU_layer/MOTOR/ecu_motor.c: 34:     gpio_pin_write_logic(&obj2,obj2.logic);
  1466   002082  0E0E               	movlw	low motor_init@obj2
  1467   002084  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1468   002086  0E00               	movlw	0
  1469   002088  BE0E               	btfsc	motor_init@obj2^0,7,c
  1470   00208A  0E01               	movlw	1
  1471   00208C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1472   00208E  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1473   002092                     l3488:
  1474                           
  1475                           ;ECU_layer/MOTOR/ecu_motor.c: 36: return ret;
  1476   002092  500C               	movf	motor_init@ret^0,w,c
  1477   002094  0012               	return		;funcret
  1478   002096                     __end_of_motor_init:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _lcd_8bit_send_string_pos *****************
  1482 ;; Defined at:
  1483 ;;		line 320 in file "ECU_layer/LCD/ecu_lcd.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  lcd             1   23[COMRAM] PTR const struct .
  1486 ;;		 -> lcd_obj(10), 
  1487 ;;  row             1   24[COMRAM] unsigned char 
  1488 ;;  col             1   25[COMRAM] unsigned char 
  1489 ;;  str             1   26[COMRAM] PTR unsigned char 
  1490 ;;		 -> STR_1(13), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  ret             1   27[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:        5 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 6
  1509 ;; This function calls:
  1510 ;;		_lcd_8bit_send_string
  1511 ;;		_lcd_8bit_set_cursor
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text4
  1518   002806                     __ptext4:
  1519                           	callstack 0
  1520   002806                     _lcd_8bit_send_string_pos:
  1521                           	callstack 24
  1522   002806                     
  1523                           ;ECU_layer/LCD/ecu_lcd.c: 322:     if((((void*)0) == lcd) || (((void*)0) == str)){
  1524   002806  5018               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  1525   002808  B4D8               	btfsc	status,2,c
  1526   00280A  EF09  F014         	goto	u2591
  1527   00280E  EF0B  F014         	goto	u2590
  1528   002812                     u2591:
  1529   002812  EF13  F014         	goto	l3450
  1530   002816                     u2590:
  1531   002816  501B               	movf	lcd_8bit_send_string_pos@str^0,w,c
  1532   002818  A4D8               	btfss	status,2,c
  1533   00281A  EF11  F014         	goto	u2601
  1534   00281E  EF13  F014         	goto	u2600
  1535   002822                     u2601:
  1536   002822  EF17  F014         	goto	l3452
  1537   002826                     u2600:
  1538   002826                     l3450:
  1539                           
  1540                           ;ECU_layer/LCD/ecu_lcd.c: 323:         ret = (Std_ReturnType)0x00;
  1541   002826  0E00               	movlw	0
  1542   002828  6E1C               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1543                           
  1544                           ;ECU_layer/LCD/ecu_lcd.c: 324:     }
  1545   00282A  EF26  F014         	goto	l3456
  1546   00282E                     l3452:
  1547   00282E  C018  F012         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  1548   002832  C019  F013         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1549   002836  C01A  F014         	movff	lcd_8bit_send_string_pos@col,lcd_8bit_set_cursor@column
  1550   00283A  ECDD  F011         	call	_lcd_8bit_set_cursor	;wreg free
  1551   00283E                     
  1552                           ;ECU_layer/LCD/ecu_lcd.c: 327:         ret = lcd_8bit_send_string(lcd,str);
  1553   00283E  C018  F012         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
  1554   002842  C01B  F013         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
  1555   002846  EC3B  F013         	call	_lcd_8bit_send_string	;wreg free
  1556   00284A  6E1C               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1557   00284C                     l3456:
  1558                           
  1559                           ;ECU_layer/LCD/ecu_lcd.c: 331:     return ret ;
  1560   00284C  501C               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1561   00284E  0012               	return		;funcret
  1562   002850                     __end_of_lcd_8bit_send_string_pos:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _lcd_8bit_send_string *****************
  1566 ;; Defined at:
  1567 ;;		line 299 in file "ECU_layer/LCD/ecu_lcd.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  lcd             1   17[COMRAM] PTR const struct .
  1570 ;;		 -> lcd_obj(10), 
  1571 ;;  str             1   18[COMRAM] PTR unsigned char 
  1572 ;;		 -> STR_1(13), 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  ret             1   19[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      unsigned char 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 5
  1591 ;; This function calls:
  1592 ;;		_lcd_8bit_send_char_data
  1593 ;; This function is called by:
  1594 ;;		_lcd_8bit_send_string_pos
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text5
  1599   002676                     __ptext5:
  1600                           	callstack 0
  1601   002676                     _lcd_8bit_send_string:
  1602                           	callstack 24
  1603   002676                     
  1604                           ;ECU_layer/LCD/ecu_lcd.c: 300:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1605   002676  0E01               	movlw	1
  1606   002678  6E14               	movwf	lcd_8bit_send_string@ret^0,c
  1607                           
  1608                           ;ECU_layer/LCD/ecu_lcd.c: 301:     if((((void*)0) == lcd) || (((void*)0) == str)){
  1609   00267A  5012               	movf	lcd_8bit_send_string@lcd^0,w,c
  1610   00267C  B4D8               	btfsc	status,2,c
  1611   00267E  EF43  F013         	goto	u2541
  1612   002682  EF45  F013         	goto	u2540
  1613   002686                     u2541:
  1614   002686  EF4D  F013         	goto	l3388
  1615   00268A                     u2540:
  1616   00268A  5013               	movf	lcd_8bit_send_string@str^0,w,c
  1617   00268C  A4D8               	btfss	status,2,c
  1618   00268E  EF4B  F013         	goto	u2551
  1619   002692  EF4D  F013         	goto	u2550
  1620   002696                     u2551:
  1621   002696  EF5F  F013         	goto	l3394
  1622   00269A                     u2550:
  1623   00269A                     l3388:
  1624                           
  1625                           ;ECU_layer/LCD/ecu_lcd.c: 302:         ret = (Std_ReturnType)0x00;
  1626   00269A  0E00               	movlw	0
  1627   00269C  6E14               	movwf	lcd_8bit_send_string@ret^0,c
  1628                           
  1629                           ;ECU_layer/LCD/ecu_lcd.c: 303:     }
  1630   00269E  EF6E  F013         	goto	l3396
  1631   0026A2                     l3390:
  1632                           
  1633                           ;ECU_layer/LCD/ecu_lcd.c: 306:             ret = lcd_8bit_send_char_data(lcd , *str);
  1634   0026A2  C012  F00C         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
  1635   0026A6  C013  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1636   0026AA                     	if	1	;There is more than 1 active tblptr byte
  1637   0026AA  0E10               	movlw	high __smallconst
  1638   0026AC  6EF7               	movwf	tblptrh,c
  1639   0026AE                     	endif
  1640   0026AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1641   0026AE  6AF8               	clrf	tblptru,c
  1642   0026B0                     	endif
  1643   0026B0                     	if	0	;tblptru may be non-zero
  1644   0026B0                     	endif
  1645   0026B0  0008               	tblrd		*
  1646   0026B2  CFF5 F00D          	movff	tablat,lcd_8bit_send_char_data@data
  1647   0026B6  EC8B  F012         	call	_lcd_8bit_send_char_data	;wreg free
  1648   0026BA  6E14               	movwf	lcd_8bit_send_string@ret^0,c
  1649   0026BC                     
  1650                           ;ECU_layer/LCD/ecu_lcd.c: 307:             str++;
  1651   0026BC  2A13               	incf	lcd_8bit_send_string@str^0,f,c
  1652   0026BE                     l3394:
  1653                           
  1654                           ;ECU_layer/LCD/ecu_lcd.c: 305:         while(*str){
  1655   0026BE  C013  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1656   0026C2                     	if	1	;There is more than 1 active tblptr byte
  1657   0026C2  0E10               	movlw	high __smallconst
  1658   0026C4  6EF7               	movwf	tblptrh,c
  1659   0026C6                     	endif
  1660   0026C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1661   0026C6  6AF8               	clrf	tblptru,c
  1662   0026C8                     	endif
  1663   0026C8                     	if	0	;tblptru may be non-zero
  1664   0026C8                     	endif
  1665   0026C8  0008               	tblrd		*
  1666   0026CA  50F5               	movf	tablat,w,c
  1667   0026CC  0900               	iorlw	0
  1668   0026CE  A4D8               	btfss	status,2,c
  1669   0026D0  EF6C  F013         	goto	u2561
  1670   0026D4  EF6E  F013         	goto	u2560
  1671   0026D8                     u2561:
  1672   0026D8  EF51  F013         	goto	l3390
  1673   0026DC                     u2560:
  1674   0026DC                     l3396:
  1675                           
  1676                           ;ECU_layer/LCD/ecu_lcd.c: 310:     return ret ;
  1677   0026DC  5014               	movf	lcd_8bit_send_string@ret^0,w,c
  1678   0026DE  0012               	return		;funcret
  1679   0026E0                     __end_of_lcd_8bit_send_string:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _lcd_8bit_send_char_data_pos *****************
  1683 ;; Defined at:
  1684 ;;		line 282 in file "ECU_layer/LCD/ecu_lcd.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  lcd             1   23[COMRAM] PTR const struct .
  1687 ;;		 -> lcd_obj(10), 
  1688 ;;  row             1   24[COMRAM] unsigned char 
  1689 ;;  col             1   25[COMRAM] unsigned char 
  1690 ;;  data            1   26[COMRAM] unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  ret             1   27[COMRAM] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      unsigned char 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;Total ram usage:        5 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 6
  1709 ;; This function calls:
  1710 ;;		_lcd_8bit_send_char_data
  1711 ;;		_lcd_8bit_set_cursor
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;;		_lcd_8bit_send_custom_char
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text6
  1719   002914                     __ptext6:
  1720                           	callstack 0
  1721   002914                     _lcd_8bit_send_char_data_pos:
  1722                           	callstack 24
  1723   002914                     
  1724                           ;ECU_layer/LCD/ecu_lcd.c: 284:     if(((void*)0) == lcd){
  1725   002914  5018               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
  1726   002916  A4D8               	btfss	status,2,c
  1727   002918  EF90  F014         	goto	u2671
  1728   00291C  EF92  F014         	goto	u2670
  1729   002920                     u2671:
  1730   002920  EF96  F014         	goto	l3510
  1731   002924                     u2670:
  1732   002924                     
  1733                           ;ECU_layer/LCD/ecu_lcd.c: 285:         ret = (Std_ReturnType)0x00;
  1734   002924  0E00               	movlw	0
  1735   002926  6E1C               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1736                           
  1737                           ;ECU_layer/LCD/ecu_lcd.c: 286:     }
  1738   002928  EFA6  F014         	goto	l3512
  1739   00292C                     l3510:
  1740                           
  1741                           ;ECU_layer/LCD/ecu_lcd.c: 288:         ret = lcd_8bit_set_cursor(lcd ,row , col);
  1742   00292C  C018  F012         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
  1743   002930  C019  F013         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
  1744   002934  C01A  F014         	movff	lcd_8bit_send_char_data_pos@col,lcd_8bit_set_cursor@column
  1745   002938  ECDD  F011         	call	_lcd_8bit_set_cursor	;wreg free
  1746   00293C  6E1C               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1747                           
  1748                           ;ECU_layer/LCD/ecu_lcd.c: 289:         ret = lcd_8bit_send_char_data(lcd , data);
  1749   00293E  C018  F00C         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
  1750   002942  C01B  F00D         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
  1751   002946  EC8B  F012         	call	_lcd_8bit_send_char_data	;wreg free
  1752   00294A  6E1C               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1753   00294C                     l3512:
  1754                           
  1755                           ;ECU_layer/LCD/ecu_lcd.c: 291:     return ret ;
  1756   00294C  501C               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
  1757   00294E  0012               	return		;funcret
  1758   002950                     __end_of_lcd_8bit_send_char_data_pos:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _lcd_8bit_set_cursor *****************
  1762 ;; Defined at:
  1763 ;;		line 487 in file "ECU_layer/LCD/ecu_lcd.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  lcd             1   17[COMRAM] PTR const struct .
  1766 ;;		 -> lcd_obj(10), 
  1767 ;;  row             1   18[COMRAM] unsigned char 
  1768 ;;  column          1   19[COMRAM] unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  ret             1   22[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      unsigned char 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        6 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 5
  1787 ;; This function calls:
  1788 ;;		_lcd_8bit_send_command
  1789 ;; This function is called by:
  1790 ;;		_lcd_8bit_send_char_data_pos
  1791 ;;		_lcd_8bit_send_string_pos
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text7
  1796   0023BA                     __ptext7:
  1797                           	callstack 0
  1798   0023BA                     _lcd_8bit_set_cursor:
  1799                           	callstack 24
  1800   0023BA                     
  1801                           ;ECU_layer/LCD/ecu_lcd.c: 488: Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1802   0023BA  0E01               	movlw	1
  1803   0023BC  6E17               	movwf	lcd_8bit_set_cursor@ret^0,c
  1804                           
  1805                           ;ECU_layer/LCD/ecu_lcd.c: 489:     if(((void*)0) == lcd){
  1806   0023BE  5012               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1807   0023C0  A4D8               	btfss	status,2,c
  1808   0023C2  EFE5  F011         	goto	u2531
  1809   0023C6  EFE7  F011         	goto	u2530
  1810   0023CA                     u2531:
  1811   0023CA  EFEB  F011         	goto	l3362
  1812   0023CE                     u2530:
  1813   0023CE                     
  1814                           ;ECU_layer/LCD/ecu_lcd.c: 490:         ret = (Std_ReturnType)0x00;
  1815   0023CE  0E00               	movlw	0
  1816   0023D0  6E17               	movwf	lcd_8bit_set_cursor@ret^0,c
  1817                           
  1818                           ;ECU_layer/LCD/ecu_lcd.c: 491:     }
  1819   0023D2  EF33  F012         	goto	l3376
  1820   0023D6                     l3362:
  1821                           
  1822                           ;ECU_layer/LCD/ecu_lcd.c: 493:         column--;
  1823   0023D6  0614               	decf	lcd_8bit_set_cursor@column^0,f,c
  1824                           
  1825                           ;ECU_layer/LCD/ecu_lcd.c: 494:         switch (row){
  1826   0023D8  EF16  F012         	goto	l3374
  1827   0023DC                     l3364:
  1828                           
  1829                           ;ECU_layer/LCD/ecu_lcd.c: 496:                 ret = lcd_8bit_send_command(lcd , (0x80 +
      +                           column));
  1830   0023DC  C012  F00C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1831   0023E0  5014               	movf	lcd_8bit_set_cursor@column^0,w,c
  1832   0023E2  0F80               	addlw	128
  1833   0023E4  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  1834   0023E6  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  1835   0023EA  6E17               	movwf	lcd_8bit_set_cursor@ret^0,c
  1836                           
  1837                           ;ECU_layer/LCD/ecu_lcd.c: 497:                 break ;
  1838   0023EC  EF33  F012         	goto	l3376
  1839   0023F0                     l3366:
  1840                           
  1841                           ;ECU_layer/LCD/ecu_lcd.c: 499:                 ret = lcd_8bit_send_command(lcd , (0xC0 +
      +                           column));
  1842   0023F0  C012  F00C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1843   0023F4  5014               	movf	lcd_8bit_set_cursor@column^0,w,c
  1844   0023F6  0FC0               	addlw	192
  1845   0023F8  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  1846   0023FA  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  1847   0023FE  6E17               	movwf	lcd_8bit_set_cursor@ret^0,c
  1848                           
  1849                           ;ECU_layer/LCD/ecu_lcd.c: 500:                 break;
  1850   002400  EF33  F012         	goto	l3376
  1851   002404                     l3368:
  1852                           
  1853                           ;ECU_layer/LCD/ecu_lcd.c: 502:                 ret = lcd_8bit_send_command(lcd , (0x94 +
      +                           column));
  1854   002404  C012  F00C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1855   002408  5014               	movf	lcd_8bit_set_cursor@column^0,w,c
  1856   00240A  0F94               	addlw	148
  1857   00240C  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  1858   00240E  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  1859   002412  6E17               	movwf	lcd_8bit_set_cursor@ret^0,c
  1860                           
  1861                           ;ECU_layer/LCD/ecu_lcd.c: 503:                 break;
  1862   002414  EF33  F012         	goto	l3376
  1863   002418                     l3370:
  1864                           
  1865                           ;ECU_layer/LCD/ecu_lcd.c: 505:                 ret = lcd_8bit_send_command(lcd , (0xD4 +
      +                           column));
  1866   002418  C012  F00C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1867   00241C  5014               	movf	lcd_8bit_set_cursor@column^0,w,c
  1868   00241E  0FD4               	addlw	212
  1869   002420  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  1870   002422  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  1871   002426  6E17               	movwf	lcd_8bit_set_cursor@ret^0,c
  1872                           
  1873                           ;ECU_layer/LCD/ecu_lcd.c: 506:                 break;
  1874   002428  EF33  F012         	goto	l3376
  1875   00242C                     l3374:
  1876   00242C  5013               	movf	lcd_8bit_set_cursor@row^0,w,c
  1877   00242E  6E15               	movwf	??_lcd_8bit_set_cursor^0,c
  1878   002430  6A16               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1879                           
  1880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 1, Range of values is 0 to 0
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte            4     3 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887   002432  5016               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1888   002434  0A00               	xorlw	0	; case 0
  1889   002436  B4D8               	btfsc	status,2,c
  1890   002438  EF20  F012         	goto	l4456
  1891   00243C  EF33  F012         	goto	l3376
  1892   002440                     l4456:
  1893                           
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 4, Range of values is 1 to 4
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           13     7 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900   002440  5015               	movf	??_lcd_8bit_set_cursor^0,w,c
  1901   002442  0A01               	xorlw	1	; case 1
  1902   002444  B4D8               	btfsc	status,2,c
  1903   002446  EFEE  F011         	goto	l3364
  1904   00244A  0A03               	xorlw	3	; case 2
  1905   00244C  B4D8               	btfsc	status,2,c
  1906   00244E  EFF8  F011         	goto	l3366
  1907   002452  0A01               	xorlw	1	; case 3
  1908   002454  B4D8               	btfsc	status,2,c
  1909   002456  EF02  F012         	goto	l3368
  1910   00245A  0A07               	xorlw	7	; case 4
  1911   00245C  B4D8               	btfsc	status,2,c
  1912   00245E  EF0C  F012         	goto	l3370
  1913   002462  EF33  F012         	goto	l3376
  1914   002466                     l3376:
  1915                           
  1916                           ;ECU_layer/LCD/ecu_lcd.c: 511:     return ret ;
  1917   002466  5017               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1918   002468  0012               	return		;funcret
  1919   00246A                     __end_of_lcd_8bit_set_cursor:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _lcd_8bit_send_char_data *****************
  1923 ;; Defined at:
  1924 ;;		line 259 in file "ECU_layer/LCD/ecu_lcd.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  lcd             1   11[COMRAM] PTR const struct .
  1927 ;;		 -> lcd_obj(10), 
  1928 ;;  data            1   12[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  count           1   16[COMRAM] unsigned char 
  1931 ;;  ret             1   15[COMRAM] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      unsigned char 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;Total ram usage:        6 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; Hardware stack levels required when called: 4
  1948 ;; This function calls:
  1949 ;;		_gpio_pin_write_logic
  1950 ;;		_lcd_8bit_send_enable
  1951 ;; This function is called by:
  1952 ;;		_lcd_8bit_send_char_data_pos
  1953 ;;		_lcd_8bit_send_string
  1954 ;;		_lcd_8bit_send_custom_char
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text8
  1959   002516                     __ptext8:
  1960                           	callstack 0
  1961   002516                     _lcd_8bit_send_char_data:
  1962                           	callstack 24
  1963   002516                     
  1964                           ;ECU_layer/LCD/ecu_lcd.c: 261:     uint8 count =0;
  1965   002516  0E00               	movlw	0
  1966   002518  6E11               	movwf	lcd_8bit_send_char_data@count^0,c
  1967                           
  1968                           ;ECU_layer/LCD/ecu_lcd.c: 262:     if(((void*)0) == lcd){
  1969   00251A  500C               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1970   00251C  A4D8               	btfss	status,2,c
  1971   00251E  EF93  F012         	goto	u2301
  1972   002522  EF95  F012         	goto	u2300
  1973   002526                     u2301:
  1974   002526  EF99  F012         	goto	l3224
  1975   00252A                     u2300:
  1976   00252A                     
  1977                           ;ECU_layer/LCD/ecu_lcd.c: 263:         ret = (Std_ReturnType)0x00;
  1978   00252A  0E00               	movlw	0
  1979   00252C  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1980                           
  1981                           ;ECU_layer/LCD/ecu_lcd.c: 264:     }
  1982   00252E  EFC4  F012         	goto	l3240
  1983   002532                     l3224:
  1984   002532  C00C  F002         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1985   002536  0E01               	movlw	1
  1986   002538  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1987   00253A  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  1988   00253E                     
  1989                           ;ECU_layer/LCD/ecu_lcd.c: 267:         for(count =0 ; count < 8 ; count ++){
  1990   00253E  0E00               	movlw	0
  1991   002540  6E11               	movwf	lcd_8bit_send_char_data@count^0,c
  1992   002542                     l3232:
  1993                           
  1994                           ;ECU_layer/LCD/ecu_lcd.c: 268:             gpio_pin_write_logic(&(lcd->lcd_data[count]) 
      +                          , (data >> count) & (uint8)0x01);
  1995   002542  500C               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1996   002544  2411               	addwf	lcd_8bit_send_char_data@count^0,w,c
  1997   002546  0F02               	addlw	2
  1998   002548  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1999   00254A  C011  F00E         	movff	lcd_8bit_send_char_data@count,??_lcd_8bit_send_char_data
  2000   00254E  C00D  F00F         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  2001   002552  2A0E               	incf	??_lcd_8bit_send_char_data^0,f,c
  2002   002554  EFAE  F012         	goto	u2314
  2003   002558                     u2315:
  2004   002558  90D8               	bcf	status,0,c
  2005   00255A  320F               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  2006   00255C                     u2314:
  2007   00255C  2E0E               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  2008   00255E  EFAC  F012         	goto	u2315
  2009   002562  500F               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  2010   002564  0B01               	andlw	1
  2011   002566  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2012   002568  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2013   00256C                     
  2014                           ;ECU_layer/LCD/ecu_lcd.c: 269:         }
  2015   00256C  2A11               	incf	lcd_8bit_send_char_data@count^0,f,c
  2016   00256E  0E07               	movlw	7
  2017   002570  6411               	cpfsgt	lcd_8bit_send_char_data@count^0,c
  2018   002572  EFBD  F012         	goto	u2321
  2019   002576  EFBF  F012         	goto	u2320
  2020   00257A                     u2321:
  2021   00257A  EFA1  F012         	goto	l3232
  2022   00257E                     u2320:
  2023   00257E                     
  2024                           ;ECU_layer/LCD/ecu_lcd.c: 270:         ret = lcd_8bit_send_enable(lcd);
  2025   00257E  C00C  F00A         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable@lcd
  2026   002582  EC6B  F014         	call	_lcd_8bit_send_enable	;wreg free
  2027   002586  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  2028   002588                     l3240:
  2029                           
  2030                           ;ECU_layer/LCD/ecu_lcd.c: 272:     return ret ;
  2031   002588  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  2032   00258A  0012               	return		;funcret
  2033   00258C                     __end_of_lcd_8bit_send_char_data:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function _lcd_8bit_init *****************
  2037 ;; Defined at:
  2038 ;;		line 189 in file "ECU_layer/LCD/ecu_lcd.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  lcd             1   17[COMRAM] PTR const struct .
  2041 ;;		 -> lcd_obj(10), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  ret             1   19[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      unsigned char 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2053 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;Total ram usage:        3 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 5
  2060 ;; This function calls:
  2061 ;;		_gpio_pin_direction_init
  2062 ;;		_gpio_pin_write_logic
  2063 ;;		_lcd_8bit_send_command
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text9
  2070   0016E2                     __ptext9:
  2071                           	callstack 0
  2072   0016E2                     _lcd_8bit_init:
  2073                           	callstack 25
  2074   0016E2                     
  2075                           ;ECU_layer/LCD/ecu_lcd.c: 191:     if(((void*)0) == lcd){
  2076   0016E2  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2077   0016E4  A4D8               	btfss	status,2,c
  2078   0016E6  EF77  F00B         	goto	u2571
  2079   0016EA  EF79  F00B         	goto	u2570
  2080   0016EE                     u2571:
  2081   0016EE  EF7D  F00B         	goto	l3404
  2082   0016F2                     u2570:
  2083   0016F2                     
  2084                           ;ECU_layer/LCD/ecu_lcd.c: 192:         ret = (Std_ReturnType)0x00;
  2085   0016F2  0E00               	movlw	0
  2086   0016F4  6E14               	movwf	lcd_8bit_init@ret^0,c
  2087                           
  2088                           ;ECU_layer/LCD/ecu_lcd.c: 193:     }
  2089   0016F6  EF97  F00C         	goto	l3414
  2090   0016FA                     l3404:
  2091                           
  2092                           ;ECU_layer/LCD/ecu_lcd.c: 195:       ret= gpio_pin_direction_init(&(lcd->lcd_rs));
  2093   0016FA  C012  F002         	movff	lcd_8bit_init@lcd,gpio_pin_direction_init@_pin_config
  2094   0016FE  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2095   001702  6E14               	movwf	lcd_8bit_init@ret^0,c
  2096                           
  2097                           ;ECU_layer/LCD/ecu_lcd.c: 196:       ret= gpio_pin_write_logic(&(lcd->lcd_rs),lcd->lcd_r
      +                          s.logic);
  2098   001704  C012  F002         	movff	lcd_8bit_init@lcd,gpio_pin_write_logic@_pin_config
  2099   001708  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2100   00170A  6ED9               	movwf	fsr2l,c
  2101   00170C  6ADA               	clrf	fsr2h,c
  2102   00170E  0E00               	movlw	0
  2103   001710  BEDF               	btfsc	indf2,7,c
  2104   001712  0E01               	movlw	1
  2105   001714  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2106   001716  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2107   00171A  6E14               	movwf	lcd_8bit_init@ret^0,c
  2108                           
  2109                           ;ECU_layer/LCD/ecu_lcd.c: 197:       ret= gpio_pin_direction_init(&(lcd->lcd_en));
  2110   00171C  2812               	incf	lcd_8bit_init@lcd^0,w,c
  2111   00171E  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2112   001720  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2113   001724  6E14               	movwf	lcd_8bit_init@ret^0,c
  2114                           
  2115                           ;ECU_layer/LCD/ecu_lcd.c: 198:       ret= gpio_pin_write_logic(&(lcd->lcd_en),lcd->lcd_e
      +                          n.logic);
  2116   001726  2812               	incf	lcd_8bit_init@lcd^0,w,c
  2117   001728  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2118   00172A  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2119   00172C  6ED9               	movwf	fsr2l,c
  2120   00172E  6ADA               	clrf	fsr2h,c
  2121   001730  0E01               	movlw	1
  2122   001732  26D9               	addwf	fsr2l,f,c
  2123   001734  0E00               	movlw	0
  2124   001736  BEDF               	btfsc	indf2,7,c
  2125   001738  0E01               	movlw	1
  2126   00173A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2127   00173C  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2128   001740  6E14               	movwf	lcd_8bit_init@ret^0,c
  2129                           
  2130                           ;ECU_layer/LCD/ecu_lcd.c: 199:       ret= gpio_pin_direction_init(&(lcd->lcd_data[0]));
  2131   001742  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2132   001744  0F02               	addlw	2
  2133   001746  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2134   001748  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2135   00174C  6E14               	movwf	lcd_8bit_init@ret^0,c
  2136                           
  2137                           ;ECU_layer/LCD/ecu_lcd.c: 200:       ret= gpio_pin_direction_init(&(lcd->lcd_data[1]));
  2138   00174E  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2139   001750  0F03               	addlw	3
  2140   001752  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2141   001754  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2142   001758  6E14               	movwf	lcd_8bit_init@ret^0,c
  2143                           
  2144                           ;ECU_layer/LCD/ecu_lcd.c: 201:       ret= gpio_pin_direction_init(&(lcd->lcd_data[2]));
  2145   00175A  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2146   00175C  0F04               	addlw	4
  2147   00175E  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2148   001760  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2149   001764  6E14               	movwf	lcd_8bit_init@ret^0,c
  2150                           
  2151                           ;ECU_layer/LCD/ecu_lcd.c: 202:       ret= gpio_pin_direction_init(&(lcd->lcd_data[3]));
  2152   001766  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2153   001768  0F05               	addlw	5
  2154   00176A  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2155   00176C  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2156   001770  6E14               	movwf	lcd_8bit_init@ret^0,c
  2157                           
  2158                           ;ECU_layer/LCD/ecu_lcd.c: 203:       ret= gpio_pin_direction_init(&(lcd->lcd_data[4]));
  2159   001772  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2160   001774  0F06               	addlw	6
  2161   001776  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2162   001778  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2163   00177C  6E14               	movwf	lcd_8bit_init@ret^0,c
  2164                           
  2165                           ;ECU_layer/LCD/ecu_lcd.c: 204:       ret= gpio_pin_direction_init(&(lcd->lcd_data[5]));
  2166   00177E  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2167   001780  0F07               	addlw	7
  2168   001782  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2169   001784  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2170   001788  6E14               	movwf	lcd_8bit_init@ret^0,c
  2171                           
  2172                           ;ECU_layer/LCD/ecu_lcd.c: 205:       ret= gpio_pin_direction_init(&(lcd->lcd_data[6]));
  2173   00178A  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2174   00178C  0F08               	addlw	8
  2175   00178E  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2176   001790  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2177   001794  6E14               	movwf	lcd_8bit_init@ret^0,c
  2178                           
  2179                           ;ECU_layer/LCD/ecu_lcd.c: 206:       ret= gpio_pin_direction_init(&(lcd->lcd_data[7]));
  2180   001796  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2181   001798  0F09               	addlw	9
  2182   00179A  6E02               	movwf	gpio_pin_direction_init@_pin_config^0,c
  2183   00179C  EC36  F00E         	call	_gpio_pin_direction_init	;wreg free
  2184   0017A0  6E14               	movwf	lcd_8bit_init@ret^0,c
  2185                           
  2186                           ;ECU_layer/LCD/ecu_lcd.c: 207:       ret= gpio_pin_write_logic(&(lcd->lcd_data[0]),lcd->
      +                          lcd_data[0].logic);
  2187   0017A2  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2188   0017A4  0F02               	addlw	2
  2189   0017A6  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2190   0017A8  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2191   0017AA  6ED9               	movwf	fsr2l,c
  2192   0017AC  6ADA               	clrf	fsr2h,c
  2193   0017AE  0E02               	movlw	2
  2194   0017B0  26D9               	addwf	fsr2l,f,c
  2195   0017B2  0E00               	movlw	0
  2196   0017B4  BEDF               	btfsc	indf2,7,c
  2197   0017B6  0E01               	movlw	1
  2198   0017B8  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2199   0017BA  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2200   0017BE  6E14               	movwf	lcd_8bit_init@ret^0,c
  2201                           
  2202                           ;ECU_layer/LCD/ecu_lcd.c: 208:       ret= gpio_pin_write_logic(&(lcd->lcd_data[1]),lcd->
      +                          lcd_data[1].logic);
  2203   0017C0  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2204   0017C2  0F03               	addlw	3
  2205   0017C4  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2206   0017C6  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2207   0017C8  6ED9               	movwf	fsr2l,c
  2208   0017CA  6ADA               	clrf	fsr2h,c
  2209   0017CC  0E03               	movlw	3
  2210   0017CE  26D9               	addwf	fsr2l,f,c
  2211   0017D0  0E00               	movlw	0
  2212   0017D2  BEDF               	btfsc	indf2,7,c
  2213   0017D4  0E01               	movlw	1
  2214   0017D6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2215   0017D8  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2216   0017DC  6E14               	movwf	lcd_8bit_init@ret^0,c
  2217                           
  2218                           ;ECU_layer/LCD/ecu_lcd.c: 209:       ret= gpio_pin_write_logic(&(lcd->lcd_data[2]),lcd->
      +                          lcd_data[2].logic);
  2219   0017DE  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2220   0017E0  0F04               	addlw	4
  2221   0017E2  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2222   0017E4  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2223   0017E6  6ED9               	movwf	fsr2l,c
  2224   0017E8  6ADA               	clrf	fsr2h,c
  2225   0017EA  0E04               	movlw	4
  2226   0017EC  26D9               	addwf	fsr2l,f,c
  2227   0017EE  0E00               	movlw	0
  2228   0017F0  BEDF               	btfsc	indf2,7,c
  2229   0017F2  0E01               	movlw	1
  2230   0017F4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2231   0017F6  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2232   0017FA  6E14               	movwf	lcd_8bit_init@ret^0,c
  2233                           
  2234                           ;ECU_layer/LCD/ecu_lcd.c: 210:       ret= gpio_pin_write_logic(&(lcd->lcd_data[3]),lcd->
      +                          lcd_data[3].logic);
  2235   0017FC  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2236   0017FE  0F05               	addlw	5
  2237   001800  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2238   001802  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2239   001804  6ED9               	movwf	fsr2l,c
  2240   001806  6ADA               	clrf	fsr2h,c
  2241   001808  0E05               	movlw	5
  2242   00180A  26D9               	addwf	fsr2l,f,c
  2243   00180C  0E00               	movlw	0
  2244   00180E  BEDF               	btfsc	indf2,7,c
  2245   001810  0E01               	movlw	1
  2246   001812  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2247   001814  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2248   001818  6E14               	movwf	lcd_8bit_init@ret^0,c
  2249                           
  2250                           ;ECU_layer/LCD/ecu_lcd.c: 211:       ret= gpio_pin_write_logic(&(lcd->lcd_data[4]),lcd->
      +                          lcd_data[4].logic);
  2251   00181A  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2252   00181C  0F06               	addlw	6
  2253   00181E  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2254   001820  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2255   001822  6ED9               	movwf	fsr2l,c
  2256   001824  6ADA               	clrf	fsr2h,c
  2257   001826  0E06               	movlw	6
  2258   001828  26D9               	addwf	fsr2l,f,c
  2259   00182A  0E00               	movlw	0
  2260   00182C  BEDF               	btfsc	indf2,7,c
  2261   00182E  0E01               	movlw	1
  2262   001830  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2263   001832  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2264   001836  6E14               	movwf	lcd_8bit_init@ret^0,c
  2265                           
  2266                           ;ECU_layer/LCD/ecu_lcd.c: 212:       ret= gpio_pin_write_logic(&(lcd->lcd_data[5]),lcd->
      +                          lcd_data[5].logic);
  2267   001838  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2268   00183A  0F07               	addlw	7
  2269   00183C  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2270   00183E  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2271   001840  6ED9               	movwf	fsr2l,c
  2272   001842  6ADA               	clrf	fsr2h,c
  2273   001844  0E07               	movlw	7
  2274   001846  26D9               	addwf	fsr2l,f,c
  2275   001848  0E00               	movlw	0
  2276   00184A  BEDF               	btfsc	indf2,7,c
  2277   00184C  0E01               	movlw	1
  2278   00184E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2279   001850  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2280   001854  6E14               	movwf	lcd_8bit_init@ret^0,c
  2281                           
  2282                           ;ECU_layer/LCD/ecu_lcd.c: 213:       ret= gpio_pin_write_logic(&(lcd->lcd_data[6]),lcd->
      +                          lcd_data[6].logic);
  2283   001856  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2284   001858  0F08               	addlw	8
  2285   00185A  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2286   00185C  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2287   00185E  6ED9               	movwf	fsr2l,c
  2288   001860  6ADA               	clrf	fsr2h,c
  2289   001862  0E08               	movlw	8
  2290   001864  26D9               	addwf	fsr2l,f,c
  2291   001866  0E00               	movlw	0
  2292   001868  BEDF               	btfsc	indf2,7,c
  2293   00186A  0E01               	movlw	1
  2294   00186C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2295   00186E  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2296   001872  6E14               	movwf	lcd_8bit_init@ret^0,c
  2297                           
  2298                           ;ECU_layer/LCD/ecu_lcd.c: 214:       ret= gpio_pin_write_logic(&(lcd->lcd_data[7]),lcd->
      +                          lcd_data[7].logic);
  2299   001874  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2300   001876  0F09               	addlw	9
  2301   001878  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2302   00187A  5012               	movf	lcd_8bit_init@lcd^0,w,c
  2303   00187C  6ED9               	movwf	fsr2l,c
  2304   00187E  6ADA               	clrf	fsr2h,c
  2305   001880  0E09               	movlw	9
  2306   001882  26D9               	addwf	fsr2l,f,c
  2307   001884  0E00               	movlw	0
  2308   001886  BEDF               	btfsc	indf2,7,c
  2309   001888  0E01               	movlw	1
  2310   00188A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2311   00188C  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2312   001890  6E14               	movwf	lcd_8bit_init@ret^0,c
  2313   001892                     
  2314                           ;ECU_layer/LCD/ecu_lcd.c: 216:       _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2315   001892  0E34               	movlw	52
  2316   001894  6E13               	movwf	??_lcd_8bit_init^0,c
  2317   001896  0EF2               	movlw	242
  2318   001898                     u3627:
  2319   001898  2EE8               	decfsz	wreg,f,c
  2320   00189A  D7FE               	bra	u3627
  2321   00189C  2E13               	decfsz	??_lcd_8bit_init^0,f,c
  2322   00189E  D7FC               	bra	u3627
  2323   0018A0  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2324   0018A4  0E38               	movlw	56
  2325   0018A6  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2326   0018A8  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2327                           
  2328                           ;ECU_layer/LCD/ecu_lcd.c: 218:       _delay((unsigned long)((5)*(8000000UL/4000.0)));
  2329   0018AC  0E0D               	movlw	13
  2330   0018AE  6E13               	movwf	??_lcd_8bit_init^0,c
  2331   0018B0  0EFC               	movlw	252
  2332   0018B2                     u3637:
  2333   0018B2  2EE8               	decfsz	wreg,f,c
  2334   0018B4  D7FE               	bra	u3637
  2335   0018B6  2E13               	decfsz	??_lcd_8bit_init^0,f,c
  2336   0018B8  D7FC               	bra	u3637
  2337   0018BA  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2338   0018BE  0E38               	movlw	56
  2339   0018C0  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2340   0018C2  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2341   0018C6                     
  2342                           ;ECU_layer/LCD/ecu_lcd.c: 220:        _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  2343   0018C6  0E64               	movlw	100
  2344   0018C8                     u3647:
  2345   0018C8  2EE8               	decfsz	wreg,f,c
  2346   0018CA  D7FE               	bra	u3647
  2347                           
  2348                           ;ECU_layer/LCD/ecu_lcd.c: 221:       ret = lcd_8bit_send_command(lcd,0x38);
  2349   0018CC  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2350   0018D0  0E38               	movlw	56
  2351   0018D2  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2352   0018D4  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2353   0018D8  6E14               	movwf	lcd_8bit_init@ret^0,c
  2354                           
  2355                           ;ECU_layer/LCD/ecu_lcd.c: 222:       ret = lcd_8bit_send_command(lcd,0x01);
  2356   0018DA  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2357   0018DE  0E01               	movlw	1
  2358   0018E0  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2359   0018E2  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2360   0018E6  6E14               	movwf	lcd_8bit_init@ret^0,c
  2361                           
  2362                           ;ECU_layer/LCD/ecu_lcd.c: 223:       ret = lcd_8bit_send_command(lcd,0x02);
  2363   0018E8  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2364   0018EC  0E02               	movlw	2
  2365   0018EE  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2366   0018F0  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2367   0018F4  6E14               	movwf	lcd_8bit_init@ret^0,c
  2368                           
  2369                           ;ECU_layer/LCD/ecu_lcd.c: 224:       ret = lcd_8bit_send_command(lcd,0x06);
  2370   0018F6  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2371   0018FA  0E06               	movlw	6
  2372   0018FC  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2373   0018FE  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2374   001902  6E14               	movwf	lcd_8bit_init@ret^0,c
  2375                           
  2376                           ;ECU_layer/LCD/ecu_lcd.c: 225:       ret = lcd_8bit_send_command(lcd,0x0C);
  2377   001904  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2378   001908  0E0C               	movlw	12
  2379   00190A  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2380   00190C  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2381   001910  6E14               	movwf	lcd_8bit_init@ret^0,c
  2382                           
  2383                           ;ECU_layer/LCD/ecu_lcd.c: 226:       ret = lcd_8bit_send_command(lcd,0x38);
  2384   001912  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2385   001916  0E38               	movlw	56
  2386   001918  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2387   00191A  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2388   00191E  6E14               	movwf	lcd_8bit_init@ret^0,c
  2389                           
  2390                           ;ECU_layer/LCD/ecu_lcd.c: 227:       ret = lcd_8bit_send_command(lcd,0x80);
  2391   001920  C012  F00C         	movff	lcd_8bit_init@lcd,lcd_8bit_send_command@lcd
  2392   001924  0E80               	movlw	128
  2393   001926  6E0D               	movwf	lcd_8bit_send_command@command^0,c
  2394   001928  ECC6  F012         	call	_lcd_8bit_send_command	;wreg free
  2395   00192C  6E14               	movwf	lcd_8bit_init@ret^0,c
  2396   00192E                     l3414:
  2397                           
  2398                           ;ECU_layer/LCD/ecu_lcd.c: 230:     return ret ;
  2399   00192E  5014               	movf	lcd_8bit_init@ret^0,w,c
  2400   001930  0012               	return		;funcret
  2401   001932                     __end_of_lcd_8bit_init:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _lcd_8bit_send_command *****************
  2405 ;; Defined at:
  2406 ;;		line 238 in file "ECU_layer/LCD/ecu_lcd.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  lcd             1   11[COMRAM] PTR const struct .
  2409 ;;		 -> lcd_obj(10), 
  2410 ;;  command         1   12[COMRAM] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  count           1   16[COMRAM] unsigned char 
  2413 ;;  ret             1   15[COMRAM] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      unsigned char 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;Total ram usage:        6 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 4
  2430 ;; This function calls:
  2431 ;;		_gpio_pin_write_logic
  2432 ;;		_lcd_8bit_send_enable
  2433 ;; This function is called by:
  2434 ;;		_lcd_8bit_init
  2435 ;;		_lcd_8bit_set_cursor
  2436 ;;		_lcd_8bit_send_custom_char
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text10
  2441   00258C                     __ptext10:
  2442                           	callstack 0
  2443   00258C                     _lcd_8bit_send_command:
  2444                           	callstack 24
  2445   00258C                     
  2446                           ;ECU_layer/LCD/ecu_lcd.c: 240:     uint8 count=0;
  2447   00258C  0E00               	movlw	0
  2448   00258E  6E11               	movwf	lcd_8bit_send_command@count^0,c
  2449                           
  2450                           ;ECU_layer/LCD/ecu_lcd.c: 241:     if(((void*)0) == lcd){
  2451   002590  500C               	movf	lcd_8bit_send_command@lcd^0,w,c
  2452   002592  A4D8               	btfss	status,2,c
  2453   002594  EFCE  F012         	goto	u2271
  2454   002598  EFD0  F012         	goto	u2270
  2455   00259C                     u2271:
  2456   00259C  EFD4  F012         	goto	l3200
  2457   0025A0                     u2270:
  2458   0025A0                     
  2459                           ;ECU_layer/LCD/ecu_lcd.c: 242:         ret = (Std_ReturnType)0x00;
  2460   0025A0  0E00               	movlw	0
  2461   0025A2  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2462                           
  2463                           ;ECU_layer/LCD/ecu_lcd.c: 243:     }
  2464   0025A4  EFFF  F012         	goto	l3216
  2465   0025A8                     l3200:
  2466   0025A8  C00C  F002         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2467   0025AC  0E00               	movlw	0
  2468   0025AE  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2469   0025B0  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2470   0025B4                     
  2471                           ;ECU_layer/LCD/ecu_lcd.c: 246:         for(count =0 ; count < 8 ; count ++){
  2472   0025B4  0E00               	movlw	0
  2473   0025B6  6E11               	movwf	lcd_8bit_send_command@count^0,c
  2474   0025B8                     l3208:
  2475                           
  2476                           ;ECU_layer/LCD/ecu_lcd.c: 247:             gpio_pin_write_logic(&(lcd->lcd_data[count]) 
      +                          , (command >> count) & (uint8)0x01);
  2477   0025B8  500C               	movf	lcd_8bit_send_command@lcd^0,w,c
  2478   0025BA  2411               	addwf	lcd_8bit_send_command@count^0,w,c
  2479   0025BC  0F02               	addlw	2
  2480   0025BE  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2481   0025C0  C011  F00E         	movff	lcd_8bit_send_command@count,??_lcd_8bit_send_command
  2482   0025C4  C00D  F00F         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  2483   0025C8  2A0E               	incf	??_lcd_8bit_send_command^0,f,c
  2484   0025CA  EFE9  F012         	goto	u2284
  2485   0025CE                     u2285:
  2486   0025CE  90D8               	bcf	status,0,c
  2487   0025D0  320F               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  2488   0025D2                     u2284:
  2489   0025D2  2E0E               	decfsz	??_lcd_8bit_send_command^0,f,c
  2490   0025D4  EFE7  F012         	goto	u2285
  2491   0025D8  500F               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  2492   0025DA  0B01               	andlw	1
  2493   0025DC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2494   0025DE  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2495   0025E2                     
  2496                           ;ECU_layer/LCD/ecu_lcd.c: 248:         }
  2497   0025E2  2A11               	incf	lcd_8bit_send_command@count^0,f,c
  2498   0025E4  0E07               	movlw	7
  2499   0025E6  6411               	cpfsgt	lcd_8bit_send_command@count^0,c
  2500   0025E8  EFF8  F012         	goto	u2291
  2501   0025EC  EFFA  F012         	goto	u2290
  2502   0025F0                     u2291:
  2503   0025F0  EFDC  F012         	goto	l3208
  2504   0025F4                     u2290:
  2505   0025F4                     
  2506                           ;ECU_layer/LCD/ecu_lcd.c: 249:         ret = lcd_8bit_send_enable(lcd);
  2507   0025F4  C00C  F00A         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable@lcd
  2508   0025F8  EC6B  F014         	call	_lcd_8bit_send_enable	;wreg free
  2509   0025FC  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2510   0025FE                     l3216:
  2511                           
  2512                           ;ECU_layer/LCD/ecu_lcd.c: 251:     return ret ;
  2513   0025FE  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  2514   002600  0012               	return		;funcret
  2515   002602                     __end_of_lcd_8bit_send_command:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _lcd_8bit_send_enable *****************
  2519 ;; Defined at:
  2520 ;;		line 468 in file "ECU_layer/LCD/ecu_lcd.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  lcd             1    9[COMRAM] PTR const struct .
  2523 ;;		 -> lcd_obj(10), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  ret             1   10[COMRAM] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      unsigned char 
  2528 ;; Registers used:
  2529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        2 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 3
  2542 ;; This function calls:
  2543 ;;		_gpio_pin_write_logic
  2544 ;; This function is called by:
  2545 ;;		_lcd_8bit_send_command
  2546 ;;		_lcd_8bit_send_char_data
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text11
  2551   0028D6                     __ptext11:
  2552                           	callstack 0
  2553   0028D6                     _lcd_8bit_send_enable:
  2554                           	callstack 24
  2555   0028D6                     
  2556                           ;ECU_layer/LCD/ecu_lcd.c: 470:     if(((void*)0) == lcd){
  2557   0028D6  500A               	movf	lcd_8bit_send_enable@lcd^0,w,c
  2558   0028D8  A4D8               	btfss	status,2,c
  2559   0028DA  EF71  F014         	goto	u2261
  2560   0028DE  EF73  F014         	goto	u2260
  2561   0028E2                     u2261:
  2562   0028E2  EF77  F014         	goto	l3150
  2563   0028E6                     u2260:
  2564   0028E6                     
  2565                           ;ECU_layer/LCD/ecu_lcd.c: 471:         ret = (Std_ReturnType)0x00;
  2566   0028E6  0E00               	movlw	0
  2567   0028E8  6E0B               	movwf	lcd_8bit_send_enable@ret^0,c
  2568                           
  2569                           ;ECU_layer/LCD/ecu_lcd.c: 472:     }
  2570   0028EA  EF88  F014         	goto	l3156
  2571   0028EE                     l3150:
  2572   0028EE  280A               	incf	lcd_8bit_send_enable@lcd^0,w,c
  2573   0028F0  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2574   0028F2  0E01               	movlw	1
  2575   0028F4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2576   0028F6  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2577   0028FA                     
  2578                           ;ECU_layer/LCD/ecu_lcd.c: 475:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  2579   0028FA  0E03               	movlw	3
  2580   0028FC                     u3657:
  2581   0028FC  2EE8               	decfsz	wreg,f,c
  2582   0028FE  D7FE               	bra	u3657
  2583   002900  0000               	nop	
  2584   002902                     
  2585                           ;ECU_layer/LCD/ecu_lcd.c: 476:         ret = gpio_pin_write_logic(&(lcd->lcd_en),LOW);
  2586   002902  280A               	incf	lcd_8bit_send_enable@lcd^0,w,c
  2587   002904  6E02               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2588   002906  0E00               	movlw	0
  2589   002908  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2590   00290A  ECC9  F00E         	call	_gpio_pin_write_logic	;wreg free
  2591   00290E  6E0B               	movwf	lcd_8bit_send_enable@ret^0,c
  2592   002910                     l3156:
  2593                           
  2594                           ;ECU_layer/LCD/ecu_lcd.c: 478:     return ret ;
  2595   002910  500B               	movf	lcd_8bit_send_enable@ret^0,w,c
  2596   002912  0012               	return		;funcret
  2597   002914                     __end_of_lcd_8bit_send_enable:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _gpio_pin_write_logic *****************
  2601 ;; Defined at:
  2602 ;;		line 81 in file "MCAL_layer/GPIO/hal_gpio.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  2605 ;;		 -> motor_stop@obj2(1), motor_stop@obj1(1), motor_move_left@obj2(1), motor_move_left@obj1(1), 
  2606 ;;		 -> motor_move_right@obj2(1), motor_move_right@obj1(1), motor_init@obj2(1), motor_init@obj1(1), 
  2607 ;;		 -> lcd_obj$lcd_data(8), lcd_obj(10), 
  2608 ;;  logic           1    2[COMRAM] enum E2978
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  ret             1    8[COMRAM] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      unsigned char 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;Total ram usage:        8 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 2
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_lcd_8bit_init
  2631 ;;		_lcd_8bit_send_command
  2632 ;;		_lcd_8bit_send_char_data
  2633 ;;		_lcd_8bit_send_enable
  2634 ;;		_motor_init
  2635 ;;		_motor_move_right
  2636 ;;		_motor_stop
  2637 ;;		_gpio_pin_intialize
  2638 ;;		_lcd_4bit_init
  2639 ;;		_lcd_4bit_send_command
  2640 ;;		_lcd_4bit_send_char_data
  2641 ;;		_lcd_send_4bits
  2642 ;;		_lcd_4bit_send_enable
  2643 ;;		_motor_move_left
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text12
  2648   001D92                     __ptext12:
  2649                           	callstack 0
  2650   001D92                     _gpio_pin_write_logic:
  2651                           	callstack 27
  2652   001D92                     
  2653                           ;MCAL_layer/GPIO/hal_gpio.c: 82: Std_ReturnType ret = (Std_ReturnType)0x01;
  2654   001D92  0E01               	movlw	1
  2655   001D94  6E09               	movwf	gpio_pin_write_logic@ret^0,c
  2656                           
  2657                           ;MCAL_layer/GPIO/hal_gpio.c: 83:  if((((void*)0) == _pin_config) || (_pin_config->pin > 
      +                          8 -1)){
  2658   001D96  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2659   001D98  B4D8               	btfsc	status,2,c
  2660   001D9A  EFD1  F00E         	goto	u2221
  2661   001D9E  EFD3  F00E         	goto	u2220
  2662   001DA2                     u2221:
  2663   001DA2  EFE3  F00E         	goto	l3128
  2664   001DA6                     u2220:
  2665   001DA6  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2666   001DA8  6ED9               	movwf	fsr2l,c
  2667   001DAA  6ADA               	clrf	fsr2h,c
  2668   001DAC  30DF               	rrcf	223,w,c
  2669   001DAE  32E8               	rrcf	wreg,f,c
  2670   001DB0  32E8               	rrcf	wreg,f,c
  2671   001DB2  0B07               	andlw	7
  2672   001DB4  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2673   001DB6  0E07               	movlw	7
  2674   001DB8  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  2675   001DBA  EFE1  F00E         	goto	u2231
  2676   001DBE  EFE3  F00E         	goto	u2230
  2677   001DC2                     u2231:
  2678   001DC2  EF3A  F00F         	goto	l3136
  2679   001DC6                     u2230:
  2680   001DC6                     l3128:
  2681                           
  2682                           ;MCAL_layer/GPIO/hal_gpio.c: 84:      ret = (Std_ReturnType)0x00;
  2683   001DC6  0E00               	movlw	0
  2684   001DC8  6E09               	movwf	gpio_pin_write_logic@ret^0,c
  2685                           
  2686                           ;MCAL_layer/GPIO/hal_gpio.c: 86:  }
  2687   001DCA  EF4F  F00F         	goto	l3138
  2688   001DCE                     l3130:
  2689                           
  2690                           ;MCAL_layer/GPIO/hal_gpio.c: 90:              (*lat_reg[_pin_config->port] &= ~((uint8)1
      +                           << _pin_config->pin));
  2691   001DCE  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2692   001DD0  6ED9               	movwf	fsr2l,c
  2693   001DD2  6ADA               	clrf	fsr2h,c
  2694   001DD4  30DF               	rrcf	223,w,c
  2695   001DD6  32E8               	rrcf	wreg,f,c
  2696   001DD8  32E8               	rrcf	wreg,f,c
  2697   001DDA  0B07               	andlw	7
  2698   001DDC  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2699   001DDE  0E01               	movlw	1
  2700   001DE0  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2701   001DE2  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  2702   001DE4  EFF6  F00E         	goto	u2244
  2703   001DE8                     u2245:
  2704   001DE8  90D8               	bcf	status,0,c
  2705   001DEA  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2706   001DEC                     u2244:
  2707   001DEC  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  2708   001DEE  EFF4  F00E         	goto	u2245
  2709   001DF2  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2710   001DF4  0AFF               	xorlw	255
  2711   001DF6  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2712   001DF8  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2713   001DFA  6ED9               	movwf	fsr2l,c
  2714   001DFC  6ADA               	clrf	fsr2h,c
  2715   001DFE  50DF               	movf	223,w,c
  2716   001E00  0B07               	andlw	7
  2717   001E02  0D02               	mullw	2
  2718   001E04  50F3               	movf	243,w,c
  2719   001E06  0F5B               	addlw	low _lat_reg
  2720   001E08  6ED9               	movwf	fsr2l,c
  2721   001E0A  6ADA               	clrf	fsr2h,c
  2722   001E0C  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  2723   001E10  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  2724   001E14  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2725   001E18  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2726   001E1C  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2727   001E1E  16DF               	andwf	indf2,f,c
  2728                           
  2729                           ;MCAL_layer/GPIO/hal_gpio.c: 91:              break;
  2730   001E20  EF4F  F00F         	goto	l3138
  2731   001E24                     l3132:
  2732                           
  2733                           ;MCAL_layer/GPIO/hal_gpio.c: 93:               (*lat_reg[_pin_config->port] |= ((uint8)1
      +                           << _pin_config->pin));
  2734   001E24  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2735   001E26  6ED9               	movwf	fsr2l,c
  2736   001E28  6ADA               	clrf	fsr2h,c
  2737   001E2A  30DF               	rrcf	223,w,c
  2738   001E2C  32E8               	rrcf	wreg,f,c
  2739   001E2E  32E8               	rrcf	wreg,f,c
  2740   001E30  0B07               	andlw	7
  2741   001E32  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2742   001E34  0E01               	movlw	1
  2743   001E36  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2744   001E38  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  2745   001E3A  EF21  F00F         	goto	u2254
  2746   001E3E                     u2255:
  2747   001E3E  90D8               	bcf	status,0,c
  2748   001E40  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2749   001E42                     u2254:
  2750   001E42  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  2751   001E44  EF1F  F00F         	goto	u2255
  2752   001E48  5002               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2753   001E4A  6ED9               	movwf	fsr2l,c
  2754   001E4C  6ADA               	clrf	fsr2h,c
  2755   001E4E  50DF               	movf	223,w,c
  2756   001E50  0B07               	andlw	7
  2757   001E52  0D02               	mullw	2
  2758   001E54  50F3               	movf	243,w,c
  2759   001E56  0F5B               	addlw	low _lat_reg
  2760   001E58  6ED9               	movwf	fsr2l,c
  2761   001E5A  6ADA               	clrf	fsr2h,c
  2762   001E5C  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+2
  2763   001E60  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+3
  2764   001E64  C006  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2765   001E68  C007  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2766   001E6C  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2767   001E6E  12DF               	iorwf	indf2,f,c
  2768                           
  2769                           ;MCAL_layer/GPIO/hal_gpio.c: 94:              break;
  2770   001E70  EF4F  F00F         	goto	l3138
  2771   001E74                     l3136:
  2772   001E74  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  2773   001E76  6E04               	movwf	??_gpio_pin_write_logic^0,c
  2774   001E78  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2775                           
  2776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2777                           ; Switch size 1, requested type "simple"
  2778                           ; Number of cases is 1, Range of values is 0 to 0
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte            4     3 (average)
  2782                           ;	Chosen strategy is simple_byte
  2783   001E7A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2784   001E7C  0A00               	xorlw	0	; case 0
  2785   001E7E  B4D8               	btfsc	status,2,c
  2786   001E80  EF44  F00F         	goto	l4458
  2787   001E84  EFE3  F00E         	goto	l3128
  2788   001E88                     l4458:
  2789                           
  2790                           ; Switch size 1, requested type "simple"
  2791                           ; Number of cases is 2, Range of values is 0 to 1
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte            7     4 (average)
  2795                           ;	Chosen strategy is simple_byte
  2796   001E88  5004               	movf	??_gpio_pin_write_logic^0,w,c
  2797   001E8A  0A00               	xorlw	0	; case 0
  2798   001E8C  B4D8               	btfsc	status,2,c
  2799   001E8E  EFE7  F00E         	goto	l3130
  2800   001E92  0A01               	xorlw	1	; case 1
  2801   001E94  B4D8               	btfsc	status,2,c
  2802   001E96  EF12  F00F         	goto	l3132
  2803   001E9A  EFE3  F00E         	goto	l3128
  2804   001E9E                     l3138:
  2805                           
  2806                           ;MCAL_layer/GPIO/hal_gpio.c: 102: return ret;
  2807   001E9E  5009               	movf	gpio_pin_write_logic@ret^0,w,c
  2808   001EA0  0012               	return		;funcret
  2809   001EA2                     __end_of_gpio_pin_write_logic:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _gpio_pin_direction_init *****************
  2813 ;; Defined at:
  2814 ;;		line 30 in file "MCAL_layer/GPIO/hal_gpio.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  _pin_config     1    1[COMRAM] PTR const struct .
  2817 ;;		 -> motor_init@obj2(1), motor_init@obj1(1), lcd_obj$lcd_data(8), lcd_obj(10), 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  ret             1    7[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      unsigned char 
  2822 ;; Registers used:
  2823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2829 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;Total ram usage:        7 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; Hardware stack levels required when called: 2
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_lcd_8bit_init
  2840 ;;		_motor_init
  2841 ;;		_gpio_pin_intialize
  2842 ;;		_lcd_4bit_init
  2843 ;;		_Interrupt_RBx_Init
  2844 ;;		_Interrupt_INTx_Pin_Init
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text13
  2849   001C6C                     __ptext13:
  2850                           	callstack 0
  2851   001C6C                     _gpio_pin_direction_init:
  2852                           	callstack 27
  2853   001C6C                     
  2854                           ;MCAL_layer/GPIO/hal_gpio.c: 31:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2855   001C6C  0E01               	movlw	1
  2856   001C6E  6E08               	movwf	gpio_pin_direction_init@ret^0,c
  2857                           
  2858                           ;MCAL_layer/GPIO/hal_gpio.c: 33:     if((((void*)0) == _pin_config) || (_pin_config->pin
      +                           > 8 -1)){
  2859   001C70  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2860   001C72  B4D8               	btfsc	status,2,c
  2861   001C74  EF3E  F00E         	goto	u2441
  2862   001C78  EF40  F00E         	goto	u2440
  2863   001C7C                     u2441:
  2864   001C7C  EF50  F00E         	goto	l3300
  2865   001C80                     u2440:
  2866   001C80  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2867   001C82  6ED9               	movwf	fsr2l,c
  2868   001C84  6ADA               	clrf	fsr2h,c
  2869   001C86  30DF               	rrcf	223,w,c
  2870   001C88  32E8               	rrcf	wreg,f,c
  2871   001C8A  32E8               	rrcf	wreg,f,c
  2872   001C8C  0B07               	andlw	7
  2873   001C8E  6E03               	movwf	??_gpio_pin_direction_init^0,c
  2874   001C90  0E07               	movlw	7
  2875   001C92  6403               	cpfsgt	??_gpio_pin_direction_init^0,c
  2876   001C94  EF4E  F00E         	goto	u2451
  2877   001C98  EF50  F00E         	goto	u2450
  2878   001C9C                     u2451:
  2879   001C9C  EFA7  F00E         	goto	l3308
  2880   001CA0                     u2450:
  2881   001CA0                     l3300:
  2882                           
  2883                           ;MCAL_layer/GPIO/hal_gpio.c: 34:     ret = (Std_ReturnType)0x00;
  2884   001CA0  0E00               	movlw	0
  2885   001CA2  6E08               	movwf	gpio_pin_direction_init@ret^0,c
  2886                           
  2887                           ;MCAL_layer/GPIO/hal_gpio.c: 36:     }
  2888   001CA4  EFC7  F00E         	goto	l3310
  2889   001CA8                     l3302:
  2890                           
  2891                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             (*tris_reg[_pin_config->port] &= ~((uint8)1
      +                           << _pin_config->pin));
  2892   001CA8  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2893   001CAA  6ED9               	movwf	fsr2l,c
  2894   001CAC  6ADA               	clrf	fsr2h,c
  2895   001CAE  30DF               	rrcf	223,w,c
  2896   001CB0  32E8               	rrcf	wreg,f,c
  2897   001CB2  32E8               	rrcf	wreg,f,c
  2898   001CB4  0B07               	andlw	7
  2899   001CB6  6E03               	movwf	??_gpio_pin_direction_init^0,c
  2900   001CB8  0E01               	movlw	1
  2901   001CBA  6E04               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2902   001CBC  2A03               	incf	??_gpio_pin_direction_init^0,f,c
  2903   001CBE  EF63  F00E         	goto	u2464
  2904   001CC2                     u2465:
  2905   001CC2  90D8               	bcf	status,0,c
  2906   001CC4  3604               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2907   001CC6                     u2464:
  2908   001CC6  2E03               	decfsz	??_gpio_pin_direction_init^0,f,c
  2909   001CC8  EF61  F00E         	goto	u2465
  2910   001CCC  5004               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2911   001CCE  0AFF               	xorlw	255
  2912   001CD0  6E05               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2913   001CD2  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2914   001CD4  6ED9               	movwf	fsr2l,c
  2915   001CD6  6ADA               	clrf	fsr2h,c
  2916   001CD8  50DF               	movf	223,w,c
  2917   001CDA  0B07               	andlw	7
  2918   001CDC  0D02               	mullw	2
  2919   001CDE  50F3               	movf	243,w,c
  2920   001CE0  0F65               	addlw	low _tris_reg
  2921   001CE2  6ED9               	movwf	fsr2l,c
  2922   001CE4  6ADA               	clrf	fsr2h,c
  2923   001CE6  CFDE F006          	movff	postinc2,??_gpio_pin_direction_init+3
  2924   001CEA  CFDD F007          	movff	postdec2,??_gpio_pin_direction_init+4
  2925   001CEE  C006  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  2926   001CF2  C007  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  2927   001CF6  5005               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2928   001CF8  16DF               	andwf	indf2,f,c
  2929                           
  2930                           ;MCAL_layer/GPIO/hal_gpio.c: 41:         break;
  2931   001CFA  EFC7  F00E         	goto	l3310
  2932   001CFE                     l3304:
  2933                           
  2934                           ;MCAL_layer/GPIO/hal_gpio.c: 43:             (*tris_reg[_pin_config->port] |= ((uint8)1 
      +                          << _pin_config->pin));
  2935   001CFE  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2936   001D00  6ED9               	movwf	fsr2l,c
  2937   001D02  6ADA               	clrf	fsr2h,c
  2938   001D04  30DF               	rrcf	223,w,c
  2939   001D06  32E8               	rrcf	wreg,f,c
  2940   001D08  32E8               	rrcf	wreg,f,c
  2941   001D0A  0B07               	andlw	7
  2942   001D0C  6E03               	movwf	??_gpio_pin_direction_init^0,c
  2943   001D0E  0E01               	movlw	1
  2944   001D10  6E04               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2945   001D12  2A03               	incf	??_gpio_pin_direction_init^0,f,c
  2946   001D14  EF8E  F00E         	goto	u2474
  2947   001D18                     u2475:
  2948   001D18  90D8               	bcf	status,0,c
  2949   001D1A  3604               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2950   001D1C                     u2474:
  2951   001D1C  2E03               	decfsz	??_gpio_pin_direction_init^0,f,c
  2952   001D1E  EF8C  F00E         	goto	u2475
  2953   001D22  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2954   001D24  6ED9               	movwf	fsr2l,c
  2955   001D26  6ADA               	clrf	fsr2h,c
  2956   001D28  50DF               	movf	223,w,c
  2957   001D2A  0B07               	andlw	7
  2958   001D2C  0D02               	mullw	2
  2959   001D2E  50F3               	movf	243,w,c
  2960   001D30  0F65               	addlw	low _tris_reg
  2961   001D32  6ED9               	movwf	fsr2l,c
  2962   001D34  6ADA               	clrf	fsr2h,c
  2963   001D36  CFDE F005          	movff	postinc2,??_gpio_pin_direction_init+2
  2964   001D3A  CFDD F006          	movff	postdec2,??_gpio_pin_direction_init+3
  2965   001D3E  C005  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  2966   001D42  C006  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  2967   001D46  5004               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2968   001D48  12DF               	iorwf	indf2,f,c
  2969                           
  2970                           ;MCAL_layer/GPIO/hal_gpio.c: 44:             break;
  2971   001D4A  EFC7  F00E         	goto	l3310
  2972   001D4E                     l3308:
  2973   001D4E  5002               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2974   001D50  6ED9               	movwf	fsr2l,c
  2975   001D52  6ADA               	clrf	fsr2h,c
  2976   001D54  BCDF               	btfsc	indf2,6,c
  2977   001D56  EFAF  F00E         	goto	u2481
  2978   001D5A  EFB2  F00E         	goto	u2480
  2979   001D5E                     u2481:
  2980   001D5E  0E01               	movlw	1
  2981   001D60  EFB3  F00E         	goto	u2490
  2982   001D64                     u2480:
  2983   001D64  0E00               	movlw	0
  2984   001D66                     u2490:
  2985   001D66  6E03               	movwf	??_gpio_pin_direction_init^0,c
  2986   001D68  6A04               	clrf	(??_gpio_pin_direction_init+1)^0,c
  2987                           
  2988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2989                           ; Switch size 1, requested type "simple"
  2990                           ; Number of cases is 1, Range of values is 0 to 0
  2991                           ; switch strategies available:
  2992                           ; Name         Instructions Cycles
  2993                           ; simple_byte            4     3 (average)
  2994                           ;	Chosen strategy is simple_byte
  2995   001D6A  5004               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2996   001D6C  0A00               	xorlw	0	; case 0
  2997   001D6E  B4D8               	btfsc	status,2,c
  2998   001D70  EFBC  F00E         	goto	l4460
  2999   001D74  EF50  F00E         	goto	l3300
  3000   001D78                     l4460:
  3001                           
  3002                           ; Switch size 1, requested type "simple"
  3003                           ; Number of cases is 2, Range of values is 0 to 1
  3004                           ; switch strategies available:
  3005                           ; Name         Instructions Cycles
  3006                           ; simple_byte            7     4 (average)
  3007                           ;	Chosen strategy is simple_byte
  3008   001D78  5003               	movf	??_gpio_pin_direction_init^0,w,c
  3009   001D7A  0A00               	xorlw	0	; case 0
  3010   001D7C  B4D8               	btfsc	status,2,c
  3011   001D7E  EF54  F00E         	goto	l3302
  3012   001D82  0A01               	xorlw	1	; case 1
  3013   001D84  B4D8               	btfsc	status,2,c
  3014   001D86  EF7F  F00E         	goto	l3304
  3015   001D8A  EF50  F00E         	goto	l3300
  3016   001D8E                     l3310:
  3017                           
  3018                           ;MCAL_layer/GPIO/hal_gpio.c: 50:     return ret;
  3019   001D8E  5008               	movf	gpio_pin_direction_init@ret^0,w,c
  3020   001D90  0012               	return		;funcret
  3021   001D92                     __end_of_gpio_pin_direction_init:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function ___xxtofl *****************
  3025 ;; Defined at:
  3026 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  sign            1    wreg     unsigned char 
  3029 ;;  val             4    1[COMRAM] long 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  sign            1    9[COMRAM] unsigned char 
  3032 ;;  arg             4   11[COMRAM] unsigned long 
  3033 ;;  exp             1   10[COMRAM] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  4    1[COMRAM] unsigned char 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:       14 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text14
  3058   001932                     __ptext14:
  3059                           	callstack 0
  3060   001932                     ___xxtofl:
  3061                           	callstack 28
  3062                           
  3063                           ;incstack = 0
  3064                           ;___xxtofl@sign stored from wreg
  3065   001932  6E0A               	movwf	___xxtofl@sign^0,c
  3066   001934  500A               	movf	___xxtofl@sign^0,w,c
  3067   001936  B4D8               	btfsc	status,2,c
  3068   001938  EFA0  F00C         	goto	u3111
  3069   00193C  EFA2  F00C         	goto	u3110
  3070   001940                     u3111:
  3071   001940  EFC4  F00C         	goto	l1479
  3072   001944                     u3110:
  3073   001944  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  3074   001946  EFA9  F00C         	goto	u3120
  3075   00194A  EFA7  F00C         	goto	u3121
  3076   00194E                     u3121:
  3077   00194E  EFC4  F00C         	goto	l1479
  3078   001952                     u3120:
  3079   001952  C002  F006         	movff	___xxtofl@val,??___xxtofl
  3080   001956  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  3081   00195A  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  3082   00195E  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  3083   001962  1E06               	comf	??___xxtofl^0,f,c
  3084   001964  1E07               	comf	(??___xxtofl+1)^0,f,c
  3085   001966  1E08               	comf	(??___xxtofl+2)^0,f,c
  3086   001968  1E09               	comf	(??___xxtofl+3)^0,f,c
  3087   00196A  2A06               	incf	??___xxtofl^0,f,c
  3088   00196C  0E00               	movlw	0
  3089   00196E  2207               	addwfc	(??___xxtofl+1)^0,f,c
  3090   001970  2208               	addwfc	(??___xxtofl+2)^0,f,c
  3091   001972  2209               	addwfc	(??___xxtofl+3)^0,f,c
  3092   001974  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  3093   001978  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  3094   00197C  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  3095   001980  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  3096   001984  EFCC  F00C         	goto	l3828
  3097   001988                     l1479:
  3098   001988  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  3099   00198C  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3100   001990  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3101   001994  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3102   001998                     l3828:
  3103   001998  5002               	movf	___xxtofl@val^0,w,c
  3104   00199A  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  3105   00199C  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  3106   00199E  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  3107   0019A0  A4D8               	btfss	status,2,c
  3108   0019A2  EFD5  F00C         	goto	u3131
  3109   0019A6  EFD7  F00C         	goto	u3130
  3110   0019AA                     u3131:
  3111   0019AA  EFE1  F00C         	goto	l3834
  3112   0019AE                     u3130:
  3113   0019AE  0E00               	movlw	0
  3114   0019B0  6E02               	movwf	?___xxtofl^0,c
  3115   0019B2  0E00               	movlw	0
  3116   0019B4  6E03               	movwf	(?___xxtofl+1)^0,c
  3117   0019B6  0E00               	movlw	0
  3118   0019B8  6E04               	movwf	(?___xxtofl+2)^0,c
  3119   0019BA  0E00               	movlw	0
  3120   0019BC  6E05               	movwf	(?___xxtofl+3)^0,c
  3121   0019BE  EF72  F00D         	goto	l1482
  3122   0019C2                     l3834:
  3123   0019C2  0E96               	movlw	150
  3124   0019C4  6E0B               	movwf	___xxtofl@exp^0,c
  3125   0019C6  EFEB  F00C         	goto	l3838
  3126   0019CA                     l3836:
  3127   0019CA  2A0B               	incf	___xxtofl@exp^0,f,c
  3128   0019CC  90D8               	bcf	status,0,c
  3129   0019CE  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  3130   0019D0  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  3131   0019D2  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  3132   0019D4  320C               	rrcf	___xxtofl@arg^0,f,c
  3133   0019D6                     l3838:
  3134   0019D6  0E00               	movlw	0
  3135   0019D8  140C               	andwf	___xxtofl@arg^0,w,c
  3136   0019DA  6E06               	movwf	??___xxtofl^0,c
  3137   0019DC  0E00               	movlw	0
  3138   0019DE  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  3139   0019E0  6E07               	movwf	(??___xxtofl+1)^0,c
  3140   0019E2  0E00               	movlw	0
  3141   0019E4  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  3142   0019E6  6E08               	movwf	(??___xxtofl+2)^0,c
  3143   0019E8  0EFE               	movlw	254
  3144   0019EA  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  3145   0019EC  6E09               	movwf	(??___xxtofl+3)^0,c
  3146   0019EE  5006               	movf	??___xxtofl^0,w,c
  3147   0019F0  1007               	iorwf	(??___xxtofl+1)^0,w,c
  3148   0019F2  1008               	iorwf	(??___xxtofl+2)^0,w,c
  3149   0019F4  1009               	iorwf	(??___xxtofl+3)^0,w,c
  3150   0019F6  A4D8               	btfss	status,2,c
  3151   0019F8  EF00  F00D         	goto	u3141
  3152   0019FC  EF02  F00D         	goto	u3140
  3153   001A00                     u3141:
  3154   001A00  EFE5  F00C         	goto	l3836
  3155   001A04                     u3140:
  3156   001A04  EF10  F00D         	goto	l1486
  3157   001A08                     l3840:
  3158   001A08  2A0B               	incf	___xxtofl@exp^0,f,c
  3159   001A0A  0E01               	movlw	1
  3160   001A0C  260C               	addwf	___xxtofl@arg^0,f,c
  3161   001A0E  0E00               	movlw	0
  3162   001A10  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  3163   001A12  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  3164   001A14  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  3165   001A16  90D8               	bcf	status,0,c
  3166   001A18  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  3167   001A1A  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  3168   001A1C  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  3169   001A1E  320C               	rrcf	___xxtofl@arg^0,f,c
  3170   001A20                     l1486:
  3171   001A20  0E00               	movlw	0
  3172   001A22  140C               	andwf	___xxtofl@arg^0,w,c
  3173   001A24  6E06               	movwf	??___xxtofl^0,c
  3174   001A26  0E00               	movlw	0
  3175   001A28  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  3176   001A2A  6E07               	movwf	(??___xxtofl+1)^0,c
  3177   001A2C  0E00               	movlw	0
  3178   001A2E  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  3179   001A30  6E08               	movwf	(??___xxtofl+2)^0,c
  3180   001A32  0EFF               	movlw	255
  3181   001A34  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  3182   001A36  6E09               	movwf	(??___xxtofl+3)^0,c
  3183   001A38  5006               	movf	??___xxtofl^0,w,c
  3184   001A3A  1007               	iorwf	(??___xxtofl+1)^0,w,c
  3185   001A3C  1008               	iorwf	(??___xxtofl+2)^0,w,c
  3186   001A3E  1009               	iorwf	(??___xxtofl+3)^0,w,c
  3187   001A40  A4D8               	btfss	status,2,c
  3188   001A42  EF25  F00D         	goto	u3151
  3189   001A46  EF27  F00D         	goto	u3150
  3190   001A4A                     u3151:
  3191   001A4A  EF04  F00D         	goto	l3840
  3192   001A4E                     u3150:
  3193   001A4E  EF2F  F00D         	goto	l3848
  3194   001A52                     l3846:
  3195   001A52  060B               	decf	___xxtofl@exp^0,f,c
  3196   001A54  90D8               	bcf	status,0,c
  3197   001A56  360C               	rlcf	___xxtofl@arg^0,f,c
  3198   001A58  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  3199   001A5A  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  3200   001A5C  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  3201   001A5E                     l3848:
  3202   001A5E  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  3203   001A60  EF34  F00D         	goto	u3161
  3204   001A64  EF36  F00D         	goto	u3160
  3205   001A68                     u3161:
  3206   001A68  EF3E  F00D         	goto	l1493
  3207   001A6C                     u3160:
  3208   001A6C  0E02               	movlw	2
  3209   001A6E  600B               	cpfslt	___xxtofl@exp^0,c
  3210   001A70  EF3C  F00D         	goto	u3171
  3211   001A74  EF3E  F00D         	goto	u3170
  3212   001A78                     u3171:
  3213   001A78  EF29  F00D         	goto	l3846
  3214   001A7C                     u3170:
  3215   001A7C                     l1493:
  3216   001A7C  B00B               	btfsc	___xxtofl@exp^0,0,c
  3217   001A7E  EF43  F00D         	goto	u3181
  3218   001A82  EF45  F00D         	goto	u3180
  3219   001A86                     u3181:
  3220   001A86  EF46  F00D         	goto	l3854
  3221   001A8A                     u3180:
  3222   001A8A  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  3223   001A8C                     l3854:
  3224   001A8C  90D8               	bcf	status,0,c
  3225   001A8E  320B               	rrcf	___xxtofl@exp^0,f,c
  3226   001A90  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  3227   001A94  6A07               	clrf	(??___xxtofl+1)^0,c
  3228   001A96  6A08               	clrf	(??___xxtofl+2)^0,c
  3229   001A98  6A09               	clrf	(??___xxtofl+3)^0,c
  3230   001A9A  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  3231   001A9E  6A08               	clrf	(??___xxtofl+2)^0,c
  3232   001AA0  6A07               	clrf	(??___xxtofl+1)^0,c
  3233   001AA2  6A06               	clrf	??___xxtofl^0,c
  3234   001AA4  5006               	movf	??___xxtofl^0,w,c
  3235   001AA6  120C               	iorwf	___xxtofl@arg^0,f,c
  3236   001AA8  5007               	movf	(??___xxtofl+1)^0,w,c
  3237   001AAA  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  3238   001AAC  5008               	movf	(??___xxtofl+2)^0,w,c
  3239   001AAE  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  3240   001AB0  5009               	movf	(??___xxtofl+3)^0,w,c
  3241   001AB2  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  3242   001AB4  500A               	movf	___xxtofl@sign^0,w,c
  3243   001AB6  B4D8               	btfsc	status,2,c
  3244   001AB8  EF60  F00D         	goto	u3191
  3245   001ABC  EF62  F00D         	goto	u3190
  3246   001AC0                     u3191:
  3247   001AC0  EF6A  F00D         	goto	l3864
  3248   001AC4                     u3190:
  3249   001AC4  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  3250   001AC6  EF69  F00D         	goto	u3200
  3251   001ACA  EF67  F00D         	goto	u3201
  3252   001ACE                     u3201:
  3253   001ACE  EF6A  F00D         	goto	l3864
  3254   001AD2                     u3200:
  3255   001AD2  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  3256   001AD4                     l3864:
  3257   001AD4  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  3258   001AD8  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  3259   001ADC  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  3260   001AE0  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  3261   001AE4                     l1482:
  3262   001AE4  0012               	return		;funcret
  3263   001AE6                     __end_of___xxtofl:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function ___lwmod *****************
  3267 ;; Defined at:
  3268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  dividend        2    1[COMRAM] unsigned int 
  3271 ;;  divisor         2    3[COMRAM] unsigned int 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  counter         1    5[COMRAM] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  2    1[COMRAM] unsigned int 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;Total ram usage:        5 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 2
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text15
  3298   0026E0                     __ptext15:
  3299                           	callstack 0
  3300   0026E0                     ___lwmod:
  3301                           	callstack 28
  3302   0026E0  5004               	movf	___lwmod@divisor^0,w,c
  3303   0026E2  1005               	iorwf	(___lwmod@divisor+1)^0,w,c
  3304   0026E4  B4D8               	btfsc	status,2,c
  3305   0026E6  EF77  F013         	goto	u3081
  3306   0026EA  EF79  F013         	goto	u3080
  3307   0026EE                     u3081:
  3308   0026EE  EF9D  F013         	goto	l1325
  3309   0026F2                     u3080:
  3310   0026F2  0E01               	movlw	1
  3311   0026F4  6E06               	movwf	___lwmod@counter^0,c
  3312   0026F6  EF81  F013         	goto	l3812
  3313   0026FA                     l3810:
  3314   0026FA  90D8               	bcf	status,0,c
  3315   0026FC  3604               	rlcf	___lwmod@divisor^0,f,c
  3316   0026FE  3605               	rlcf	(___lwmod@divisor+1)^0,f,c
  3317   002700  2A06               	incf	___lwmod@counter^0,f,c
  3318   002702                     l3812:
  3319   002702  AE05               	btfss	(___lwmod@divisor+1)^0,7,c
  3320   002704  EF86  F013         	goto	u3091
  3321   002708  EF88  F013         	goto	u3090
  3322   00270C                     u3091:
  3323   00270C  EF7D  F013         	goto	l3810
  3324   002710                     u3090:
  3325   002710                     l3814:
  3326   002710  5004               	movf	___lwmod@divisor^0,w,c
  3327   002712  5C02               	subwf	___lwmod@dividend^0,w,c
  3328   002714  5005               	movf	(___lwmod@divisor+1)^0,w,c
  3329   002716  5803               	subwfb	(___lwmod@dividend+1)^0,w,c
  3330   002718  A0D8               	btfss	status,0,c
  3331   00271A  EF91  F013         	goto	u3101
  3332   00271E  EF93  F013         	goto	u3100
  3333   002722                     u3101:
  3334   002722  EF97  F013         	goto	l3818
  3335   002726                     u3100:
  3336   002726  5004               	movf	___lwmod@divisor^0,w,c
  3337   002728  5E02               	subwf	___lwmod@dividend^0,f,c
  3338   00272A  5005               	movf	(___lwmod@divisor+1)^0,w,c
  3339   00272C  5A03               	subwfb	(___lwmod@dividend+1)^0,f,c
  3340   00272E                     l3818:
  3341   00272E  90D8               	bcf	status,0,c
  3342   002730  3205               	rrcf	(___lwmod@divisor+1)^0,f,c
  3343   002732  3204               	rrcf	___lwmod@divisor^0,f,c
  3344   002734  2E06               	decfsz	___lwmod@counter^0,f,c
  3345   002736  EF88  F013         	goto	l3814
  3346   00273A                     l1325:
  3347   00273A  C002  F002         	movff	___lwmod@dividend,?___lwmod
  3348   00273E  C003  F003         	movff	___lwmod@dividend+1,?___lwmod+1
  3349   002742  0012               	return		;funcret
  3350   002744                     __end_of___lwmod:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function ___lwdiv *****************
  3354 ;; Defined at:
  3355 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  dividend        2    1[COMRAM] unsigned int 
  3358 ;;  divisor         2    3[COMRAM] unsigned int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  quotient        2    5[COMRAM] unsigned int 
  3361 ;;  counter         1    7[COMRAM] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2    1[COMRAM] unsigned int 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;Total ram usage:        7 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 2
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text16
  3386   002602                     __ptext16:
  3387                           	callstack 0
  3388   002602                     ___lwdiv:
  3389                           	callstack 28
  3390   002602  0E00               	movlw	0
  3391   002604  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  3392   002606  0E00               	movlw	0
  3393   002608  6E06               	movwf	___lwdiv@quotient^0,c
  3394   00260A  5004               	movf	___lwdiv@divisor^0,w,c
  3395   00260C  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3396   00260E  B4D8               	btfsc	status,2,c
  3397   002610  EF0C  F013         	goto	u3051
  3398   002614  EF0E  F013         	goto	u3050
  3399   002618                     u3051:
  3400   002618  EF36  F013         	goto	l1315
  3401   00261C                     u3050:
  3402   00261C  0E01               	movlw	1
  3403   00261E  6E08               	movwf	___lwdiv@counter^0,c
  3404   002620  EF16  F013         	goto	l3792
  3405   002624                     l3790:
  3406   002624  90D8               	bcf	status,0,c
  3407   002626  3604               	rlcf	___lwdiv@divisor^0,f,c
  3408   002628  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3409   00262A  2A08               	incf	___lwdiv@counter^0,f,c
  3410   00262C                     l3792:
  3411   00262C  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  3412   00262E  EF1B  F013         	goto	u3061
  3413   002632  EF1D  F013         	goto	u3060
  3414   002636                     u3061:
  3415   002636  EF12  F013         	goto	l3790
  3416   00263A                     u3060:
  3417   00263A                     l3794:
  3418   00263A  90D8               	bcf	status,0,c
  3419   00263C  3606               	rlcf	___lwdiv@quotient^0,f,c
  3420   00263E  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3421   002640  5004               	movf	___lwdiv@divisor^0,w,c
  3422   002642  5C02               	subwf	___lwdiv@dividend^0,w,c
  3423   002644  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  3424   002646  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3425   002648  A0D8               	btfss	status,0,c
  3426   00264A  EF29  F013         	goto	u3071
  3427   00264E  EF2B  F013         	goto	u3070
  3428   002652                     u3071:
  3429   002652  EF30  F013         	goto	l3802
  3430   002656                     u3070:
  3431   002656  5004               	movf	___lwdiv@divisor^0,w,c
  3432   002658  5E02               	subwf	___lwdiv@dividend^0,f,c
  3433   00265A  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  3434   00265C  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3435   00265E  8006               	bsf	___lwdiv@quotient^0,0,c
  3436   002660                     l3802:
  3437   002660  90D8               	bcf	status,0,c
  3438   002662  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3439   002664  3204               	rrcf	___lwdiv@divisor^0,f,c
  3440   002666  2E08               	decfsz	___lwdiv@counter^0,f,c
  3441   002668  EF1D  F013         	goto	l3794
  3442   00266C                     l1315:
  3443   00266C  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  3444   002670  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3445   002674  0012               	return		;funcret
  3446   002676                     __end_of___lwdiv:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function ___fltol *****************
  3450 ;; Defined at:
  3451 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  f1              4   40[COMRAM] unsigned int 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  exp1            1    1[BANK0 ] unsigned char 
  3456 ;;  sign1           1    0[BANK0 ] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  4   40[COMRAM] long 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:       10 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 2
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text17
  3481   001EA2                     __ptext17:
  3482                           	callstack 0
  3483   001EA2                     ___fltol:
  3484                           	callstack 28
  3485   001EA2  342B               	rlcf	(___fltol@f1+2)^0,w,c
  3486   001EA4  342C               	rlcf	(___fltol@f1+3)^0,w,c
  3487   001EA6  0100               	movlb	0	; () banked
  3488   001EA8  6FA7               	movwf	___fltol@exp1& (0+255),b
  3489   001EAA  51A7               	movf	___fltol@exp1& (0+255),w,b
  3490   001EAC  A4D8               	btfss	status,2,c
  3491   001EAE  EF5B  F00F         	goto	u3531
  3492   001EB2  EF5D  F00F         	goto	u3530
  3493   001EB6                     u3531:
  3494   001EB6  EF67  F00F         	goto	l4304
  3495   001EBA                     u3530:
  3496   001EBA                     l4300:
  3497                           
  3498                           ; BSR set to: 0
  3499   001EBA  0E00               	movlw	0
  3500   001EBC  6E29               	movwf	?___fltol^0,c
  3501   001EBE  0E00               	movlw	0
  3502   001EC0  6E2A               	movwf	(?___fltol+1)^0,c
  3503   001EC2  0E00               	movlw	0
  3504   001EC4  6E2B               	movwf	(?___fltol+2)^0,c
  3505   001EC6  0E00               	movlw	0
  3506   001EC8  6E2C               	movwf	(?___fltol+3)^0,c
  3507   001ECA  EFD4  F00F         	goto	l1121
  3508   001ECE                     l4304:
  3509                           
  3510                           ; BSR set to: 0
  3511   001ECE  C029  F02D         	movff	___fltol@f1,??___fltol
  3512   001ED2  C02A  F02E         	movff	___fltol@f1+1,??___fltol+1
  3513   001ED6  C02B  F02F         	movff	___fltol@f1+2,??___fltol+2
  3514   001EDA  C02C  F030         	movff	___fltol@f1+3,??___fltol+3
  3515   001EDE  0E20               	movlw	32
  3516   001EE0  EF77  F00F         	goto	u3540
  3517   001EE4                     u3545:
  3518   001EE4  90D8               	bcf	status,0,c
  3519   001EE6  3230               	rrcf	(??___fltol+3)^0,f,c
  3520   001EE8  322F               	rrcf	(??___fltol+2)^0,f,c
  3521   001EEA  322E               	rrcf	(??___fltol+1)^0,f,c
  3522   001EEC  322D               	rrcf	??___fltol^0,f,c
  3523   001EEE                     u3540:
  3524   001EEE  2EE8               	decfsz	wreg,f,c
  3525   001EF0  EF72  F00F         	goto	u3545
  3526   001EF4  502D               	movf	??___fltol^0,w,c
  3527   001EF6  6FA6               	movwf	___fltol@sign1& (0+255),b
  3528   001EF8                     
  3529                           ; BSR set to: 0
  3530   001EF8  8E2B               	bsf	(___fltol@f1+2)^0,7,c
  3531   001EFA                     
  3532                           ; BSR set to: 0
  3533   001EFA  0EFF               	movlw	255
  3534   001EFC  1629               	andwf	___fltol@f1^0,f,c
  3535   001EFE  0EFF               	movlw	255
  3536   001F00  162A               	andwf	(___fltol@f1+1)^0,f,c
  3537   001F02  0EFF               	movlw	255
  3538   001F04  162B               	andwf	(___fltol@f1+2)^0,f,c
  3539   001F06  0E00               	movlw	0
  3540   001F08  162C               	andwf	(___fltol@f1+3)^0,f,c
  3541   001F0A                     
  3542                           ; BSR set to: 0
  3543   001F0A  0E96               	movlw	150
  3544   001F0C  5FA7               	subwf	___fltol@exp1& (0+255),f,b
  3545   001F0E                     
  3546                           ; BSR set to: 0
  3547   001F0E  BFA7               	btfsc	___fltol@exp1& (0+255),7,b
  3548   001F10  EF8E  F00F         	goto	u3550
  3549   001F14  EF8C  F00F         	goto	u3551
  3550   001F18                     u3551:
  3551   001F18  EFA4  F00F         	goto	l4324
  3552   001F1C                     u3550:
  3553   001F1C                     
  3554                           ; BSR set to: 0
  3555   001F1C  51A7               	movf	___fltol@exp1& (0+255),w,b
  3556   001F1E  0A80               	xorlw	128
  3557   001F20  0F97               	addlw	151
  3558   001F22  B0D8               	btfsc	status,0,c
  3559   001F24  EF96  F00F         	goto	u3561
  3560   001F28  EF98  F00F         	goto	u3560
  3561   001F2C                     u3561:
  3562   001F2C  EF9A  F00F         	goto	l4320
  3563   001F30                     u3560:
  3564   001F30  EF5D  F00F         	goto	l4300
  3565   001F34                     l4320:
  3566                           
  3567                           ; BSR set to: 0
  3568   001F34  90D8               	bcf	status,0,c
  3569   001F36  322C               	rrcf	(___fltol@f1+3)^0,f,c
  3570   001F38  322B               	rrcf	(___fltol@f1+2)^0,f,c
  3571   001F3A  322A               	rrcf	(___fltol@f1+1)^0,f,c
  3572   001F3C  3229               	rrcf	___fltol@f1^0,f,c
  3573   001F3E                     
  3574                           ; BSR set to: 0
  3575   001F3E  3FA7               	incfsz	___fltol@exp1& (0+255),f,b
  3576   001F40  EF9A  F00F         	goto	l4320
  3577   001F44  EFBC  F00F         	goto	l4334
  3578   001F48                     l4324:
  3579                           
  3580                           ; BSR set to: 0
  3581   001F48  0E1F               	movlw	31
  3582   001F4A  65A7               	cpfsgt	___fltol@exp1& (0+255),b
  3583   001F4C  EFAA  F00F         	goto	u3571
  3584   001F50  EFAC  F00F         	goto	u3570
  3585   001F54                     u3571:
  3586   001F54  EFB4  F00F         	goto	l4332
  3587   001F58                     u3570:
  3588   001F58  EF5D  F00F         	goto	l4300
  3589   001F5C                     l4330:
  3590                           
  3591                           ; BSR set to: 0
  3592   001F5C  90D8               	bcf	status,0,c
  3593   001F5E  3629               	rlcf	___fltol@f1^0,f,c
  3594   001F60  362A               	rlcf	(___fltol@f1+1)^0,f,c
  3595   001F62  362B               	rlcf	(___fltol@f1+2)^0,f,c
  3596   001F64  362C               	rlcf	(___fltol@f1+3)^0,f,c
  3597   001F66  07A7               	decf	___fltol@exp1& (0+255),f,b
  3598   001F68                     l4332:
  3599                           
  3600                           ; BSR set to: 0
  3601   001F68  51A7               	movf	___fltol@exp1& (0+255),w,b
  3602   001F6A  A4D8               	btfss	status,2,c
  3603   001F6C  EFBA  F00F         	goto	u3581
  3604   001F70  EFBC  F00F         	goto	u3580
  3605   001F74                     u3581:
  3606   001F74  EFAE  F00F         	goto	l4330
  3607   001F78                     u3580:
  3608   001F78                     l4334:
  3609                           
  3610                           ; BSR set to: 0
  3611   001F78  51A6               	movf	___fltol@sign1& (0+255),w,b
  3612   001F7A  B4D8               	btfsc	status,2,c
  3613   001F7C  EFC2  F00F         	goto	u3591
  3614   001F80  EFC4  F00F         	goto	u3590
  3615   001F84                     u3591:
  3616   001F84  EFCC  F00F         	goto	l4338
  3617   001F88                     u3590:
  3618   001F88                     
  3619                           ; BSR set to: 0
  3620   001F88  1E2C               	comf	(___fltol@f1+3)^0,f,c
  3621   001F8A  1E2B               	comf	(___fltol@f1+2)^0,f,c
  3622   001F8C  1E2A               	comf	(___fltol@f1+1)^0,f,c
  3623   001F8E  6C29               	negf	___fltol@f1^0,c
  3624   001F90  0E00               	movlw	0
  3625   001F92  222A               	addwfc	(___fltol@f1+1)^0,f,c
  3626   001F94  222B               	addwfc	(___fltol@f1+2)^0,f,c
  3627   001F96  222C               	addwfc	(___fltol@f1+3)^0,f,c
  3628   001F98                     l4338:
  3629                           
  3630                           ; BSR set to: 0
  3631   001F98  C029  F029         	movff	___fltol@f1,?___fltol
  3632   001F9C  C02A  F02A         	movff	___fltol@f1+1,?___fltol+1
  3633   001FA0  C02B  F02B         	movff	___fltol@f1+2,?___fltol+2
  3634   001FA4  C02C  F02C         	movff	___fltol@f1+3,?___fltol+3
  3635   001FA8                     l1121:
  3636                           
  3637                           ; BSR set to: 0
  3638   001FA8  0012               	return		;funcret
  3639   001FAA                     __end_of___fltol:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function ___flmul *****************
  3643 ;; Defined at:
  3644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  b               4   15[COMRAM] long 
  3647 ;;  a               4   19[COMRAM] long 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  prod            4   34[COMRAM] struct .
  3650 ;;  grs             4   28[COMRAM] unsigned long 
  3651 ;;  temp            2   38[COMRAM] struct .
  3652 ;;  bexp            1   33[COMRAM] unsigned char 
  3653 ;;  aexp            1   32[COMRAM] unsigned char 
  3654 ;;  sign            1   27[COMRAM] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  4   15[COMRAM] unsigned char 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, prodl, prodh
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3664 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;Total ram usage:       25 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 2
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_main
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text18
  3679   001012                     __ptext18:
  3680                           	callstack 0
  3681   001012                     ___flmul:
  3682                           	callstack 28
  3683   001012  5013               	movf	(___flmul@b+3)^0,w,c
  3684   001014  0B80               	andlw	128
  3685   001016  6E1C               	movwf	___flmul@sign^0,c
  3686   001018  5013               	movf	(___flmul@b+3)^0,w,c
  3687   00101A  2413               	addwf	(___flmul@b+3)^0,w,c
  3688   00101C  6E22               	movwf	___flmul@bexp^0,c
  3689   00101E  AE12               	btfss	(___flmul@b+2)^0,7,c
  3690   001020  EF14  F008         	goto	u2791
  3691   001024  EF16  F008         	goto	u2790
  3692   001028                     u2791:
  3693   001028  EF17  F008         	goto	l3616
  3694   00102C                     u2790:
  3695   00102C  8022               	bsf	___flmul@bexp^0,0,c
  3696   00102E                     l3616:
  3697   00102E  5022               	movf	___flmul@bexp^0,w,c
  3698   001030  B4D8               	btfsc	status,2,c
  3699   001032  EF1D  F008         	goto	u2801
  3700   001036  EF1F  F008         	goto	u2800
  3701   00103A                     u2801:
  3702   00103A  EF32  F008         	goto	l3624
  3703   00103E                     u2800:
  3704   00103E  2822               	incf	___flmul@bexp^0,w,c
  3705   001040  A4D8               	btfss	status,2,c
  3706   001042  EF25  F008         	goto	u2811
  3707   001046  EF27  F008         	goto	u2810
  3708   00104A                     u2811:
  3709   00104A  EF2F  F008         	goto	l3622
  3710   00104E                     u2810:
  3711   00104E  0E00               	movlw	0
  3712   001050  6E10               	movwf	___flmul@b^0,c
  3713   001052  0E00               	movlw	0
  3714   001054  6E11               	movwf	(___flmul@b+1)^0,c
  3715   001056  0E00               	movlw	0
  3716   001058  6E12               	movwf	(___flmul@b+2)^0,c
  3717   00105A  0E00               	movlw	0
  3718   00105C  6E13               	movwf	(___flmul@b+3)^0,c
  3719   00105E                     l3622:
  3720   00105E  8E12               	bsf	(___flmul@b+2)^0,7,c
  3721   001060  EF3A  F008         	goto	l3626
  3722   001064                     l3624:
  3723   001064  0E00               	movlw	0
  3724   001066  6E10               	movwf	___flmul@b^0,c
  3725   001068  0E00               	movlw	0
  3726   00106A  6E11               	movwf	(___flmul@b+1)^0,c
  3727   00106C  0E00               	movlw	0
  3728   00106E  6E12               	movwf	(___flmul@b+2)^0,c
  3729   001070  0E00               	movlw	0
  3730   001072  6E13               	movwf	(___flmul@b+3)^0,c
  3731   001074                     l3626:
  3732   001074  5017               	movf	(___flmul@a+3)^0,w,c
  3733   001076  0B80               	andlw	128
  3734   001078  1A1C               	xorwf	___flmul@sign^0,f,c
  3735   00107A  5017               	movf	(___flmul@a+3)^0,w,c
  3736   00107C  2417               	addwf	(___flmul@a+3)^0,w,c
  3737   00107E  6E21               	movwf	___flmul@aexp^0,c
  3738   001080  AE16               	btfss	(___flmul@a+2)^0,7,c
  3739   001082  EF45  F008         	goto	u2821
  3740   001086  EF47  F008         	goto	u2820
  3741   00108A                     u2821:
  3742   00108A  EF48  F008         	goto	l3634
  3743   00108E                     u2820:
  3744   00108E  8021               	bsf	___flmul@aexp^0,0,c
  3745   001090                     l3634:
  3746   001090  5021               	movf	___flmul@aexp^0,w,c
  3747   001092  B4D8               	btfsc	status,2,c
  3748   001094  EF4E  F008         	goto	u2831
  3749   001098  EF50  F008         	goto	u2830
  3750   00109C                     u2831:
  3751   00109C  EF63  F008         	goto	l3642
  3752   0010A0                     u2830:
  3753   0010A0  2821               	incf	___flmul@aexp^0,w,c
  3754   0010A2  A4D8               	btfss	status,2,c
  3755   0010A4  EF56  F008         	goto	u2841
  3756   0010A8  EF58  F008         	goto	u2840
  3757   0010AC                     u2841:
  3758   0010AC  EF60  F008         	goto	l3640
  3759   0010B0                     u2840:
  3760   0010B0  0E00               	movlw	0
  3761   0010B2  6E14               	movwf	___flmul@a^0,c
  3762   0010B4  0E00               	movlw	0
  3763   0010B6  6E15               	movwf	(___flmul@a+1)^0,c
  3764   0010B8  0E00               	movlw	0
  3765   0010BA  6E16               	movwf	(___flmul@a+2)^0,c
  3766   0010BC  0E00               	movlw	0
  3767   0010BE  6E17               	movwf	(___flmul@a+3)^0,c
  3768   0010C0                     l3640:
  3769   0010C0  8E16               	bsf	(___flmul@a+2)^0,7,c
  3770   0010C2  EF6B  F008         	goto	l1438
  3771   0010C6                     l3642:
  3772   0010C6  0E00               	movlw	0
  3773   0010C8  6E14               	movwf	___flmul@a^0,c
  3774   0010CA  0E00               	movlw	0
  3775   0010CC  6E15               	movwf	(___flmul@a+1)^0,c
  3776   0010CE  0E00               	movlw	0
  3777   0010D0  6E16               	movwf	(___flmul@a+2)^0,c
  3778   0010D2  0E00               	movlw	0
  3779   0010D4  6E17               	movwf	(___flmul@a+3)^0,c
  3780   0010D6                     l1438:
  3781   0010D6  5021               	movf	___flmul@aexp^0,w,c
  3782   0010D8  B4D8               	btfsc	status,2,c
  3783   0010DA  EF71  F008         	goto	u2851
  3784   0010DE  EF73  F008         	goto	u2850
  3785   0010E2                     u2851:
  3786   0010E2  EF7B  F008         	goto	l3646
  3787   0010E6                     u2850:
  3788   0010E6  5022               	movf	___flmul@bexp^0,w,c
  3789   0010E8  A4D8               	btfss	status,2,c
  3790   0010EA  EF79  F008         	goto	u2861
  3791   0010EE  EF7B  F008         	goto	u2860
  3792   0010F2                     u2861:
  3793   0010F2  EF85  F008         	goto	l3650
  3794   0010F6                     u2860:
  3795   0010F6                     l3646:
  3796   0010F6  0E00               	movlw	0
  3797   0010F8  6E10               	movwf	?___flmul^0,c
  3798   0010FA  0E00               	movlw	0
  3799   0010FC  6E11               	movwf	(?___flmul+1)^0,c
  3800   0010FE  0E00               	movlw	0
  3801   001100  6E12               	movwf	(?___flmul+2)^0,c
  3802   001102  0E00               	movlw	0
  3803   001104  6E13               	movwf	(?___flmul+3)^0,c
  3804   001106  EF1D  F00A         	goto	l1442
  3805   00110A                     l3650:
  3806   00110A  5016               	movf	(___flmul@a+2)^0,w,c
  3807   00110C  0210               	mulwf	___flmul@b^0,c
  3808   00110E  CFF3 F027          	movff	prodl,___flmul@temp
  3809   001112  CFF4 F028          	movff	prodh,___flmul@temp+1
  3810   001116  5027               	movf	___flmul@temp^0,w,c
  3811   001118  6E1D               	movwf	___flmul@grs^0,c
  3812   00111A  6A1E               	clrf	(___flmul@grs+1)^0,c
  3813   00111C  6A1F               	clrf	(___flmul@grs+2)^0,c
  3814   00111E  6A20               	clrf	(___flmul@grs+3)^0,c
  3815   001120  5028               	movf	(___flmul@temp+1)^0,w,c
  3816   001122  6E23               	movwf	___flmul@prod^0,c
  3817   001124  6A24               	clrf	(___flmul@prod+1)^0,c
  3818   001126  6A25               	clrf	(___flmul@prod+2)^0,c
  3819   001128  6A26               	clrf	(___flmul@prod+3)^0,c
  3820   00112A  5015               	movf	(___flmul@a+1)^0,w,c
  3821   00112C  0211               	mulwf	(___flmul@b+1)^0,c
  3822   00112E  CFF3 F027          	movff	prodl,___flmul@temp
  3823   001132  CFF4 F028          	movff	prodh,___flmul@temp+1
  3824   001136  5027               	movf	___flmul@temp^0,w,c
  3825   001138  261D               	addwf	___flmul@grs^0,f,c
  3826   00113A  0E00               	movlw	0
  3827   00113C  221E               	addwfc	(___flmul@grs+1)^0,f,c
  3828   00113E  221F               	addwfc	(___flmul@grs+2)^0,f,c
  3829   001140  2220               	addwfc	(___flmul@grs+3)^0,f,c
  3830   001142  5028               	movf	(___flmul@temp+1)^0,w,c
  3831   001144  2623               	addwf	___flmul@prod^0,f,c
  3832   001146  0E00               	movlw	0
  3833   001148  2224               	addwfc	(___flmul@prod+1)^0,f,c
  3834   00114A  2225               	addwfc	(___flmul@prod+2)^0,f,c
  3835   00114C  2226               	addwfc	(___flmul@prod+3)^0,f,c
  3836   00114E  5014               	movf	___flmul@a^0,w,c
  3837   001150  0212               	mulwf	(___flmul@b+2)^0,c
  3838   001152  CFF3 F027          	movff	prodl,___flmul@temp
  3839   001156  CFF4 F028          	movff	prodh,___flmul@temp+1
  3840   00115A  5027               	movf	___flmul@temp^0,w,c
  3841   00115C  261D               	addwf	___flmul@grs^0,f,c
  3842   00115E  0E00               	movlw	0
  3843   001160  221E               	addwfc	(___flmul@grs+1)^0,f,c
  3844   001162  221F               	addwfc	(___flmul@grs+2)^0,f,c
  3845   001164  2220               	addwfc	(___flmul@grs+3)^0,f,c
  3846   001166  5028               	movf	(___flmul@temp+1)^0,w,c
  3847   001168  2623               	addwf	___flmul@prod^0,f,c
  3848   00116A  0E00               	movlw	0
  3849   00116C  2224               	addwfc	(___flmul@prod+1)^0,f,c
  3850   00116E  2225               	addwfc	(___flmul@prod+2)^0,f,c
  3851   001170  2226               	addwfc	(___flmul@prod+3)^0,f,c
  3852   001172  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  3853   001176  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  3854   00117A  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  3855   00117E  6A1D               	clrf	___flmul@grs^0,c
  3856   001180  5014               	movf	___flmul@a^0,w,c
  3857   001182  0211               	mulwf	(___flmul@b+1)^0,c
  3858   001184  CFF3 F027          	movff	prodl,___flmul@temp
  3859   001188  CFF4 F028          	movff	prodh,___flmul@temp+1
  3860   00118C  5027               	movf	___flmul@temp^0,w,c
  3861   00118E  261D               	addwf	___flmul@grs^0,f,c
  3862   001190  5028               	movf	(___flmul@temp+1)^0,w,c
  3863   001192  221E               	addwfc	(___flmul@grs+1)^0,f,c
  3864   001194  0E00               	movlw	0
  3865   001196  221F               	addwfc	(___flmul@grs+2)^0,f,c
  3866   001198  0E00               	movlw	0
  3867   00119A  2220               	addwfc	(___flmul@grs+3)^0,f,c
  3868   00119C  5015               	movf	(___flmul@a+1)^0,w,c
  3869   00119E  0210               	mulwf	___flmul@b^0,c
  3870   0011A0  CFF3 F027          	movff	prodl,___flmul@temp
  3871   0011A4  CFF4 F028          	movff	prodh,___flmul@temp+1
  3872   0011A8  5027               	movf	___flmul@temp^0,w,c
  3873   0011AA  261D               	addwf	___flmul@grs^0,f,c
  3874   0011AC  5028               	movf	(___flmul@temp+1)^0,w,c
  3875   0011AE  221E               	addwfc	(___flmul@grs+1)^0,f,c
  3876   0011B0  0E00               	movlw	0
  3877   0011B2  221F               	addwfc	(___flmul@grs+2)^0,f,c
  3878   0011B4  0E00               	movlw	0
  3879   0011B6  2220               	addwfc	(___flmul@grs+3)^0,f,c
  3880   0011B8  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  3881   0011BC  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  3882   0011C0  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  3883   0011C4  6A1D               	clrf	___flmul@grs^0,c
  3884   0011C6  5014               	movf	___flmul@a^0,w,c
  3885   0011C8  0210               	mulwf	___flmul@b^0,c
  3886   0011CA  CFF3 F027          	movff	prodl,___flmul@temp
  3887   0011CE  CFF4 F028          	movff	prodh,___flmul@temp+1
  3888   0011D2  5027               	movf	___flmul@temp^0,w,c
  3889   0011D4  261D               	addwf	___flmul@grs^0,f,c
  3890   0011D6  5028               	movf	(___flmul@temp+1)^0,w,c
  3891   0011D8  221E               	addwfc	(___flmul@grs+1)^0,f,c
  3892   0011DA  0E00               	movlw	0
  3893   0011DC  221F               	addwfc	(___flmul@grs+2)^0,f,c
  3894   0011DE  0E00               	movlw	0
  3895   0011E0  2220               	addwfc	(___flmul@grs+3)^0,f,c
  3896   0011E2  5016               	movf	(___flmul@a+2)^0,w,c
  3897   0011E4  0211               	mulwf	(___flmul@b+1)^0,c
  3898   0011E6  CFF3 F027          	movff	prodl,___flmul@temp
  3899   0011EA  CFF4 F028          	movff	prodh,___flmul@temp+1
  3900   0011EE  5027               	movf	___flmul@temp^0,w,c
  3901   0011F0  2623               	addwf	___flmul@prod^0,f,c
  3902   0011F2  5028               	movf	(___flmul@temp+1)^0,w,c
  3903   0011F4  2224               	addwfc	(___flmul@prod+1)^0,f,c
  3904   0011F6  0E00               	movlw	0
  3905   0011F8  2225               	addwfc	(___flmul@prod+2)^0,f,c
  3906   0011FA  0E00               	movlw	0
  3907   0011FC  2226               	addwfc	(___flmul@prod+3)^0,f,c
  3908   0011FE  5015               	movf	(___flmul@a+1)^0,w,c
  3909   001200  0212               	mulwf	(___flmul@b+2)^0,c
  3910   001202  CFF3 F027          	movff	prodl,___flmul@temp
  3911   001206  CFF4 F028          	movff	prodh,___flmul@temp+1
  3912   00120A  5027               	movf	___flmul@temp^0,w,c
  3913   00120C  2623               	addwf	___flmul@prod^0,f,c
  3914   00120E  5028               	movf	(___flmul@temp+1)^0,w,c
  3915   001210  2224               	addwfc	(___flmul@prod+1)^0,f,c
  3916   001212  0E00               	movlw	0
  3917   001214  2225               	addwfc	(___flmul@prod+2)^0,f,c
  3918   001216  0E00               	movlw	0
  3919   001218  2226               	addwfc	(___flmul@prod+3)^0,f,c
  3920   00121A  5016               	movf	(___flmul@a+2)^0,w,c
  3921   00121C  0212               	mulwf	(___flmul@b+2)^0,c
  3922   00121E  CFF3 F027          	movff	prodl,___flmul@temp
  3923   001222  CFF4 F028          	movff	prodh,___flmul@temp+1
  3924   001226  5027               	movf	___flmul@temp^0,w,c
  3925   001228  6E18               	movwf	??___flmul^0,c
  3926   00122A  5028               	movf	(___flmul@temp+1)^0,w,c
  3927   00122C  6E19               	movwf	(??___flmul+1)^0,c
  3928   00122E  6A1A               	clrf	(??___flmul+2)^0,c
  3929   001230  6A1B               	clrf	(??___flmul+3)^0,c
  3930   001232  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  3931   001236  C019  F01A         	movff	??___flmul+1,??___flmul+2
  3932   00123A  C018  F019         	movff	??___flmul,??___flmul+1
  3933   00123E  6A18               	clrf	??___flmul^0,c
  3934   001240  5018               	movf	??___flmul^0,w,c
  3935   001242  2623               	addwf	___flmul@prod^0,f,c
  3936   001244  5019               	movf	(??___flmul+1)^0,w,c
  3937   001246  2224               	addwfc	(___flmul@prod+1)^0,f,c
  3938   001248  501A               	movf	(??___flmul+2)^0,w,c
  3939   00124A  2225               	addwfc	(___flmul@prod+2)^0,f,c
  3940   00124C  501B               	movf	(??___flmul+3)^0,w,c
  3941   00124E  2226               	addwfc	(___flmul@prod+3)^0,f,c
  3942   001250  C01D  F018         	movff	___flmul@grs,??___flmul
  3943   001254  C01E  F019         	movff	___flmul@grs+1,??___flmul+1
  3944   001258  C01F  F01A         	movff	___flmul@grs+2,??___flmul+2
  3945   00125C  C020  F01B         	movff	___flmul@grs+3,??___flmul+3
  3946   001260  0E19               	movlw	25
  3947   001262  EF38  F009         	goto	u2870
  3948   001266                     u2875:
  3949   001266  90D8               	bcf	status,0,c
  3950   001268  321B               	rrcf	(??___flmul+3)^0,f,c
  3951   00126A  321A               	rrcf	(??___flmul+2)^0,f,c
  3952   00126C  3219               	rrcf	(??___flmul+1)^0,f,c
  3953   00126E  3218               	rrcf	??___flmul^0,f,c
  3954   001270                     u2870:
  3955   001270  2EE8               	decfsz	wreg,f,c
  3956   001272  EF33  F009         	goto	u2875
  3957   001276  5018               	movf	??___flmul^0,w,c
  3958   001278  2623               	addwf	___flmul@prod^0,f,c
  3959   00127A  5019               	movf	(??___flmul+1)^0,w,c
  3960   00127C  2224               	addwfc	(___flmul@prod+1)^0,f,c
  3961   00127E  501A               	movf	(??___flmul+2)^0,w,c
  3962   001280  2225               	addwfc	(___flmul@prod+2)^0,f,c
  3963   001282  501B               	movf	(??___flmul+3)^0,w,c
  3964   001284  2226               	addwfc	(___flmul@prod+3)^0,f,c
  3965   001286  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  3966   00128A  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  3967   00128E  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  3968   001292  6A1D               	clrf	___flmul@grs^0,c
  3969   001294  5021               	movf	___flmul@aexp^0,w,c
  3970   001296  C022  F018         	movff	___flmul@bexp,??___flmul
  3971   00129A  6A19               	clrf	(??___flmul+1)^0,c
  3972   00129C  2618               	addwf	??___flmul^0,f,c
  3973   00129E  0E00               	movlw	0
  3974   0012A0  2219               	addwfc	(??___flmul+1)^0,f,c
  3975   0012A2  0E82               	movlw	130
  3976   0012A4  2418               	addwf	??___flmul^0,w,c
  3977   0012A6  6E27               	movwf	___flmul@temp^0,c
  3978   0012A8  0EFF               	movlw	255
  3979   0012AA  2019               	addwfc	(??___flmul+1)^0,w,c
  3980   0012AC  6E28               	movwf	(___flmul@temp+1)^0,c
  3981   0012AE  EF6E  F009         	goto	l3698
  3982   0012B2                     l3692:
  3983   0012B2  90D8               	bcf	status,0,c
  3984   0012B4  3623               	rlcf	___flmul@prod^0,f,c
  3985   0012B6  3624               	rlcf	(___flmul@prod+1)^0,f,c
  3986   0012B8  3625               	rlcf	(___flmul@prod+2)^0,f,c
  3987   0012BA  3626               	rlcf	(___flmul@prod+3)^0,f,c
  3988   0012BC  AE20               	btfss	(___flmul@grs+3)^0,7,c
  3989   0012BE  EF63  F009         	goto	u2881
  3990   0012C2  EF65  F009         	goto	u2880
  3991   0012C6                     u2881:
  3992   0012C6  EF66  F009         	goto	l1445
  3993   0012CA                     u2880:
  3994   0012CA  8023               	bsf	___flmul@prod^0,0,c
  3995   0012CC                     l1445:
  3996   0012CC  90D8               	bcf	status,0,c
  3997   0012CE  361D               	rlcf	___flmul@grs^0,f,c
  3998   0012D0  361E               	rlcf	(___flmul@grs+1)^0,f,c
  3999   0012D2  361F               	rlcf	(___flmul@grs+2)^0,f,c
  4000   0012D4  3620               	rlcf	(___flmul@grs+3)^0,f,c
  4001   0012D6  0627               	decf	___flmul@temp^0,f,c
  4002   0012D8  A0D8               	btfss	status,0,c
  4003   0012DA  0628               	decf	(___flmul@temp+1)^0,f,c
  4004   0012DC                     l3698:
  4005   0012DC  AE25               	btfss	(___flmul@prod+2)^0,7,c
  4006   0012DE  EF73  F009         	goto	u2891
  4007   0012E2  EF75  F009         	goto	u2890
  4008   0012E6                     u2891:
  4009   0012E6  EF59  F009         	goto	l3692
  4010   0012EA                     u2890:
  4011   0012EA  0E00               	movlw	0
  4012   0012EC  6E21               	movwf	___flmul@aexp^0,c
  4013   0012EE  AE20               	btfss	(___flmul@grs+3)^0,7,c
  4014   0012F0  EF7C  F009         	goto	u2901
  4015   0012F4  EF7E  F009         	goto	u2900
  4016   0012F8                     u2901:
  4017   0012F8  EFA2  F009         	goto	l1447
  4018   0012FC                     u2900:
  4019   0012FC  0EFF               	movlw	255
  4020   0012FE  141D               	andwf	___flmul@grs^0,w,c
  4021   001300  6E18               	movwf	??___flmul^0,c
  4022   001302  0EFF               	movlw	255
  4023   001304  141E               	andwf	(___flmul@grs+1)^0,w,c
  4024   001306  6E19               	movwf	(??___flmul+1)^0,c
  4025   001308  0EFF               	movlw	255
  4026   00130A  141F               	andwf	(___flmul@grs+2)^0,w,c
  4027   00130C  6E1A               	movwf	(??___flmul+2)^0,c
  4028   00130E  0E7F               	movlw	127
  4029   001310  1420               	andwf	(___flmul@grs+3)^0,w,c
  4030   001312  6E1B               	movwf	(??___flmul+3)^0,c
  4031   001314  5018               	movf	??___flmul^0,w,c
  4032   001316  1019               	iorwf	(??___flmul+1)^0,w,c
  4033   001318  101A               	iorwf	(??___flmul+2)^0,w,c
  4034   00131A  101B               	iorwf	(??___flmul+3)^0,w,c
  4035   00131C  B4D8               	btfsc	status,2,c
  4036   00131E  EF93  F009         	goto	u2911
  4037   001322  EF95  F009         	goto	u2910
  4038   001326                     u2911:
  4039   001326  EF99  F009         	goto	l1448
  4040   00132A                     u2910:
  4041   00132A                     l3706:
  4042   00132A  0E01               	movlw	1
  4043   00132C  6E21               	movwf	___flmul@aexp^0,c
  4044   00132E  EFA2  F009         	goto	l1447
  4045   001332                     l1448:
  4046   001332  A023               	btfss	___flmul@prod^0,0,c
  4047   001334  EF9E  F009         	goto	u2921
  4048   001338  EFA0  F009         	goto	u2920
  4049   00133C                     u2921:
  4050   00133C  EFA2  F009         	goto	l1447
  4051   001340                     u2920:
  4052   001340  EF95  F009         	goto	l3706
  4053   001344                     l1447:
  4054   001344  5021               	movf	___flmul@aexp^0,w,c
  4055   001346  B4D8               	btfsc	status,2,c
  4056   001348  EFA8  F009         	goto	u2931
  4057   00134C  EFAA  F009         	goto	u2930
  4058   001350                     u2931:
  4059   001350  EFCE  F009         	goto	l3718
  4060   001354                     u2930:
  4061   001354  0E01               	movlw	1
  4062   001356  2623               	addwf	___flmul@prod^0,f,c
  4063   001358  0E00               	movlw	0
  4064   00135A  2224               	addwfc	(___flmul@prod+1)^0,f,c
  4065   00135C  2225               	addwfc	(___flmul@prod+2)^0,f,c
  4066   00135E  2226               	addwfc	(___flmul@prod+3)^0,f,c
  4067   001360  A026               	btfss	(___flmul@prod+3)^0,0,c
  4068   001362  EFB5  F009         	goto	u2941
  4069   001366  EFB7  F009         	goto	u2940
  4070   00136A                     u2941:
  4071   00136A  EFCE  F009         	goto	l3718
  4072   00136E                     u2940:
  4073   00136E  C023  F018         	movff	___flmul@prod,??___flmul
  4074   001372  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  4075   001376  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  4076   00137A  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  4077   00137E  341B               	rlcf	(??___flmul+3)^0,w,c
  4078   001380  321B               	rrcf	(??___flmul+3)^0,f,c
  4079   001382  321A               	rrcf	(??___flmul+2)^0,f,c
  4080   001384  3219               	rrcf	(??___flmul+1)^0,f,c
  4081   001386  3218               	rrcf	??___flmul^0,f,c
  4082   001388  C018  F023         	movff	??___flmul,___flmul@prod
  4083   00138C  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  4084   001390  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  4085   001394  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  4086   001398  4A27               	infsnz	___flmul@temp^0,f,c
  4087   00139A  2A28               	incf	(___flmul@temp+1)^0,f,c
  4088   00139C                     l3718:
  4089   00139C  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  4090   00139E  EFD9  F009         	goto	u2951
  4091   0013A2  5028               	movf	(___flmul@temp+1)^0,w,c
  4092   0013A4  E108               	bnz	u2950
  4093   0013A6  2827               	incf	___flmul@temp^0,w,c
  4094   0013A8  A0D8               	btfss	status,0,c
  4095   0013AA  EFD9  F009         	goto	u2951
  4096   0013AE  EFDB  F009         	goto	u2950
  4097   0013B2                     u2951:
  4098   0013B2  EFE5  F009         	goto	l3722
  4099   0013B6                     u2950:
  4100   0013B6  0E00               	movlw	0
  4101   0013B8  6E23               	movwf	___flmul@prod^0,c
  4102   0013BA  0E00               	movlw	0
  4103   0013BC  6E24               	movwf	(___flmul@prod+1)^0,c
  4104   0013BE  0E80               	movlw	128
  4105   0013C0  6E25               	movwf	(___flmul@prod+2)^0,c
  4106   0013C2  0E7F               	movlw	127
  4107   0013C4  6E26               	movwf	(___flmul@prod+3)^0,c
  4108   0013C6  EF13  F00A         	goto	l3734
  4109   0013CA                     l3722:
  4110   0013CA  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  4111   0013CC  EFF2  F009         	goto	u2960
  4112   0013D0  5028               	movf	(___flmul@temp+1)^0,w,c
  4113   0013D2  E106               	bnz	u2961
  4114   0013D4  0427               	decf	___flmul@temp^0,w,c
  4115   0013D6  B0D8               	btfsc	status,0,c
  4116   0013D8  EFF0  F009         	goto	u2961
  4117   0013DC  EFF2  F009         	goto	u2960
  4118   0013E0                     u2961:
  4119   0013E0  EFFE  F009         	goto	l1455
  4120   0013E4                     u2960:
  4121   0013E4  0E00               	movlw	0
  4122   0013E6  6E23               	movwf	___flmul@prod^0,c
  4123   0013E8  0E00               	movlw	0
  4124   0013EA  6E24               	movwf	(___flmul@prod+1)^0,c
  4125   0013EC  0E00               	movlw	0
  4126   0013EE  6E25               	movwf	(___flmul@prod+2)^0,c
  4127   0013F0  0E00               	movlw	0
  4128   0013F2  6E26               	movwf	(___flmul@prod+3)^0,c
  4129   0013F4  0E00               	movlw	0
  4130   0013F6  6E1C               	movwf	___flmul@sign^0,c
  4131   0013F8  EF13  F00A         	goto	l3734
  4132   0013FC                     l1455:
  4133   0013FC  C027  F022         	movff	___flmul@temp,___flmul@bexp
  4134   001400  0EFF               	movlw	255
  4135   001402  1623               	andwf	___flmul@prod^0,f,c
  4136   001404  0EFF               	movlw	255
  4137   001406  1624               	andwf	(___flmul@prod+1)^0,f,c
  4138   001408  0E7F               	movlw	127
  4139   00140A  1625               	andwf	(___flmul@prod+2)^0,f,c
  4140   00140C  0E00               	movlw	0
  4141   00140E  1626               	andwf	(___flmul@prod+3)^0,f,c
  4142   001410  A022               	btfss	___flmul@bexp^0,0,c
  4143   001412  EF0D  F00A         	goto	u2971
  4144   001416  EF0F  F00A         	goto	u2970
  4145   00141A                     u2971:
  4146   00141A  EF10  F00A         	goto	l3732
  4147   00141E                     u2970:
  4148   00141E  8E25               	bsf	(___flmul@prod+2)^0,7,c
  4149   001420                     l3732:
  4150   001420  90D8               	bcf	status,0,c
  4151   001422  3022               	rrcf	___flmul@bexp^0,w,c
  4152   001424  6E26               	movwf	(___flmul@prod+3)^0,c
  4153   001426                     l3734:
  4154   001426  501C               	movf	___flmul@sign^0,w,c
  4155   001428  1226               	iorwf	(___flmul@prod+3)^0,f,c
  4156   00142A  C023  F010         	movff	___flmul@prod,?___flmul
  4157   00142E  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  4158   001432  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  4159   001436  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  4160   00143A                     l1442:
  4161   00143A  0012               	return		;funcret
  4162   00143C                     __end_of___flmul:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _ADC_Init *****************
  4166 ;; Defined at:
  4167 ;;		line 22 in file "MCAL_layer/ADC/hal_adc.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  adc             1    4[COMRAM] PTR const struct .
  4170 ;;		 -> adc_1(7), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  ret             1    6[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      unsigned char 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:        3 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 3
  4189 ;; This function calls:
  4190 ;;		_adc_Select_result_format
  4191 ;;		_adc_input_channel_port_config
  4192 ;;		_adc_select_volt_ref
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text19
  4199   00246A                     __ptext19:
  4200                           	callstack 0
  4201   00246A                     _ADC_Init:
  4202                           	callstack 27
  4203   00246A                     
  4204                           ;MCAL_layer/ADC/hal_adc.c: 23:     Std_ReturnType ret =(Std_ReturnType)0x01;
  4205   00246A  0E01               	movlw	1
  4206   00246C  6E07               	movwf	ADC_Init@ret^0,c
  4207                           
  4208                           ;MCAL_layer/ADC/hal_adc.c: 24:     if(((void*)0) == adc){
  4209   00246E  5005               	movf	ADC_Init@adc^0,w,c
  4210   002470  A4D8               	btfss	status,2,c
  4211   002472  EF3D  F012         	goto	u2581
  4212   002476  EF3F  F012         	goto	u2580
  4213   00247A                     u2581:
  4214   00247A  EF43  F012         	goto	l77
  4215   00247E                     u2580:
  4216   00247E                     
  4217                           ;MCAL_layer/ADC/hal_adc.c: 25:         ret = (Std_ReturnType)0x00;
  4218   00247E  0E00               	movlw	0
  4219   002480  6E07               	movwf	ADC_Init@ret^0,c
  4220                           
  4221                           ;MCAL_layer/ADC/hal_adc.c: 26:     }
  4222   002482  EF89  F012         	goto	l3442
  4223   002486                     l77:
  4224                           
  4225                           ;MCAL_layer/ADC/hal_adc.c: 28:         (ADCON0bits.ADON = 0);
  4226   002486  90C2               	bcf	194,0,c	;volatile
  4227   002488                     
  4228                           ;MCAL_layer/ADC/hal_adc.c: 30:         ADCON2bits.ACQT = adc->acquisition_time;
  4229   002488  5005               	movf	ADC_Init@adc^0,w,c
  4230   00248A  6ED9               	movwf	fsr2l,c
  4231   00248C  6ADA               	clrf	fsr2h,c
  4232   00248E  0E03               	movlw	3
  4233   002490  26D9               	addwf	fsr2l,f,c
  4234   002492  50DF               	movf	indf2,w,c
  4235   002494  6E06               	movwf	??_ADC_Init^0,c
  4236   002496  4606               	rlncf	??_ADC_Init^0,f,c
  4237   002498  4606               	rlncf	??_ADC_Init^0,f,c
  4238   00249A  4606               	rlncf	??_ADC_Init^0,f,c
  4239   00249C  50C0               	movf	192,w,c	;volatile
  4240   00249E  1806               	xorwf	??_ADC_Init^0,w,c
  4241   0024A0  0BC7               	andlw	-57
  4242   0024A2  1806               	xorwf	??_ADC_Init^0,w,c
  4243   0024A4  6EC0               	movwf	192,c	;volatile
  4244                           
  4245                           ;MCAL_layer/ADC/hal_adc.c: 32:         ADCON2bits.ADCS = adc->convertion_clock;
  4246   0024A6  5005               	movf	ADC_Init@adc^0,w,c
  4247   0024A8  6ED9               	movwf	fsr2l,c
  4248   0024AA  6ADA               	clrf	fsr2h,c
  4249   0024AC  0E04               	movlw	4
  4250   0024AE  26D9               	addwf	fsr2l,f,c
  4251   0024B0  50DF               	movf	indf2,w,c
  4252   0024B2  6E06               	movwf	??_ADC_Init^0,c
  4253   0024B4  50C0               	movf	192,w,c	;volatile
  4254   0024B6  1806               	xorwf	??_ADC_Init^0,w,c
  4255   0024B8  0BF8               	andlw	-8
  4256   0024BA  1806               	xorwf	??_ADC_Init^0,w,c
  4257   0024BC  6EC0               	movwf	192,c	;volatile
  4258                           
  4259                           ;MCAL_layer/ADC/hal_adc.c: 34:         ADCON0bits.CHS = adc->channel_select;
  4260   0024BE  5005               	movf	ADC_Init@adc^0,w,c
  4261   0024C0  6ED9               	movwf	fsr2l,c
  4262   0024C2  6ADA               	clrf	fsr2h,c
  4263   0024C4  0E05               	movlw	5
  4264   0024C6  26D9               	addwf	fsr2l,f,c
  4265   0024C8  50DF               	movf	indf2,w,c
  4266   0024CA  6E06               	movwf	??_ADC_Init^0,c
  4267   0024CC  4606               	rlncf	??_ADC_Init^0,f,c
  4268   0024CE  4606               	rlncf	??_ADC_Init^0,f,c
  4269   0024D0  50C2               	movf	194,w,c	;volatile
  4270   0024D2  1806               	xorwf	??_ADC_Init^0,w,c
  4271   0024D4  0BC3               	andlw	-61
  4272   0024D6  1806               	xorwf	??_ADC_Init^0,w,c
  4273   0024D8  6EC2               	movwf	194,c	;volatile
  4274   0024DA                     
  4275                           ;MCAL_layer/ADC/hal_adc.c: 35:         adc_input_channel_port_config(adc->channel_select
      +                          );
  4276   0024DA  5005               	movf	ADC_Init@adc^0,w,c
  4277   0024DC  6ED9               	movwf	fsr2l,c
  4278   0024DE  6ADA               	clrf	fsr2h,c
  4279   0024E0  0E05               	movlw	5
  4280   0024E2  26D9               	addwf	fsr2l,f,c
  4281   0024E4  50DF               	movf	indf2,w,c
  4282   0024E6  EC4B  F010         	call	_adc_input_channel_port_config
  4283   0024EA                     
  4284                           ;MCAL_layer/ADC/hal_adc.c: 39:         (PIE1bits.ADIE = 1);
  4285   0024EA  8C9D               	bsf	157,6,c	;volatile
  4286   0024EC                     
  4287                           ;MCAL_layer/ADC/hal_adc.c: 40:         (PIR1bits.ADIF = 0);
  4288   0024EC  9C9E               	bcf	158,6,c	;volatile
  4289   0024EE                     
  4290                           ;MCAL_layer/ADC/hal_adc.c: 50:         (INTCONbits.GIE = 1);
  4291   0024EE  8EF2               	bsf	242,7,c	;volatile
  4292   0024F0                     
  4293                           ;MCAL_layer/ADC/hal_adc.c: 51:         (INTCONbits.PEIE = 1);
  4294   0024F0  8CF2               	bsf	242,6,c	;volatile
  4295   0024F2                     
  4296                           ;MCAL_layer/ADC/hal_adc.c: 53:         ADC_InterruptHandler = adc->ADC_InterruptHandler;
  4297   0024F2  5005               	movf	ADC_Init@adc^0,w,c
  4298   0024F4  6ED9               	movwf	fsr2l,c
  4299   0024F6  6ADA               	clrf	fsr2h,c
  4300   0024F8  CFDE F051          	movff	postinc2,_ADC_InterruptHandler
  4301   0024FC  CFDD F052          	movff	postdec2,_ADC_InterruptHandler+1
  4302   002500                     
  4303                           ;MCAL_layer/ADC/hal_adc.c: 57:         adc_Select_result_format(adc);
  4304   002500  C005  F002         	movff	ADC_Init@adc,adc_Select_result_format@adc
  4305   002504  EC4B  F014         	call	_adc_Select_result_format	;wreg free
  4306   002508                     
  4307                           ;MCAL_layer/ADC/hal_adc.c: 59:         adc_select_volt_ref(adc);
  4308   002508  C005  F002         	movff	ADC_Init@adc,adc_select_volt_ref@adc
  4309   00250C  EC28  F014         	call	_adc_select_volt_ref	;wreg free
  4310   002510                     
  4311                           ;MCAL_layer/ADC/hal_adc.c: 61:         (ADCON0bits.ADON = 1);
  4312   002510  80C2               	bsf	194,0,c	;volatile
  4313   002512                     l3442:
  4314                           
  4315                           ;MCAL_layer/ADC/hal_adc.c: 63:     return ret;
  4316   002512  5007               	movf	ADC_Init@ret^0,w,c
  4317   002514  0012               	return		;funcret
  4318   002516                     __end_of_ADC_Init:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _adc_select_volt_ref *****************
  4322 ;; Defined at:
  4323 ;;		line 222 in file "MCAL_layer/ADC/hal_adc.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  adc             1    1[COMRAM] PTR const struct .
  4326 ;;		 -> adc_1(7), 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;Total ram usage:        1 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 2
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_ADC_Init
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text20
  4353   002850                     __ptext20:
  4354                           	callstack 0
  4355   002850                     _adc_select_volt_ref:
  4356                           	callstack 27
  4357   002850                     
  4358                           ;MCAL_layer/ADC/hal_adc.c: 223:     if(0x01U == adc->volt_ref){
  4359   002850  5002               	movf	adc_select_volt_ref@adc^0,w,c
  4360   002852  6ED9               	movwf	fsr2l,c
  4361   002854  6ADA               	clrf	fsr2h,c
  4362   002856  0E06               	movlw	6
  4363   002858  26D9               	addwf	fsr2l,f,c
  4364   00285A  A0DF               	btfss	indf2,0,c
  4365   00285C  EF32  F014         	goto	u2351
  4366   002860  EF34  F014         	goto	u2350
  4367   002864                     u2351:
  4368   002864  EF38  F014         	goto	l3254
  4369   002868                     u2350:
  4370   002868  8AC1               	bsf	193,5,c	;volatile
  4371   00286A  88C1               	bsf	193,4,c	;volatile
  4372   00286C  EF4A  F014         	goto	l165
  4373   002870                     l3254:
  4374   002870  5002               	movf	adc_select_volt_ref@adc^0,w,c
  4375   002872  6ED9               	movwf	fsr2l,c
  4376   002874  6ADA               	clrf	fsr2h,c
  4377   002876  0E06               	movlw	6
  4378   002878  26D9               	addwf	fsr2l,f,c
  4379   00287A  B0DF               	btfsc	indf2,0,c
  4380   00287C  EF42  F014         	goto	u2361
  4381   002880  EF44  F014         	goto	u2360
  4382   002884                     u2361:
  4383   002884  EF48  F014         	goto	l163
  4384   002888                     u2360:
  4385   002888  9AC1               	bcf	193,5,c	;volatile
  4386   00288A  98C1               	bcf	193,4,c	;volatile
  4387   00288C  EF4A  F014         	goto	l165
  4388   002890                     l163:
  4389   002890  9AC1               	bcf	193,5,c	;volatile
  4390   002892  98C1               	bcf	193,4,c	;volatile
  4391   002894                     l165:
  4392   002894  0012               	return		;funcret
  4393   002896                     __end_of_adc_select_volt_ref:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _adc_Select_result_format *****************
  4397 ;; Defined at:
  4398 ;;		line 210 in file "MCAL_layer/ADC/hal_adc.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  adc             1    1[COMRAM] PTR const struct .
  4401 ;;		 -> adc_1(7), 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 2
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_ADC_Init
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text21
  4428   002896                     __ptext21:
  4429                           	callstack 0
  4430   002896                     _adc_Select_result_format:
  4431                           	callstack 27
  4432   002896                     
  4433                           ;MCAL_layer/ADC/hal_adc.c: 211:     if( 0x01U == adc->result_format){
  4434   002896  5002               	movf	adc_Select_result_format@adc^0,w,c
  4435   002898  6ED9               	movwf	fsr2l,c
  4436   00289A  6ADA               	clrf	fsr2h,c
  4437   00289C  0E06               	movlw	6
  4438   00289E  26D9               	addwf	fsr2l,f,c
  4439   0028A0  A2DF               	btfss	indf2,1,c
  4440   0028A2  EF55  F014         	goto	u2331
  4441   0028A6  EF57  F014         	goto	u2330
  4442   0028AA                     u2331:
  4443   0028AA  EF5A  F014         	goto	l3248
  4444   0028AE                     u2330:
  4445   0028AE                     
  4446                           ;MCAL_layer/ADC/hal_adc.c: 212:         (ADCON2bits.ADFM = 1);
  4447   0028AE  8EC0               	bsf	192,7,c	;volatile
  4448                           
  4449                           ;MCAL_layer/ADC/hal_adc.c: 213:     }
  4450   0028B0  EF6A  F014         	goto	l152
  4451   0028B4                     l3248:
  4452   0028B4  5002               	movf	adc_Select_result_format@adc^0,w,c
  4453   0028B6  6ED9               	movwf	fsr2l,c
  4454   0028B8  6ADA               	clrf	fsr2h,c
  4455   0028BA  0E06               	movlw	6
  4456   0028BC  26D9               	addwf	fsr2l,f,c
  4457   0028BE  B2DF               	btfsc	indf2,1,c
  4458   0028C0  EF64  F014         	goto	u2341
  4459   0028C4  EF66  F014         	goto	u2340
  4460   0028C8                     u2341:
  4461   0028C8  EF69  F014         	goto	l150
  4462   0028CC                     u2340:
  4463   0028CC                     
  4464                           ;MCAL_layer/ADC/hal_adc.c: 215:         (ADCON2bits.ADFM = 0);
  4465   0028CC  9EC0               	bcf	192,7,c	;volatile
  4466                           
  4467                           ;MCAL_layer/ADC/hal_adc.c: 216:     }
  4468   0028CE  EF6A  F014         	goto	l152
  4469   0028D2                     l150:
  4470                           
  4471                           ;MCAL_layer/ADC/hal_adc.c: 218:             (ADCON2bits.ADFM = 1);
  4472   0028D2  8EC0               	bsf	192,7,c	;volatile
  4473   0028D4                     l152:
  4474   0028D4  0012               	return		;funcret
  4475   0028D6                     __end_of_adc_Select_result_format:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _ADC_GetConversion_Blocking *****************
  4479 ;; Defined at:
  4480 ;;		line 161 in file "MCAL_layer/ADC/hal_adc.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  adc             1    8[COMRAM] PTR const struct .
  4483 ;;		 -> adc_1(7), 
  4484 ;;  channel         1    9[COMRAM] enum E3049
  4485 ;;  conversion_s    1   10[COMRAM] PTR unsigned char 
  4486 ;;		 -> adc_temp(2), 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  ret             1   11[COMRAM] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      unsigned char 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        4 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 4
  4505 ;; This function calls:
  4506 ;;		_ADC_GetConversionResult
  4507 ;;		_ADC_SelectChannel
  4508 ;;		_ADC_StartConversion
  4509 ;; This function is called by:
  4510 ;;		_main
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text22
  4515   0027A6                     __ptext22:
  4516                           	callstack 0
  4517   0027A6                     _ADC_GetConversion_Blocking:
  4518                           	callstack 26
  4519   0027A6                     
  4520                           ;MCAL_layer/ADC/hal_adc.c: 164:     if((((void*)0) == adc) || (((void*)0) == conversion_
      +                          status)){
  4521   0027A6  5009               	movf	ADC_GetConversion_Blocking@adc^0,w,c
  4522   0027A8  B4D8               	btfsc	status,2,c
  4523   0027AA  EFD9  F013         	goto	u2641
  4524   0027AE  EFDB  F013         	goto	u2640
  4525   0027B2                     u2641:
  4526   0027B2  EFE3  F013         	goto	l3496
  4527   0027B6                     u2640:
  4528   0027B6  500B               	movf	ADC_GetConversion_Blocking@conversion_status^0,w,c
  4529   0027B8  A4D8               	btfss	status,2,c
  4530   0027BA  EFE1  F013         	goto	u2651
  4531   0027BE  EFE3  F013         	goto	u2650
  4532   0027C2                     u2651:
  4533   0027C2  EFE7  F013         	goto	l3498
  4534   0027C6                     u2650:
  4535   0027C6                     l3496:
  4536                           
  4537                           ;MCAL_layer/ADC/hal_adc.c: 165:         ret = (Std_ReturnType)0x00;
  4538   0027C6  0E00               	movlw	0
  4539   0027C8  6E0C               	movwf	ADC_GetConversion_Blocking@ret^0,c
  4540                           
  4541                           ;MCAL_layer/ADC/hal_adc.c: 166:     }
  4542   0027CA  EF01  F014         	goto	l3502
  4543   0027CE                     l3498:
  4544                           
  4545                           ;MCAL_layer/ADC/hal_adc.c: 168:        ret = ADC_SelectChannel(adc , channel);
  4546   0027CE  C009  F005         	movff	ADC_GetConversion_Blocking@adc,ADC_SelectChannel@adc
  4547   0027D2  C00A  F006         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  4548   0027D6  ECA8  F014         	call	_ADC_SelectChannel	;wreg free
  4549   0027DA  6E0C               	movwf	ADC_GetConversion_Blocking@ret^0,c
  4550                           
  4551                           ;MCAL_layer/ADC/hal_adc.c: 169:        ret = ADC_StartConversion(adc);
  4552   0027DC  C009  F002         	movff	ADC_GetConversion_Blocking@adc,ADC_StartConversion@adc
  4553   0027E0  ECC4  F014         	call	_ADC_StartConversion	;wreg free
  4554   0027E4  6E0C               	movwf	ADC_GetConversion_Blocking@ret^0,c
  4555   0027E6                     l119:
  4556   0027E6  B2C2               	btfsc	194,1,c	;volatile
  4557   0027E8  EFF8  F013         	goto	u2661
  4558   0027EC  EFFA  F013         	goto	u2660
  4559   0027F0                     u2661:
  4560   0027F0  EFF3  F013         	goto	l119
  4561   0027F4                     u2660:
  4562   0027F4                     
  4563                           ;MCAL_layer/ADC/hal_adc.c: 172:         ret = ADC_GetConversionResult(adc , conversion_s
      +                          tatus);
  4564   0027F4  C009  F002         	movff	ADC_GetConversion_Blocking@adc,ADC_GetConversionResult@adc
  4565   0027F8  C00B  F003         	movff	ADC_GetConversion_Blocking@conversion_status,ADC_GetConversionResult@conversion_r
      +                          esult
  4566   0027FC  EC81  F011         	call	_ADC_GetConversionResult	;wreg free
  4567   002800  6E0C               	movwf	ADC_GetConversion_Blocking@ret^0,c
  4568   002802                     l3502:
  4569                           
  4570                           ;MCAL_layer/ADC/hal_adc.c: 175:     return ret;
  4571   002802  500C               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  4572   002804  0012               	return		;funcret
  4573   002806                     __end_of_ADC_GetConversion_Blocking:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _ADC_StartConversion *****************
  4577 ;; Defined at:
  4578 ;;		line 104 in file "MCAL_layer/ADC/hal_adc.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  adc             1    1[COMRAM] PTR const struct .
  4581 ;;		 -> adc_1(7), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  ret             1    2[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4593 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;Total ram usage:        2 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 2
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_ADC_GetConversion_Blocking
  4604 ;;		_ADC_StartConversion_Interrupt
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text23
  4609   002988                     __ptext23:
  4610                           	callstack 0
  4611   002988                     _ADC_StartConversion:
  4612                           	callstack 27
  4613   002988                     
  4614                           ;MCAL_layer/ADC/hal_adc.c: 105:     Std_ReturnType ret =(Std_ReturnType)0x01;
  4615   002988  0E01               	movlw	1
  4616   00298A  6E03               	movwf	ADC_StartConversion@ret^0,c
  4617                           
  4618                           ;MCAL_layer/ADC/hal_adc.c: 106:     if(((void*)0) == adc){
  4619   00298C  5002               	movf	ADC_StartConversion@adc^0,w,c
  4620   00298E  A4D8               	btfss	status,2,c
  4621   002990  EFCC  F014         	goto	u2381
  4622   002994  EFCE  F014         	goto	u2380
  4623   002998                     u2381:
  4624   002998  EFD2  F014         	goto	l92
  4625   00299C                     u2380:
  4626   00299C                     
  4627                           ;MCAL_layer/ADC/hal_adc.c: 107:         ret = (Std_ReturnType)0x00;
  4628   00299C  0E00               	movlw	0
  4629   00299E  6E03               	movwf	ADC_StartConversion@ret^0,c
  4630                           
  4631                           ;MCAL_layer/ADC/hal_adc.c: 108:     }
  4632   0029A0  EFD3  F014         	goto	l3272
  4633   0029A4                     l92:
  4634                           
  4635                           ;MCAL_layer/ADC/hal_adc.c: 110:         (ADCON0bits.GODONE = 1);
  4636   0029A4  82C2               	bsf	194,1,c	;volatile
  4637   0029A6                     l3272:
  4638                           
  4639                           ;MCAL_layer/ADC/hal_adc.c: 112:     return ret;
  4640   0029A6  5003               	movf	ADC_StartConversion@ret^0,w,c
  4641   0029A8  0012               	return		;funcret
  4642   0029AA                     __end_of_ADC_StartConversion:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function _ADC_SelectChannel *****************
  4646 ;; Defined at:
  4647 ;;		line 88 in file "MCAL_layer/ADC/hal_adc.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  adc             1    4[COMRAM] PTR const struct .
  4650 ;;		 -> adc_1(7), 
  4651 ;;  channel         1    5[COMRAM] enum E3049
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  ret             1    7[COMRAM] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      unsigned char 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;Total ram usage:        4 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 3
  4670 ;; This function calls:
  4671 ;;		_adc_input_channel_port_config
  4672 ;; This function is called by:
  4673 ;;		_ADC_GetConversion_Blocking
  4674 ;;		_ADC_StartConversion_Interrupt
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text24
  4679   002950                     __ptext24:
  4680                           	callstack 0
  4681   002950                     _ADC_SelectChannel:
  4682                           	callstack 26
  4683   002950                     
  4684                           ;MCAL_layer/ADC/hal_adc.c: 89:     Std_ReturnType ret =(Std_ReturnType)0x01;
  4685   002950  0E01               	movlw	1
  4686   002952  6E08               	movwf	ADC_SelectChannel@ret^0,c
  4687                           
  4688                           ;MCAL_layer/ADC/hal_adc.c: 90:     if(((void*)0) == adc){
  4689   002954  5005               	movf	ADC_SelectChannel@adc^0,w,c
  4690   002956  A4D8               	btfss	status,2,c
  4691   002958  EFB0  F014         	goto	u2371
  4692   00295C  EFB2  F014         	goto	u2370
  4693   002960                     u2371:
  4694   002960  EFB6  F014         	goto	l3260
  4695   002964                     u2370:
  4696   002964                     
  4697                           ;MCAL_layer/ADC/hal_adc.c: 91:         ret = (Std_ReturnType)0x00;
  4698   002964  0E00               	movlw	0
  4699   002966  6E08               	movwf	ADC_SelectChannel@ret^0,c
  4700                           
  4701                           ;MCAL_layer/ADC/hal_adc.c: 92:     }
  4702   002968  EFC2  F014         	goto	l3264
  4703   00296C                     l3260:
  4704                           
  4705                           ;MCAL_layer/ADC/hal_adc.c: 94:         ADCON0bits.CHS = channel;
  4706   00296C  C006  F007         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4707   002970  4607               	rlncf	??_ADC_SelectChannel^0,f,c
  4708   002972  4607               	rlncf	??_ADC_SelectChannel^0,f,c
  4709   002974  50C2               	movf	194,w,c	;volatile
  4710   002976  1807               	xorwf	??_ADC_SelectChannel^0,w,c
  4711   002978  0BC3               	andlw	-61
  4712   00297A  1807               	xorwf	??_ADC_SelectChannel^0,w,c
  4713   00297C  6EC2               	movwf	194,c	;volatile
  4714   00297E                     
  4715                           ;MCAL_layer/ADC/hal_adc.c: 95:         adc_input_channel_port_config(channel);
  4716   00297E  5006               	movf	ADC_SelectChannel@channel^0,w,c
  4717   002980  EC4B  F010         	call	_adc_input_channel_port_config
  4718   002984                     l3264:
  4719                           
  4720                           ;MCAL_layer/ADC/hal_adc.c: 97:     return ret;
  4721   002984  5008               	movf	ADC_SelectChannel@ret^0,w,c
  4722   002986  0012               	return		;funcret
  4723   002988                     __end_of_ADC_SelectChannel:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _adc_input_channel_port_config *****************
  4727 ;; Defined at:
  4728 ;;		line 192 in file "MCAL_layer/ADC/hal_adc.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  channel         1    wreg     enum E3049
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  channel         1    3[COMRAM] enum E3049
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:        3 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 2
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_ADC_Init
  4753 ;;		_ADC_SelectChannel
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text25
  4758   002096                     __ptext25:
  4759                           	callstack 0
  4760   002096                     _adc_input_channel_port_config:
  4761                           	callstack 27
  4762                           
  4763                           ;incstack = 0
  4764                           ;adc_input_channel_port_config@channel stored from wreg
  4765   002096  6E04               	movwf	adc_input_channel_port_config@channel^0,c
  4766   002098                     
  4767                           ;MCAL_layer/ADC/hal_adc.c: 193:     switch (channel){
  4768   002098  EF75  F010         	goto	l3190
  4769   00209C                     l3162:
  4770   00209C  8092               	bsf	146,0,c	;volatile
  4771   00209E  EFB6  F010         	goto	l145
  4772   0020A2                     l3164:
  4773   0020A2  8292               	bsf	146,1,c	;volatile
  4774   0020A4  EFB6  F010         	goto	l145
  4775   0020A8                     l3166:
  4776   0020A8  8492               	bsf	146,2,c	;volatile
  4777   0020AA  EFB6  F010         	goto	l145
  4778   0020AE                     l3168:
  4779   0020AE  8692               	bsf	146,3,c	;volatile
  4780   0020B0  EFB6  F010         	goto	l145
  4781   0020B4                     l3170:
  4782   0020B4  8A92               	bsf	146,5,c	;volatile
  4783   0020B6  EFB6  F010         	goto	l145
  4784   0020BA                     l3172:
  4785   0020BA  8096               	bsf	150,0,c	;volatile
  4786   0020BC  EFB6  F010         	goto	l145
  4787   0020C0                     l3174:
  4788   0020C0  8296               	bsf	150,1,c	;volatile
  4789   0020C2  EFB6  F010         	goto	l145
  4790   0020C6                     l3176:
  4791   0020C6  8496               	bsf	150,2,c	;volatile
  4792   0020C8  EFB6  F010         	goto	l145
  4793   0020CC                     l3178:
  4794   0020CC  8493               	bsf	147,2,c	;volatile
  4795   0020CE  EFB6  F010         	goto	l145
  4796   0020D2                     l3180:
  4797   0020D2  8693               	bsf	147,3,c	;volatile
  4798   0020D4  EFB6  F010         	goto	l145
  4799   0020D8                     l3182:
  4800   0020D8  8293               	bsf	147,1,c	;volatile
  4801   0020DA  EFB6  F010         	goto	l145
  4802   0020DE                     l3184:
  4803   0020DE  8893               	bsf	147,4,c	;volatile
  4804   0020E0  EFB6  F010         	goto	l145
  4805   0020E4                     l3186:
  4806   0020E4  8093               	bsf	147,0,c	;volatile
  4807   0020E6  EFB6  F010         	goto	l145
  4808   0020EA                     l3190:
  4809   0020EA  5004               	movf	adc_input_channel_port_config@channel^0,w,c
  4810   0020EC  6E02               	movwf	??_adc_input_channel_port_config^0,c
  4811   0020EE  6A03               	clrf	(??_adc_input_channel_port_config+1)^0,c
  4812                           
  4813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4814                           ; Switch size 1, requested type "simple"
  4815                           ; Number of cases is 1, Range of values is 0 to 0
  4816                           ; switch strategies available:
  4817                           ; Name         Instructions Cycles
  4818                           ; simple_byte            4     3 (average)
  4819                           ;	Chosen strategy is simple_byte
  4820   0020F0  5003               	movf	(??_adc_input_channel_port_config+1)^0,w,c
  4821   0020F2  0A00               	xorlw	0	; case 0
  4822   0020F4  B4D8               	btfsc	status,2,c
  4823   0020F6  EF7F  F010         	goto	l4462
  4824   0020FA  EFB6  F010         	goto	l145
  4825   0020FE                     l4462:
  4826                           
  4827                           ; Switch size 1, requested type "simple"
  4828                           ; Number of cases is 13, Range of values is 0 to 12
  4829                           ; switch strategies available:
  4830                           ; Name         Instructions Cycles
  4831                           ; simple_byte           40    21 (average)
  4832                           ;	Chosen strategy is simple_byte
  4833   0020FE  5002               	movf	??_adc_input_channel_port_config^0,w,c
  4834   002100  0A00               	xorlw	0	; case 0
  4835   002102  B4D8               	btfsc	status,2,c
  4836   002104  EF4E  F010         	goto	l3162
  4837   002108  0A01               	xorlw	1	; case 1
  4838   00210A  B4D8               	btfsc	status,2,c
  4839   00210C  EF51  F010         	goto	l3164
  4840   002110  0A03               	xorlw	3	; case 2
  4841   002112  B4D8               	btfsc	status,2,c
  4842   002114  EF54  F010         	goto	l3166
  4843   002118  0A01               	xorlw	1	; case 3
  4844   00211A  B4D8               	btfsc	status,2,c
  4845   00211C  EF57  F010         	goto	l3168
  4846   002120  0A07               	xorlw	7	; case 4
  4847   002122  B4D8               	btfsc	status,2,c
  4848   002124  EF5A  F010         	goto	l3170
  4849   002128  0A01               	xorlw	1	; case 5
  4850   00212A  B4D8               	btfsc	status,2,c
  4851   00212C  EF5D  F010         	goto	l3172
  4852   002130  0A03               	xorlw	3	; case 6
  4853   002132  B4D8               	btfsc	status,2,c
  4854   002134  EF60  F010         	goto	l3174
  4855   002138  0A01               	xorlw	1	; case 7
  4856   00213A  B4D8               	btfsc	status,2,c
  4857   00213C  EF63  F010         	goto	l3176
  4858   002140  0A0F               	xorlw	15	; case 8
  4859   002142  B4D8               	btfsc	status,2,c
  4860   002144  EF66  F010         	goto	l3178
  4861   002148  0A01               	xorlw	1	; case 9
  4862   00214A  B4D8               	btfsc	status,2,c
  4863   00214C  EF69  F010         	goto	l3180
  4864   002150  0A03               	xorlw	3	; case 10
  4865   002152  B4D8               	btfsc	status,2,c
  4866   002154  EF6C  F010         	goto	l3182
  4867   002158  0A01               	xorlw	1	; case 11
  4868   00215A  B4D8               	btfsc	status,2,c
  4869   00215C  EF6F  F010         	goto	l3184
  4870   002160  0A07               	xorlw	7	; case 12
  4871   002162  B4D8               	btfsc	status,2,c
  4872   002164  EF72  F010         	goto	l3186
  4873   002168  EFB6  F010         	goto	l145
  4874   00216C                     l145:
  4875   00216C  0012               	return		;funcret
  4876   00216E                     __end_of_adc_input_channel_port_config:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function _ADC_GetConversionResult *****************
  4880 ;; Defined at:
  4881 ;;		line 136 in file "MCAL_layer/ADC/hal_adc.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  adc             1    1[COMRAM] PTR const struct .
  4884 ;;		 -> adc_1(7), 
  4885 ;;  conversion_r    1    2[COMRAM] PTR unsigned short 
  4886 ;;		 -> adc_temp(2), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  ret             1    6[COMRAM] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      unsigned char 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;Total ram usage:        6 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 2
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_ADC_GetConversion_Blocking
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text26
  4913   002302                     __ptext26:
  4914                           	callstack 0
  4915   002302                     _ADC_GetConversionResult:
  4916                           	callstack 27
  4917   002302                     
  4918                           ;MCAL_layer/ADC/hal_adc.c: 137:     Std_ReturnType ret =(Std_ReturnType)0x01;
  4919   002302  0E01               	movlw	1
  4920   002304  6E07               	movwf	ADC_GetConversionResult@ret^0,c
  4921                           
  4922                           ;MCAL_layer/ADC/hal_adc.c: 138:     if((((void*)0) == adc) || (((void*)0) == conversion_
      +                          result)){
  4923   002306  5002               	movf	ADC_GetConversionResult@adc^0,w,c
  4924   002308  B4D8               	btfsc	status,2,c
  4925   00230A  EF89  F011         	goto	u2391
  4926   00230E  EF8B  F011         	goto	u2390
  4927   002312                     u2391:
  4928   002312  EF93  F011         	goto	l3280
  4929   002316                     u2390:
  4930   002316  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  4931   002318  A4D8               	btfss	status,2,c
  4932   00231A  EF91  F011         	goto	u2401
  4933   00231E  EF93  F011         	goto	u2400
  4934   002322                     u2401:
  4935   002322  EF97  F011         	goto	l3282
  4936   002326                     u2400:
  4937   002326                     l3280:
  4938                           
  4939                           ;MCAL_layer/ADC/hal_adc.c: 139:         ret = (Std_ReturnType)0x00;
  4940   002326  0E00               	movlw	0
  4941   002328  6E07               	movwf	ADC_GetConversionResult@ret^0,c
  4942                           
  4943                           ;MCAL_layer/ADC/hal_adc.c: 140:     }
  4944   00232A  EFDB  F011         	goto	l3292
  4945   00232E                     l3282:
  4946                           
  4947                           ;MCAL_layer/ADC/hal_adc.c: 142:          if( 0x01U == adc->result_format){
  4948   00232E  5002               	movf	ADC_GetConversionResult@adc^0,w,c
  4949   002330  6ED9               	movwf	fsr2l,c
  4950   002332  6ADA               	clrf	fsr2h,c
  4951   002334  0E06               	movlw	6
  4952   002336  26D9               	addwf	fsr2l,f,c
  4953   002338  A2DF               	btfss	indf2,1,c
  4954   00233A  EFA1  F011         	goto	u2411
  4955   00233E  EFA3  F011         	goto	u2410
  4956   002342                     u2411:
  4957   002342  EFB6  F011         	goto	l3286
  4958   002346                     u2410:
  4959   002346                     l3284:
  4960                           
  4961                           ;MCAL_layer/ADC/hal_adc.c: 143:          *conversion_result= (uint16)((ADRESH<<8) + ADRE
      +                          SL);
  4962   002346  50C3               	movf	195,w,c	;volatile
  4963   002348  CFC4 F004          	movff	4036,??_ADC_GetConversionResult	;volatile
  4964   00234C  6A05               	clrf	(??_ADC_GetConversionResult+1)^0,c
  4965   00234E  C004  F005         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  4966   002352  6A04               	clrf	??_ADC_GetConversionResult^0,c
  4967   002354  2604               	addwf	??_ADC_GetConversionResult^0,f,c
  4968   002356  0E00               	movlw	0
  4969   002358  2205               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  4970   00235A  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  4971   00235C  6ED9               	movwf	fsr2l,c
  4972   00235E  6ADA               	clrf	fsr2h,c
  4973   002360  C004  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  4974   002364  C005  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  4975                           
  4976                           ;MCAL_layer/ADC/hal_adc.c: 144:     }
  4977   002368  EFDB  F011         	goto	l3292
  4978   00236C                     l3286:
  4979   00236C  5002               	movf	ADC_GetConversionResult@adc^0,w,c
  4980   00236E  6ED9               	movwf	fsr2l,c
  4981   002370  6ADA               	clrf	fsr2h,c
  4982   002372  0E06               	movlw	6
  4983   002374  26D9               	addwf	fsr2l,f,c
  4984   002376  B2DF               	btfsc	indf2,1,c
  4985   002378  EFC0  F011         	goto	u2421
  4986   00237C  EFC2  F011         	goto	u2420
  4987   002380                     u2421:
  4988   002380  EFA3  F011         	goto	l3284
  4989   002384                     u2420:
  4990   002384                     
  4991                           ;MCAL_layer/ADC/hal_adc.c: 146:       *conversion_result = (uint16)(((ADRESH<<8) + ADRES
      +                          L) >> 6);
  4992   002384  50C3               	movf	195,w,c	;volatile
  4993   002386  CFC4 F004          	movff	4036,??_ADC_GetConversionResult	;volatile
  4994   00238A  6A05               	clrf	(??_ADC_GetConversionResult+1)^0,c
  4995   00238C  C004  F005         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  4996   002390  6A04               	clrf	??_ADC_GetConversionResult^0,c
  4997   002392  2604               	addwf	??_ADC_GetConversionResult^0,f,c
  4998   002394  0E00               	movlw	0
  4999   002396  2205               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  5000   002398  0E06               	movlw	6
  5001   00239A  6E06               	movwf	(??_ADC_GetConversionResult+2)^0,c
  5002   00239C                     u2435:
  5003   00239C  3405               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  5004   00239E  3205               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  5005   0023A0  3204               	rrcf	??_ADC_GetConversionResult^0,f,c
  5006   0023A2  2E06               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  5007   0023A4  EFCE  F011         	goto	u2435
  5008   0023A8  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
  5009   0023AA  6ED9               	movwf	fsr2l,c
  5010   0023AC  6ADA               	clrf	fsr2h,c
  5011   0023AE  C004  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  5012   0023B2  C005  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  5013   0023B6                     l3292:
  5014                           
  5015                           ;MCAL_layer/ADC/hal_adc.c: 152:     return ret;
  5016   0023B6  5007               	movf	ADC_GetConversionResult@ret^0,w,c
  5017   0023B8  0012               	return		;funcret
  5018   0023BA                     __end_of_ADC_GetConversionResult:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _InterruptManager *****************
  5022 ;; Defined at:
  5023 ;;		line 35 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used: 1
  5043 ;; Hardware stack levels required when called: 1
  5044 ;; This function calls:
  5045 ;;		_ADC_ISR
  5046 ;;		_INT0_ISR
  5047 ;;		_INT1_ISR
  5048 ;;		_INT2_ISR
  5049 ;;		_RB4_ISR
  5050 ;;		_RB5_ISR
  5051 ;;		_RB6_ISR
  5052 ;;		_RB7_ISR
  5053 ;; This function is called by:
  5054 ;;		Interrupt level 2
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	intcode
  5059   000008                     __pintcode:
  5060                           	callstack 0
  5061   000008                     _InterruptManager:
  5062                           	callstack 24
  5063                           
  5064                           ;incstack = 0
  5065   000008  827D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5066   00000A  ED1E  F00A         	call	int_func,f	;refresh shadow registers
  5067                           
  5068                           	psect	intcode_body
  5069   00143C                     __pintcode_body:
  5070                           	callstack 24
  5071   00143C                     int_func:
  5072                           	callstack 24
  5073   00143C  0006               	pop		; remove dummy address from shadow register refresh
  5074   00143E                     
  5075                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 37:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  5076   00143E  A8F2               	btfss	242,4,c	;volatile
  5077   001440  EF24  F00A         	goto	i2u182_41
  5078   001444  EF26  F00A         	goto	i2u182_40
  5079   001448                     i2u182_41:
  5080   001448  EF2F  F00A         	goto	i2l798
  5081   00144C                     i2u182_40:
  5082   00144C  A2F2               	btfss	242,1,c	;volatile
  5083   00144E  EF2B  F00A         	goto	i2u183_41
  5084   001452  EF2D  F00A         	goto	i2u183_40
  5085   001456                     i2u183_41:
  5086   001456  EF2F  F00A         	goto	i2l798
  5087   00145A                     i2u183_40:
  5088   00145A                     
  5089                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 38:         INT0_ISR();
  5090   00145A  EC29  F015         	call	_INT0_ISR	;wreg free
  5091   00145E                     i2l798:
  5092                           
  5093                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 41:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  5094   00145E  A6F0               	btfss	240,3,c	;volatile
  5095   001460  EF34  F00A         	goto	i2u184_41
  5096   001464  EF36  F00A         	goto	i2u184_40
  5097   001468                     i2u184_41:
  5098   001468  EF3F  F00A         	goto	i2l800
  5099   00146C                     i2u184_40:
  5100   00146C  A0F0               	btfss	240,0,c	;volatile
  5101   00146E  EF3B  F00A         	goto	i2u185_41
  5102   001472  EF3D  F00A         	goto	i2u185_40
  5103   001476                     i2u185_41:
  5104   001476  EF3F  F00A         	goto	i2l800
  5105   00147A                     i2u185_40:
  5106   00147A                     
  5107                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 42:         INT1_ISR();
  5108   00147A  EC27  F015         	call	_INT1_ISR	;wreg free
  5109   00147E                     i2l800:
  5110                           
  5111                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 45:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  5112   00147E  A8F0               	btfss	240,4,c	;volatile
  5113   001480  EF44  F00A         	goto	i2u186_41
  5114   001484  EF46  F00A         	goto	i2u186_40
  5115   001488                     i2u186_41:
  5116   001488  EF4F  F00A         	goto	i2l802
  5117   00148C                     i2u186_40:
  5118   00148C  A2F0               	btfss	240,1,c	;volatile
  5119   00148E  EF4B  F00A         	goto	i2u187_41
  5120   001492  EF4D  F00A         	goto	i2u187_40
  5121   001496                     i2u187_41:
  5122   001496  EF4F  F00A         	goto	i2l802
  5123   00149A                     i2u187_40:
  5124   00149A                     
  5125                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 46:         INT2_ISR();
  5126   00149A  EC25  F015         	call	_INT2_ISR	;wreg free
  5127   00149E                     i2l802:
  5128                           
  5129                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 49:      if((1 == PIE1bits.ADIE) && (1 =
      +                          = PIR1bits.ADIF)){
  5130   00149E  AC9D               	btfss	157,6,c	;volatile
  5131   0014A0  EF54  F00A         	goto	i2u188_41
  5132   0014A4  EF56  F00A         	goto	i2u188_40
  5133   0014A8                     i2u188_41:
  5134   0014A8  EF5F  F00A         	goto	i2l804
  5135   0014AC                     i2u188_40:
  5136   0014AC  AC9E               	btfss	158,6,c	;volatile
  5137   0014AE  EF5B  F00A         	goto	i2u189_41
  5138   0014B2  EF5D  F00A         	goto	i2u189_40
  5139   0014B6                     i2u189_41:
  5140   0014B6  EF5F  F00A         	goto	i2l804
  5141   0014BA                     i2u189_40:
  5142   0014BA                     
  5143                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 50:         ADC_ISR();
  5144   0014BA  EC2B  F015         	call	_ADC_ISR	;wreg free
  5145   0014BE                     i2l804:
  5146                           
  5147                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 57:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5148   0014BE  A6F2               	btfss	242,3,c	;volatile
  5149   0014C0  EF64  F00A         	goto	i2u190_41
  5150   0014C4  EF66  F00A         	goto	i2u190_40
  5151   0014C8                     i2u190_41:
  5152   0014C8  EF81  F00A         	goto	i2l806
  5153   0014CC                     i2u190_40:
  5154   0014CC  A0F2               	btfss	242,0,c	;volatile
  5155   0014CE  EF6B  F00A         	goto	i2u191_41
  5156   0014D2  EF6D  F00A         	goto	i2u191_40
  5157   0014D6                     i2u191_41:
  5158   0014D6  EF81  F00A         	goto	i2l806
  5159   0014DA                     i2u191_40:
  5160   0014DA  A881               	btfss	129,4,c	;volatile
  5161   0014DC  EF72  F00A         	goto	i2u192_41
  5162   0014E0  EF74  F00A         	goto	i2u192_40
  5163   0014E4                     i2u192_41:
  5164   0014E4  EF81  F00A         	goto	i2l806
  5165   0014E8                     i2u192_40:
  5166   0014E8  0472               	decf	_RB4_Flag^0,w,c	;volatile
  5167   0014EA  A4D8               	btfss	status,2,c
  5168   0014EC  EF7A  F00A         	goto	i2u193_41
  5169   0014F0  EF7C  F00A         	goto	i2u193_40
  5170   0014F4                     i2u193_41:
  5171   0014F4  EF81  F00A         	goto	i2l806
  5172   0014F8                     i2u193_40:
  5173   0014F8                     
  5174                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 58:        (PORTBbits.RB4 == HIGH) && (R
      +                          B4_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 59:         RB4_Flag = 0;
  5175   0014F8  0E00               	movlw	0
  5176   0014FA  6E72               	movwf	_RB4_Flag^0,c	;volatile
  5177   0014FC                     
  5178                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR(0);
  5179   0014FC  0E00               	movlw	0
  5180   0014FE  EC18  F015         	call	_RB4_ISR
  5181   001502                     i2l806:
  5182                           
  5183                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 63:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5184   001502  A6F2               	btfss	242,3,c	;volatile
  5185   001504  EF86  F00A         	goto	i2u194_41
  5186   001508  EF88  F00A         	goto	i2u194_40
  5187   00150C                     i2u194_41:
  5188   00150C  EFA3  F00A         	goto	i2l808
  5189   001510                     i2u194_40:
  5190   001510  A0F2               	btfss	242,0,c	;volatile
  5191   001512  EF8D  F00A         	goto	i2u195_41
  5192   001516  EF8F  F00A         	goto	i2u195_40
  5193   00151A                     i2u195_41:
  5194   00151A  EFA3  F00A         	goto	i2l808
  5195   00151E                     i2u195_40:
  5196   00151E  B881               	btfsc	129,4,c	;volatile
  5197   001520  EF94  F00A         	goto	i2u196_41
  5198   001524  EF96  F00A         	goto	i2u196_40
  5199   001528                     i2u196_41:
  5200   001528  EFA3  F00A         	goto	i2l808
  5201   00152C                     i2u196_40:
  5202   00152C  5072               	movf	_RB4_Flag^0,w,c	;volatile
  5203   00152E  A4D8               	btfss	status,2,c
  5204   001530  EF9C  F00A         	goto	i2u197_41
  5205   001534  EF9E  F00A         	goto	i2u197_40
  5206   001538                     i2u197_41:
  5207   001538  EFA3  F00A         	goto	i2l808
  5208   00153C                     i2u197_40:
  5209   00153C                     
  5210                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 64:        (PORTBbits.RB4 == LOW) && (RB
      +                          4_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 65:         RB4_Flag = 1;
  5211   00153C  0E01               	movlw	1
  5212   00153E  6E72               	movwf	_RB4_Flag^0,c	;volatile
  5213   001540                     
  5214                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 66:         RB4_ISR(1);
  5215   001540  0E01               	movlw	1
  5216   001542  EC18  F015         	call	_RB4_ISR
  5217   001546                     i2l808:
  5218                           
  5219                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 69:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5220   001546  A6F2               	btfss	242,3,c	;volatile
  5221   001548  EFA8  F00A         	goto	i2u198_41
  5222   00154C  EFAA  F00A         	goto	i2u198_40
  5223   001550                     i2u198_41:
  5224   001550  EFC5  F00A         	goto	i2l810
  5225   001554                     i2u198_40:
  5226   001554  A0F2               	btfss	242,0,c	;volatile
  5227   001556  EFAF  F00A         	goto	i2u199_41
  5228   00155A  EFB1  F00A         	goto	i2u199_40
  5229   00155E                     i2u199_41:
  5230   00155E  EFC5  F00A         	goto	i2l810
  5231   001562                     i2u199_40:
  5232   001562  AA81               	btfss	129,5,c	;volatile
  5233   001564  EFB6  F00A         	goto	i2u200_41
  5234   001568  EFB8  F00A         	goto	i2u200_40
  5235   00156C                     i2u200_41:
  5236   00156C  EFC5  F00A         	goto	i2l810
  5237   001570                     i2u200_40:
  5238   001570  0471               	decf	_RB5_Flag^0,w,c	;volatile
  5239   001572  A4D8               	btfss	status,2,c
  5240   001574  EFBE  F00A         	goto	i2u201_41
  5241   001578  EFC0  F00A         	goto	i2u201_40
  5242   00157C                     i2u201_41:
  5243   00157C  EFC5  F00A         	goto	i2l810
  5244   001580                     i2u201_40:
  5245   001580                     
  5246                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 70:        (PORTBbits.RB5 == HIGH) && (R
      +                          B5_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 71:         RB5_Flag = 0;
  5247   001580  0E00               	movlw	0
  5248   001582  6E71               	movwf	_RB5_Flag^0,c	;volatile
  5249   001584                     
  5250                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 72:         RB5_ISR(0);
  5251   001584  0E00               	movlw	0
  5252   001586  EC0B  F015         	call	_RB5_ISR
  5253   00158A                     i2l810:
  5254                           
  5255                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 75:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5256   00158A  A6F2               	btfss	242,3,c	;volatile
  5257   00158C  EFCA  F00A         	goto	i2u202_41
  5258   001590  EFCC  F00A         	goto	i2u202_40
  5259   001594                     i2u202_41:
  5260   001594  EFE7  F00A         	goto	i2l812
  5261   001598                     i2u202_40:
  5262   001598  A0F2               	btfss	242,0,c	;volatile
  5263   00159A  EFD1  F00A         	goto	i2u203_41
  5264   00159E  EFD3  F00A         	goto	i2u203_40
  5265   0015A2                     i2u203_41:
  5266   0015A2  EFE7  F00A         	goto	i2l812
  5267   0015A6                     i2u203_40:
  5268   0015A6  BA81               	btfsc	129,5,c	;volatile
  5269   0015A8  EFD8  F00A         	goto	i2u204_41
  5270   0015AC  EFDA  F00A         	goto	i2u204_40
  5271   0015B0                     i2u204_41:
  5272   0015B0  EFE7  F00A         	goto	i2l812
  5273   0015B4                     i2u204_40:
  5274   0015B4  5071               	movf	_RB5_Flag^0,w,c	;volatile
  5275   0015B6  A4D8               	btfss	status,2,c
  5276   0015B8  EFE0  F00A         	goto	i2u205_41
  5277   0015BC  EFE2  F00A         	goto	i2u205_40
  5278   0015C0                     i2u205_41:
  5279   0015C0  EFE7  F00A         	goto	i2l812
  5280   0015C4                     i2u205_40:
  5281   0015C4                     
  5282                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 76:        (PORTBbits.RB5 == LOW) && (RB
      +                          5_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 77:         RB5_Flag = 1;
  5283   0015C4  0E01               	movlw	1
  5284   0015C6  6E71               	movwf	_RB5_Flag^0,c	;volatile
  5285   0015C8                     
  5286                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 78:         RB5_ISR(1);
  5287   0015C8  0E01               	movlw	1
  5288   0015CA  EC0B  F015         	call	_RB5_ISR
  5289   0015CE                     i2l812:
  5290                           
  5291                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 81:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5292   0015CE  A6F2               	btfss	242,3,c	;volatile
  5293   0015D0  EFEC  F00A         	goto	i2u206_41
  5294   0015D4  EFEE  F00A         	goto	i2u206_40
  5295   0015D8                     i2u206_41:
  5296   0015D8  EF09  F00B         	goto	i2l814
  5297   0015DC                     i2u206_40:
  5298   0015DC  A0F2               	btfss	242,0,c	;volatile
  5299   0015DE  EFF3  F00A         	goto	i2u207_41
  5300   0015E2  EFF5  F00A         	goto	i2u207_40
  5301   0015E6                     i2u207_41:
  5302   0015E6  EF09  F00B         	goto	i2l814
  5303   0015EA                     i2u207_40:
  5304   0015EA  AC81               	btfss	129,6,c	;volatile
  5305   0015EC  EFFA  F00A         	goto	i2u208_41
  5306   0015F0  EFFC  F00A         	goto	i2u208_40
  5307   0015F4                     i2u208_41:
  5308   0015F4  EF09  F00B         	goto	i2l814
  5309   0015F8                     i2u208_40:
  5310   0015F8  0470               	decf	_RB6_Flag^0,w,c	;volatile
  5311   0015FA  A4D8               	btfss	status,2,c
  5312   0015FC  EF02  F00B         	goto	i2u209_41
  5313   001600  EF04  F00B         	goto	i2u209_40
  5314   001604                     i2u209_41:
  5315   001604  EF09  F00B         	goto	i2l814
  5316   001608                     i2u209_40:
  5317   001608                     
  5318                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 82:        (PORTBbits.RB6 == HIGH) && (R
      +                          B6_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 83:         RB6_Flag = 0;
  5319   001608  0E00               	movlw	0
  5320   00160A  6E70               	movwf	_RB6_Flag^0,c	;volatile
  5321   00160C                     
  5322                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 84:         RB6_ISR(0);
  5323   00160C  0E00               	movlw	0
  5324   00160E  ECFE  F014         	call	_RB6_ISR
  5325   001612                     i2l814:
  5326                           
  5327                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 87:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5328   001612  A6F2               	btfss	242,3,c	;volatile
  5329   001614  EF0E  F00B         	goto	i2u210_41
  5330   001618  EF10  F00B         	goto	i2u210_40
  5331   00161C                     i2u210_41:
  5332   00161C  EF2B  F00B         	goto	i2l816
  5333   001620                     i2u210_40:
  5334   001620  A0F2               	btfss	242,0,c	;volatile
  5335   001622  EF15  F00B         	goto	i2u211_41
  5336   001626  EF17  F00B         	goto	i2u211_40
  5337   00162A                     i2u211_41:
  5338   00162A  EF2B  F00B         	goto	i2l816
  5339   00162E                     i2u211_40:
  5340   00162E  BC81               	btfsc	129,6,c	;volatile
  5341   001630  EF1C  F00B         	goto	i2u212_41
  5342   001634  EF1E  F00B         	goto	i2u212_40
  5343   001638                     i2u212_41:
  5344   001638  EF2B  F00B         	goto	i2l816
  5345   00163C                     i2u212_40:
  5346   00163C  5070               	movf	_RB6_Flag^0,w,c	;volatile
  5347   00163E  A4D8               	btfss	status,2,c
  5348   001640  EF24  F00B         	goto	i2u213_41
  5349   001644  EF26  F00B         	goto	i2u213_40
  5350   001648                     i2u213_41:
  5351   001648  EF2B  F00B         	goto	i2l816
  5352   00164C                     i2u213_40:
  5353   00164C                     
  5354                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 88:        (PORTBbits.RB6 == LOW) && (RB
      +                          6_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 89:         RB6_Flag = 1;
  5355   00164C  0E01               	movlw	1
  5356   00164E  6E70               	movwf	_RB6_Flag^0,c	;volatile
  5357   001650                     
  5358                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 90:         RB6_ISR(1);
  5359   001650  0E01               	movlw	1
  5360   001652  ECFE  F014         	call	_RB6_ISR
  5361   001656                     i2l816:
  5362                           
  5363                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 93:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5364   001656  A6F2               	btfss	242,3,c	;volatile
  5365   001658  EF30  F00B         	goto	i2u214_41
  5366   00165C  EF32  F00B         	goto	i2u214_40
  5367   001660                     i2u214_41:
  5368   001660  EF4D  F00B         	goto	i2l818
  5369   001664                     i2u214_40:
  5370   001664  A0F2               	btfss	242,0,c	;volatile
  5371   001666  EF37  F00B         	goto	i2u215_41
  5372   00166A  EF39  F00B         	goto	i2u215_40
  5373   00166E                     i2u215_41:
  5374   00166E  EF4D  F00B         	goto	i2l818
  5375   001672                     i2u215_40:
  5376   001672  AE81               	btfss	129,7,c	;volatile
  5377   001674  EF3E  F00B         	goto	i2u216_41
  5378   001678  EF40  F00B         	goto	i2u216_40
  5379   00167C                     i2u216_41:
  5380   00167C  EF4D  F00B         	goto	i2l818
  5381   001680                     i2u216_40:
  5382   001680  046F               	decf	_RB7_Flag^0,w,c	;volatile
  5383   001682  A4D8               	btfss	status,2,c
  5384   001684  EF46  F00B         	goto	i2u217_41
  5385   001688  EF48  F00B         	goto	i2u217_40
  5386   00168C                     i2u217_41:
  5387   00168C  EF4D  F00B         	goto	i2l818
  5388   001690                     i2u217_40:
  5389   001690                     
  5390                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 94:        (PORTBbits.RB7 == HIGH) && (R
      +                          B7_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 95:         RB7_Flag = 0;
  5391   001690  0E00               	movlw	0
  5392   001692  6E6F               	movwf	_RB7_Flag^0,c	;volatile
  5393   001694                     
  5394                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 96:         RB7_ISR(0);
  5395   001694  0E00               	movlw	0
  5396   001696  ECF1  F014         	call	_RB7_ISR
  5397   00169A                     i2l818:
  5398                           
  5399                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5400   00169A  A6F2               	btfss	242,3,c	;volatile
  5401   00169C  EF52  F00B         	goto	i2u218_41
  5402   0016A0  EF54  F00B         	goto	i2u218_40
  5403   0016A4                     i2u218_41:
  5404   0016A4  EF6F  F00B         	goto	i2l821
  5405   0016A8                     i2u218_40:
  5406   0016A8  A0F2               	btfss	242,0,c	;volatile
  5407   0016AA  EF59  F00B         	goto	i2u219_41
  5408   0016AE  EF5B  F00B         	goto	i2u219_40
  5409   0016B2                     i2u219_41:
  5410   0016B2  EF6F  F00B         	goto	i2l821
  5411   0016B6                     i2u219_40:
  5412   0016B6  BE81               	btfsc	129,7,c	;volatile
  5413   0016B8  EF60  F00B         	goto	i2u220_41
  5414   0016BC  EF62  F00B         	goto	i2u220_40
  5415   0016C0                     i2u220_41:
  5416   0016C0  EF6F  F00B         	goto	i2l821
  5417   0016C4                     i2u220_40:
  5418   0016C4  506F               	movf	_RB7_Flag^0,w,c	;volatile
  5419   0016C6  A4D8               	btfss	status,2,c
  5420   0016C8  EF68  F00B         	goto	i2u221_41
  5421   0016CC  EF6A  F00B         	goto	i2u221_40
  5422   0016D0                     i2u221_41:
  5423   0016D0  EF6F  F00B         	goto	i2l821
  5424   0016D4                     i2u221_40:
  5425   0016D4                     
  5426                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 100:        (PORTBbits.RB7 == LOW) && (R
      +                          B7_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 101:         RB7_Flag = 1
      +                          ;
  5427   0016D4  0E01               	movlw	1
  5428   0016D6  6E6F               	movwf	_RB7_Flag^0,c	;volatile
  5429   0016D8                     
  5430                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 102:         RB7_ISR(1);
  5431   0016D8  0E01               	movlw	1
  5432   0016DA  ECF1  F014         	call	_RB7_ISR
  5433   0016DE                     i2l821:
  5434   0016DE  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5435   0016E0  0011               	retfie		f
  5436   0016E2                     __end_of_InterruptManager:
  5437                           	callstack 0
  5438                           
  5439 ;; *************** function _RB7_ISR *****************
  5440 ;; Defined at:
  5441 ;;		line 162 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  RB7_Source      1    wreg     unsigned char 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;Total ram usage:        1 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_InterruptManager
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text28
  5469   0029E2                     __ptext28:
  5470                           	callstack 0
  5471   0029E2                     _RB7_ISR:
  5472                           	callstack 24
  5473                           
  5474                           ;incstack = 0
  5475                           ;RB7_ISR@RB7_Source stored from wreg
  5476   0029E2  6E01               	movwf	RB7_ISR@RB7_Source^0,c
  5477   0029E4                     
  5478                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 164:     (INTCONbits.RBIF = 0);
  5479   0029E4  90F2               	bcf	242,0,c	;volatile
  5480   0029E6                     
  5481                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 167:     if(0 == RB7_Source){
  5482   0029E6  5001               	movf	RB7_ISR@RB7_Source^0,w,c
  5483   0029E8  A4D8               	btfss	status,2,c
  5484   0029EA  EFF9  F014         	goto	i2u61_41
  5485   0029EE  EFFB  F014         	goto	i2u61_40
  5486   0029F2                     i2u61_41:
  5487   0029F2  EFFD  F014         	goto	i2l2070
  5488   0029F6                     i2u61_40:
  5489   0029F6  EFFD  F014         	goto	i2l649
  5490   0029FA                     i2l2070:
  5491   0029FA                     i2l649:
  5492   0029FA  0012               	return		;funcret
  5493   0029FC                     __end_of_RB7_ISR:
  5494                           	callstack 0
  5495                           
  5496 ;; *************** function _RB6_ISR *****************
  5497 ;; Defined at:
  5498 ;;		line 143 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  RB6_Source      1    wreg     unsigned char 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;Total ram usage:        1 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_InterruptManager
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text29
  5526   0029FC                     __ptext29:
  5527                           	callstack 0
  5528   0029FC                     _RB6_ISR:
  5529                           	callstack 24
  5530                           
  5531                           ;incstack = 0
  5532                           ;RB6_ISR@RB6_Source stored from wreg
  5533   0029FC  6E01               	movwf	RB6_ISR@RB6_Source^0,c
  5534   0029FE                     
  5535                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 145:     (INTCONbits.RBIF = 0);
  5536   0029FE  90F2               	bcf	242,0,c	;volatile
  5537   002A00                     
  5538                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 148:     if(0 == RB6_Source){
  5539   002A00  5001               	movf	RB6_ISR@RB6_Source^0,w,c
  5540   002A02  A4D8               	btfss	status,2,c
  5541   002A04  EF06  F015         	goto	i2u60_41
  5542   002A08  EF08  F015         	goto	i2u60_40
  5543   002A0C                     i2u60_41:
  5544   002A0C  EF0A  F015         	goto	i2l2056
  5545   002A10                     i2u60_40:
  5546   002A10  EF0A  F015         	goto	i2l638
  5547   002A14                     i2l2056:
  5548   002A14                     i2l638:
  5549   002A14  0012               	return		;funcret
  5550   002A16                     __end_of_RB6_ISR:
  5551                           	callstack 0
  5552                           
  5553 ;; *************** function _RB5_ISR *****************
  5554 ;; Defined at:
  5555 ;;		line 124 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  RB5_Source      1    wreg     unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;Total ram usage:        1 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_InterruptManager
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text30
  5583   002A16                     __ptext30:
  5584                           	callstack 0
  5585   002A16                     _RB5_ISR:
  5586                           	callstack 24
  5587                           
  5588                           ;incstack = 0
  5589                           ;RB5_ISR@RB5_Source stored from wreg
  5590   002A16  6E01               	movwf	RB5_ISR@RB5_Source^0,c
  5591   002A18                     
  5592                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 126:     (INTCONbits.RBIF = 0);
  5593   002A18  90F2               	bcf	242,0,c	;volatile
  5594   002A1A                     
  5595                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 129:     if(0 == RB5_Source){
  5596   002A1A  5001               	movf	RB5_ISR@RB5_Source^0,w,c
  5597   002A1C  A4D8               	btfss	status,2,c
  5598   002A1E  EF13  F015         	goto	i2u59_41
  5599   002A22  EF15  F015         	goto	i2u59_40
  5600   002A26                     i2u59_41:
  5601   002A26  EF17  F015         	goto	i2l2042
  5602   002A2A                     i2u59_40:
  5603   002A2A  EF17  F015         	goto	i2l627
  5604   002A2E                     i2l2042:
  5605   002A2E                     i2l627:
  5606   002A2E  0012               	return		;funcret
  5607   002A30                     __end_of_RB5_ISR:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _RB4_ISR *****************
  5611 ;; Defined at:
  5612 ;;		line 105 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  RB4_Source      1    wreg     unsigned char 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;Total ram usage:        1 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_InterruptManager
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text31
  5640   002A30                     __ptext31:
  5641                           	callstack 0
  5642   002A30                     _RB4_ISR:
  5643                           	callstack 24
  5644                           
  5645                           ;incstack = 0
  5646                           ;RB4_ISR@RB4_Source stored from wreg
  5647   002A30  6E01               	movwf	RB4_ISR@RB4_Source^0,c
  5648   002A32                     
  5649                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 107:     (INTCONbits.RBIF = 0);
  5650   002A32  90F2               	bcf	242,0,c	;volatile
  5651   002A34                     
  5652                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 110:     if(0 == RB4_Source){
  5653   002A34  5001               	movf	RB4_ISR@RB4_Source^0,w,c
  5654   002A36  A4D8               	btfss	status,2,c
  5655   002A38  EF20  F015         	goto	i2u58_41
  5656   002A3C  EF22  F015         	goto	i2u58_40
  5657   002A40                     i2u58_41:
  5658   002A40  EF24  F015         	goto	i2l2028
  5659   002A44                     i2u58_40:
  5660   002A44  EF24  F015         	goto	i2l616
  5661   002A48                     i2l2028:
  5662   002A48                     i2l616:
  5663   002A48  0012               	return		;funcret
  5664   002A4A                     __end_of_RB4_ISR:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _INT2_ISR *****************
  5668 ;; Defined at:
  5669 ;;		line 93 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		None
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_InterruptManager
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text32
  5697   002A4A                     __ptext32:
  5698                           	callstack 0
  5699   002A4A                     _INT2_ISR:
  5700                           	callstack 24
  5701   002A4A                     
  5702                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 95:     (INTCON3bits.INT2IF = 0);
  5703   002A4A  92F0               	bcf	240,1,c	;volatile
  5704   002A4C  0012               	return		;funcret
  5705   002A4E                     __end_of_INT2_ISR:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _INT1_ISR *****************
  5709 ;; Defined at:
  5710 ;;		line 84 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		None
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_InterruptManager
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text33
  5738   002A4E                     __ptext33:
  5739                           	callstack 0
  5740   002A4E                     _INT1_ISR:
  5741                           	callstack 24
  5742   002A4E                     
  5743                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 86:     (INTCON3bits.INT1IF = 0);
  5744   002A4E  90F0               	bcf	240,0,c	;volatile
  5745   002A50  0012               	return		;funcret
  5746   002A52                     __end_of_INT1_ISR:
  5747                           	callstack 0
  5748                           
  5749 ;; *************** function _INT0_ISR *****************
  5750 ;; Defined at:
  5751 ;;		line 72 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		None
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_InterruptManager
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text34
  5779   002A52                     __ptext34:
  5780                           	callstack 0
  5781   002A52                     _INT0_ISR:
  5782                           	callstack 24
  5783   002A52                     
  5784                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 74:     (INTCONbits.INT0IF = 0);
  5785   002A52  92F2               	bcf	242,1,c	;volatile
  5786   002A54  0012               	return		;funcret
  5787   002A56                     __end_of_INT0_ISR:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _ADC_ISR *****************
  5791 ;; Defined at:
  5792 ;;		line 234 in file "MCAL_layer/ADC/hal_adc.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		None
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used: 1
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_InterruptManager
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text35
  5820   002A56                     __ptext35:
  5821                           	callstack 0
  5822   002A56                     _ADC_ISR:
  5823                           	callstack 24
  5824   002A56                     
  5825                           ;MCAL_layer/ADC/hal_adc.c: 235:     (PIR1bits.ADIF = 0);
  5826   002A56  9C9E               	bcf	158,6,c	;volatile
  5827   002A58  0012               	return		;funcret
  5828   002A5A                     __end_of_ADC_ISR:
  5829                           	callstack 0
  5830                           
  5831                           	psect	rparam
  5832   000000                     
  5833                           	psect	temp
  5834   00007D                     btemp:
  5835                           	callstack 0
  5836   00007D                     	ds	1
  5837   000000                     int$flags	set	btemp
  5838   000000                     wtemp8	set	btemp+1
  5839   000000                     ttemp5	set	btemp+1
  5840   000000                     ttemp6	set	btemp+4
  5841   000000                     ttemp7	set	btemp+8
  5842                           tosu	equ	0xFFF
  5843                           tosh	equ	0xFFE
  5844                           tosl	equ	0xFFD
  5845                           stkptr	equ	0xFFC
  5846                           pclatu	equ	0xFFB
  5847                           pclath	equ	0xFFA
  5848                           pcl	equ	0xFF9
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           prodh	equ	0xFF4
  5854                           prodl	equ	0xFF3
  5855                           indf0	equ	0xFEF
  5856                           postinc0	equ	0xFEE
  5857                           postdec0	equ	0xFED
  5858                           preinc0	equ	0xFEC
  5859                           plusw0	equ	0xFEB
  5860                           fsr0h	equ	0xFEA
  5861                           fsr0l	equ	0xFE9
  5862                           wreg	equ	0xFE8
  5863                           indf1	equ	0xFE7
  5864                           postinc1	equ	0xFE6
  5865                           postdec1	equ	0xFE5
  5866                           preinc1	equ	0xFE4
  5867                           plusw1	equ	0xFE3
  5868                           fsr1h	equ	0xFE2
  5869                           fsr1l	equ	0xFE1
  5870                           bsr	equ	0xFE0
  5871                           indf2	equ	0xFDF
  5872                           postinc2	equ	0xFDE
  5873                           postdec2	equ	0xFDD
  5874                           preinc2	equ	0xFDC
  5875                           plusw2	equ	0xFDB
  5876                           fsr2h	equ	0xFDA
  5877                           fsr2l	equ	0xFD9
  5878                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    0
    Data        55
    BSS         53
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48     124
    BANK0           128      2      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc_1$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversion_Blocking@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversion_Blocking@conversion_status	PTR unsigned char  size(1) Largest target is 2
		 -> adc_temp(COMRAM[2]), 

    ADC_GetConversionResult@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_GetConversionResult@adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_temp(COMRAM[2]), 

    ADC_Init@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_Init@adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_Select_result_format@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    adc_Select_result_format@adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_select_volt_ref@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    adc_select_volt_ref@adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_SelectChannel@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    ADC_StartConversion@adc	PTR const struct . size(1) Largest target is 7
		 -> adc_1(BANK0[7]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), lcd_obj$lcd_data(BANK0[8]), motor_init@obj1(COMRAM[1]), motor_init@obj2(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), lcd_obj$lcd_data(BANK0[8]), motor_init@obj1(COMRAM[1]), motor_init@obj2(COMRAM[1]), 
		 -> motor_move_left@obj1(COMRAM[1]), motor_move_left@obj2(COMRAM[1]), motor_move_right@obj1(COMRAM[1]), motor_move_right@obj2(COMRAM[1]), 
		 -> motor_stop@obj1(COMRAM[1]), motor_stop@obj2(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_8bit_init@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_enable@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_obj(BANK0[10]), 

    motor_init@motor	PTR const struct . size(1) Largest target is 2
		 -> AIR_CONDITIONER(COMRAM[2]), HEATER(COMRAM[2]), 

    motor_move_right@motor	PTR const struct . size(1) Largest target is 2
		 -> AIR_CONDITIONER(COMRAM[2]), HEATER(COMRAM[2]), 

    motor_stop@motor	PTR const struct . size(1) Largest target is 2
		 -> AIR_CONDITIONER(COMRAM[2]), HEATER(COMRAM[2]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1211$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1327$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1327$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2182$buffer	PTR unsigned char  size(2) Largest target is 0

    S2182$source	PTR const unsigned char  size(2) Largest target is 0

    S89$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 0

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _motor_stop->_gpio_pin_write_logic
    _motor_move_right->_gpio_pin_write_logic
    _motor_init->_gpio_pin_write_logic
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable
    _lcd_8bit_init->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_Init->_adc_input_channel_port_config
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_config

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    _main->___fltol

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  109599
         _ADC_GetConversion_Blocking
                           _ADC_Init
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                      _lcd_8bit_init
        _lcd_8bit_send_char_data_pos
           _lcd_8bit_send_string_pos
                         _motor_init
                   _motor_move_right
                         _motor_stop
 ---------------------------------------------------------------------------------
 (1) _motor_stop                                           5     4      1    6485
                                              9 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_move_right                                     5     4      1    6485
                                              9 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           5     4      1    8376
                                              9 COMRAM     5     4      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   29431
                                             23 COMRAM     5     1      4
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   13429
                                             17 COMRAM     3     1      2
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_char_data_pos                          5     1      4   30033
                                             23 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   15518
                                             17 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2   13141
                                             11 COMRAM     6     4      2
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_init                                        3     2      1   23704
                                             17 COMRAM     3     2      1
            _gpio_pin_direction_init
               _gpio_pin_write_logic
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   14813
                                             11 COMRAM     6     4      2
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable                                 2     1      1    6351
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    6107
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_init                              7     6      1    1775
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     311
                                              1 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     427
                                             40 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     2      1     538
                                              4 COMRAM     3     2      1
           _adc_Select_result_format
      _adc_input_channel_port_config
                _adc_select_volt_ref
 ---------------------------------------------------------------------------------
 (2) _adc_select_volt_ref                                  1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _adc_Select_result_format                             1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           4     1      3    1353
                                              8 COMRAM     4     1      3
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     198
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    4     2      2     416
                                              4 COMRAM     4     2      2
      _adc_input_channel_port_config
 ---------------------------------------------------------------------------------
 (2) _adc_input_channel_port_config                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              6     4      2     330
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_config
     _ADC_StartConversion
   _ADC_Init
     _adc_Select_result_format
     _adc_input_channel_port_config
     _adc_select_volt_ref
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___lwmod
   ___xxtofl
   _lcd_8bit_init
     _gpio_pin_direction_init
     _gpio_pin_write_logic
     _lcd_8bit_send_command
       _gpio_pin_write_logic
       _lcd_8bit_send_enable
         _gpio_pin_write_logic
   _lcd_8bit_send_char_data_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
     _lcd_8bit_set_cursor
   _motor_init
     _gpio_pin_direction_init
     _gpio_pin_write_logic
   _motor_move_right
     _gpio_pin_write_logic
   _motor_stop
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      29       5       32.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      7C       1       98.4%
BITBIGSFRhlhl       2B      0       0      37        0.0%
BITBIGSFRllh        21      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllhh       6      0       0      39        0.0%
BITBIGSFRllllh       4      0       0      40        0.0%
BITBIGSFRlllll       4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      42        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Aug 13 08:21:04 2024

                         ??_InterruptManager 0002                                           l92 29A4  
                                         l77 2486                                           l94 29A8  
                                         l79 2514                                           l89 2986  
                                        l112 23B8                                          l122 2804  
                                        l150 28D2                                          l119 27E6  
                                        l152 28D4                                          l160 2888  
                                        l145 216C                                          l410 294E  
                                        l163 2890                                          l156 2868  
                                        l228 1D90                                          l420 26DE  
                                        l165 2894                                          l405 258A  
                                        l510 1FC6                                          l247 1EA0  
                                        l427 284E                                          l516 2094  
                                        l525 2300                                          l391 1930  
                                        l519 224C                                          l543 2236  
                                        l537 2182                                          l491 2468  
                                        l398 2600                                          l479 2912  
                  _RB5_InterruptHandler_HIGH 0045                              __end_of_ADC_ISR 2A5A  
                                        _ret 00A8                    ?_lcd_8bit_send_string_pos 0018  
                                        wreg 0FE8                 __end_of_lcd_8bit_send_enable 2914  
                __end_of_lcd_8bit_set_cursor 246A                                 ___flmul@aexp 0021  
                               ___flmul@bexp 0022                                 ___flmul@sign 001C  
                               ___flmul@temp 0027                                 ___flmul@prod 0023  
                            __end_of_RB4_ISR 2A4A                              __end_of_RB5_ISR 2A30  
                            __end_of_RB6_ISR 2A16                              __end_of_RB7_ISR 29FC  
                               ___fltol@exp1 00A7                                         l1121 1FA8  
               __end_of_lcd_8bit_send_string 26E0                                         l1322 2674  
                                       l1315 266C                                         l1332 2742  
                                       l1325 273A                                         l3200 25A8  
                                       l1442 143A                                         l3130 1DCE  
                                       l3210 25E2                                         l3202 25B4  
                                       l3300 1CA0                                         l3132 1E24  
                                       l3124 1D92                                         l3212 25E4  
                                       l3220 2516                                         l1445 12CC  
                                       l1438 10D6                                         l3302 1CA8  
                                       l3310 1D8E                                         l3126 1DA6  
                                       l3150 28EE                                         l3214 25F4  
                                       l3222 252A                                         l1455 13FC  
                                       l1447 1344                                         l3160 2098  
                                       l1448 1332                                         l3304 1CFE  
                                       l3136 1E74                                         l3128 1DC6  
                                       l3152 28FA                                         l3208 25B8  
                                       l3216 25FE                                         l3400 16E2  
                                       l3232 2542                                         l3240 2588  
                                       l3224 2532                                         l3170 20B4  
                                       l3162 209C                                         l3250 28CC  
                                       l1482 1AE4                                         l3138 1E9E  
                                       l3154 2902                                         l3146 28D6  
                                       l3410 18BA                                         l3402 16F2  
                                       l3234 256C                                         l3226 253E  
                                       l3180 20D2                                         l3172 20BA  
                                       l3164 20A2                                         l3260 296C  
                                       l3500 27F4                                         l3244 2896  
                                       l3252 2850                                         l3420 247E  
                                       l4300 1EBA                                         l3308 1D4E  
                                       l3156 2910                                         l3148 28E6  
                                       l3412 18C6                                         l3404 16FA  
                                       l3236 256E                                         l1493 1A7C  
                                       l3182 20D8                                         l3174 20C0  
                                       l3166 20A8                                         l3190 20EA  
                                       l3262 297E                                         l3270 299C  
                                       l3502 2802                                         l3246 28AE  
                                       l3254 2870                                         l3430 24EE  
                                       l3422 2488                                         l4310 1F0A  
                                       l1486 1A20                                         l3406 1892  
                                       l3414 192E                                         l3238 257E  
                                       l3510 292C                                         l1479 1988  
                                       l3280 2326                                         l3184 20DE  
                                       l3176 20C6                                         l3168 20AE  
                                       l3264 2984                                         l3256 2950  
                                       l3272 29A6                                         l3248 28B4  
                                       l3440 2510                                         l3432 24F0  
                                       l3424 24DA                                         l4320 1F34  
                                       l4312 1F0E                                         l4304 1ECE  
                                       l3408 18A0                                         l3360 23CE  
                                       l3512 294C                                         l3520 2250  
                                       l3282 232E                                         l3186 20E4  
                                       l3178 20CC                                         l3258 2964  
                                       l3434 24F2                                         l3426 24EA  
                                       l3442 2512                                         l3418 246A  
                                       l3610 1012                                         l4330 1F5C  
                                       l4322 1F3E                                         l4314 1F1C  
                                       l4306 1EF8                                         l3370 2418  
                                       l3362 23D6                                         l3506 2914  
                                       l3450 2826                                         l3530 22B2  
                                       l3522 2282                                         l3284 2346  
                                       l3292 23B6                                         l3276 2302  
                                       l3268 2988                                         l3436 2500  
                                       l3428 24EC                                         l3700 12EA  
                                       l3620 104E                                         l3612 101E  
                                       l4332 1F68                                         l4324 1F48  
                                       l4308 1EFA                                         l3196 258C  
                                       l3364 23DC                                         l3508 2924  
                                       l3452 282E                                         l3460 1FAA  
                                       l3532 22D2                                         l3524 2284  
                                       l3516 2238                                         l3286 236C  
                                       l3278 2316                                         l3438 2508  
                                       l3710 1354                                         l3702 12EE  
                                       l3630 1080                                         l3622 105E  
                                       l3614 102C                                         l4334 1F78  
                                       l3198 25A0                                         l3366 23F0  
                                       l3374 242C                                         l3358 23BA  
                                       l3390 26A2                                         l3454 283E  
                                       l3446 2806                                         l3470 200E  
                                       l3462 1FBE                                         l3534 22D4  
                                       l3526 2294                                         l3518 2248  
                                       l3550 21BA                                         l3542 216E  
                                       l4350 1B22                                         l4342 1AE6  
                                       l3288 2384                                         l3720 13B6  
                                       l3712 1360                                         l3704 12FC  
                                       l3640 10C0                                         l3632 108E  
                                       l3624 1064                                         l3616 102E  
                                       l4336 1F88                                         l3800 265E  
                                       l3296 1C6C                                         l3368 2404  
                                       l3376 2466                                         l3392 26BC  
                                       l3384 2676                                         l3456 284C  
                                       l3448 2816                                         l3480 2062  
                                       l3472 2012                                         l3464 1FCA  
                                       l3536 22E8                                         l3528 2298  
                                       l3560 220A                                         l3552 21CA  
                                       l3544 217E                                         l4360 1BD4  
                                       l4352 1B2E                                         l4344 1AF2  
                                       l3730 141E                                         l3722 13CA  
                                       l3714 136E                                         l3706 132A  
                                       l3650 110A                                         l3642 10C6  
                                       l3634 1090                                         l3626 1074  
                                       l3618 103E                                         l4338 1F98  
                                       l3802 2660                                         l3810 26FA  
                                       l3298 1C80                                         l3394 26BE  
                                       l3386 268A                                         l3482 206A  
                                       l3474 202C                                         l3466 1FFC  
                                       l3538 22F4                                         l3562 221E  
                                       l3554 21CE                                         l3546 2186  
                                       l4370 1C32                                         l4362 1BE8  
                                       l4354 1B42                                         l4346 1AFE  
                                       l3492 27A6                                         l3732 1420  
                                       l3724 13E4                                         l3716 1398  
                                       l3660 115A                                         l3652 1116  
                                       l3644 10E6                                         l3636 10A0  
                                       l3628 107A                                         l3804 2666  
                                       l3820 2734                                         l3812 2702  
                                       l4460 1D78                                         l3396 26DC  
                                       l3388 269A                                         l3484 207A  
                                       l3476 204C                                         l3468 1FFE  
                                       l3564 222A                                         l3556 21E8  
                                       l3548 21B8                                         l4372 1C48  
                                       l4364 1BFC                                         l4356 1B94  
                                       l4348 1B16                                         l4462 20FE  
                                       l3494 27B6                                         l3726 1400  
                                       l3734 1426                                         l3718 139C  
                                       l3670 119C                                         l3662 1166  
                                       l3654 1120                                         l3646 10F6  
                                       l3638 10B0                                         l3814 2710  
                                       l3806 26E0                                         l3830 19AE  
                                       l3822 1934                                         l3486 2082  
                                       l3478 204E                                         l3558 2208  
                                       l4374 1C54                                         l4366 1C10  
                                       l4358 1BB4                                         l3496 27C6  
                                       l3736 142A                                         l3728 1410  
                                       l3680 11FE                                         l3672 11A8  
                                       l3664 1172                                         l3656 1136  
                                       l3816 2726                                         l3808 26F2  
                                       l3840 1A08                                         l3824 1944  
                                       l4456 2440                                         l3488 2092  
                                       l4368 1C26                                         l3498 27CE  
                                       l3690 1294                                         l3682 120A  
                                       l3674 11B8                                         l3666 1180  
                                       l3658 1142                                         l4298 1EA2  
                                       l3818 272E                                         l3850 1A6C  
                                       l3842 1A0A                                         l3834 19C2  
                                       l3826 1952                                         l4458 1E88  
                                       l3692 12B2                                         l3684 1226  
                                       l3676 11D2                                         l3668 118C  
                                       l3860 1AC4                                         l3852 1A8A  
                                       l3844 1A16                                         l3836 19CA  
                                       l3828 1998                                         l3694 12BC  
                                       l3686 1250                                         l3678 11E2  
                                       l3790 2624                                         l3862 1AD2  
                                       l3854 1A8C                                         l3846 1A52  
                                       l3838 19D6                                         l3696 12CA  
                                       l3688 1286                                         l3792 262C  
                                       l3784 2602                                         l3864 1AD4  
                                       l3856 1A90                                         l3848 1A5E  
                                       l3698 12DC                                         l3794 263A  
                                       l3786 260A                                         l3858 1AB4  
                                       l3796 2640                                         l3788 261C  
                                       l3798 2656                                         STR_1 1001  
                                       STR_2 100E                                         u3100 2726  
                                       u2220 1DA6                                         u2300 252A  
                                       u3101 2722                                         u2221 1DA2  
                                       u2301 2526                                         _LATA 0F89  
                                       u3110 1944                                         u2230 1DC6  
                                       _LATB 0F8A                                         u3111 1940  
                                       u2231 1DC2                                         _LATC 0F8B  
                                       u2400 2326                                         u3200 1AD2  
                                       u3120 1952                                         u2320 257E  
                                       _LATD 0F8C                                         u2401 2322  
                                       u3201 1ACE                                         u3121 194E  
                                       u2321 257A                                         _LATE 0F8D  
                                       u2410 2346                                         u2330 28AE  
                                       u3050 261C                                         u3130 19AE  
                                       u2314 255C                                         u2411 2342  
                                       u2331 28AA                                         u3051 2618  
                                       u3131 19AA                                         u2315 2558  
                                       u2420 2384                                         u2340 28CC  
                                       u3060 263A                                         u3140 1A04  
                                       u2244 1DEC                                         u2260 28E6  
                                       u2421 2380                                         u2341 28C8  
                                       u3061 2636                                         u3141 1A00  
                                       u2245 1DE8                                         u2261 28E2  
                                       u2350 2868                                         u3070 2656  
                                       u3150 1A4E                                         u2254 1E42  
                                       u2270 25A0                                         u2351 2864  
                                       u3071 2652                                         u3151 1A4A  
                                       u2255 1E3E                                         u2271 259C  
                                       u2360 2888                                         u3080 26F2  
                                       u3160 1A6C                                         u2440 1C80  
                                       u2600 2826                                         u2361 2884  
                                       u3081 26EE                                         u3161 1A68  
                                       u2441 1C7C                                         u2601 2822  
                                       u2370 2964                                         u3090 2710  
                                       u3170 1A7C                                         u2450 1CA0  
                                       u2290 25F4                                         u2530 23CE  
                                       u2610 1FBE                                         u2435 239C  
                                       u2371 2960                                         u3091 270C  
                                       u3171 1A78                                         u2451 1C9C  
                                       u2291 25F0                                         u2531 23CA  
                                       u2611 1FBA                                         u2380 299C  
                                       u3180 1A8A                                         u2284 25D2  
                                       u2540 268A                                         u2381 2998  
                                       u3181 1A86                                         u2285 25CE  
                                       u2541 2686                                         u2390 2316  
                                       u3190 1AC4                                         u2550 269A  
                                       u2710 217E                                         u2391 2312  
                                       u3191 1AC0                                         u2551 2696  
                                       u2711 217A                                         u2640 27B6  
                                       u2800 103E                                         u2480 1D64  
                                       u2464 1CC6                                         u2560 26DC  
                                       u3600 1C26                                         u2641 27B2  
                                       u2801 103A                                         u2481 1D5E  
                                       u2465 1CC2                                         u2561 26D8  
                                       u2625 200C                                         u2705 22E6  
                                       u3601 1C22                                         u2650 27C6  
                                       u2810 104E                                         u3530 1EBA  
                                       u2490 1D66                                         u2474 1D1C  
                                       u2570 16F2                                         u3610 1C48  
                                       u2651 27C2                                         u2811 104A  
                                       u3531 1EB6                                         u2475 1D18  
                                       u2571 16EE                                         u2635 2060  
                                       u2627 200E                                         u2707 22E8  
                                       u3611 1C44                                         u2660 27F4  
                                       u2580 247E                                         u2900 12FC  
                                       u2820 108E                                         u3540 1EEE  
                                       u2661 27F0                                         u2581 247A  
                                       u2901 12F8                                         u2821 108A  
                                       u2637 2062                                         u2725 21C8  
                                       u2910 132A                                         u2830 10A0  
                                       u3550 1F1C                                         u2670 2924  
                                       u2590 2816                                         u2911 1326  
                                       u2831 109C                                         u3551 1F18  
                                       u2671 2920                                         u2591 2812  
                                       u2735 221C                                         u2727 21CA  
                                       u2920 1340                                         u2840 10B0  
                                       u3560 1F30                                         u2680 2248  
                                       u2921 133C                                         u2841 10AC  
                                       u3561 1F2C                                         u3545 1EE4  
                                       u2681 2244                                         u2737 221E  
                                       u2930 1354                                         u2850 10E6  
                                       u3570 1F58                                         u2931 1350  
                                       u2851 10E2                                         u3571 1F54  
                                       u3627 1898                                         u2940 136E  
                                       u2860 10F6                                         u3580 1F78  
                                       u2941 136A                                         u2861 10F2  
                                       u3581 1F74                                         u3637 18B2  
                                       u2950 13B6                                         u2870 1270  
                                       u2790 102C                                         u3590 1F88  
                                       u2951 13B2                                         u2791 1028  
                                       u3591 1F84                                         u3647 18C8  
                                       u2695 2292                                         u2960 13E4  
                                       u2880 12CA                                         u2961 13E0  
                                       u2881 12C6                                         u3657 28FC  
                                       u2697 2294                                         u2970 141E  
                                       u2890 12EA                                         u2971 141A  
                                       u2891 12E6                                         u2875 1266  
                   _RB4_InterruptHandler_LOW 0047                                         _main 1AE6  
                   _RB7_InterruptHandler_LOW 003B                                         fsr2h 0FDA  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                     ?_gpio_pin_direction_init 0002  
                                       btemp 007D                             __end_of_ADC_Init 2516  
                                       prodh 0FF4                                         prodl 0FF3  
                                       start 000E                __end_of_lcd_8bit_send_command 2602  
             ?_adc_input_channel_port_config 0001                                 ___param_bank 0000  
                       _gpio_pin_write_logic 1D92                             __end_of_INT0_ISR 2A56  
                          ?_motor_move_right 000A                             __end_of_INT1_ISR 2A52  
                           __end_of_INT2_ISR 2A4E                                ___fltol@sign1 00A6  
                                      ?_main 0001                           ??_motor_move_right 000B  
                            __end_of___flmul 143C                              __end_of___fltol 1FAA  
                            __end_of___lwdiv 2676                              __end_of___lwmod 2744  
                                      i2l600 2A50                                        i2l169 2A58  
                                      i2l605 2A4C                                        i2l616 2A48  
                                      i2l800 147E                                        i2l810 158A  
                                      i2l802 149E                                        i2l627 2A2E  
                                      i2l812 15CE                                        i2l804 14BE  
                                      i2l821 16DE                                        i2l638 2A14  
                                      i2l814 1612                                        i2l806 1502  
                                      i2l816 1656                                        i2l808 1546  
                                      i2l649 29FA                                        i2l818 169A  
                                      i2l595 2A54                                        i2l798 145E  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
                                      _adc_1 0094                     ?_lcd_8bit_send_char_data 000C  
        __end_of_lcd_8bit_send_char_data_pos 2950                  _lcd_8bit_send_char_data_pos 2914  
                                      tablat 0FF5                                        ttemp5 007E  
                                      ttemp6 0081                                        ttemp7 0085  
                                      status 0FD8                                        wtemp8 007E  
              ??_lcd_8bit_send_char_data_pos 001C                              __initialization 2744  
                               __end_of_main 1C6C                        ?_gpio_pin_write_logic 0002  
                                  ??_ADC_ISR 0001                       lcd_8bit_set_cursor@lcd 0012  
                     lcd_8bit_set_cursor@ret 0017                       lcd_8bit_set_cursor@row 0013  
                                     ??_main 0031                                __activetblptr 0003  
                            _AIR_CONDITIONER 0073                                    ??_RB4_ISR 0001  
                                  ??_RB5_ISR 0001                                    ??_RB6_ISR 0001  
                                  ??_RB7_ISR 0001                                       _ADRESH 0FC4  
                                     _ADRESL 0FC3                                       _HEATER 0075  
                                     i2l2002 2A52                                       i2l2020 2A32  
                                     i2l2014 2A4A                                       i2l2022 2A34  
                                     i2l2008 2A4E                                       i2l2042 2A2E  
                                     i2l2034 2A18                                       i2l2050 2A00  
                                     i2l3010 143E                                       i2l2028 2A48  
                                     i2l2036 2A1A                                       i2l3100 16B6  
                                     i2l3020 148C                                       i2l3012 144C  
                                     i2l2070 29FA                                       i2l2062 29E4  
                                     i2l3102 16C4                                       i2l3030 14DA  
                                     i2l3022 149A                                       i2l3014 145A  
                                     i2l2056 2A14                                       i2l2048 29FE  
                                     i2l2064 29E6                                       i2l3104 16D4  
                                     i2l3040 151E                                       i2l3032 14E8  
                                     i2l3024 14AC                                       i2l3016 146C  
                                     i2l3106 16D8                                       i2l3050 1562  
                                     i2l3042 152C                                       i2l3034 14F8  
                                     i2l3026 14BA                                       i2l3018 147A  
                                     i2l3060 15A6                                       i2l3052 1570  
                                     i2l3044 153C                                       i2l3036 14FC  
                                     i2l3028 14CC                                       i2l3070 15EA  
                                     i2l3062 15B4                                       i2l3054 1580  
                                     i2l3046 1540                                       i2l3038 1510  
                                     i2l3080 162E                                       i2l3072 15F8  
                                     i2l3064 15C4                                       i2l3056 1584  
                                     i2l3048 1554                                       i2l3090 1672  
                                     i2l3082 163C                                       i2l3074 1608  
                                     i2l3066 15C8                                       i2l3058 1598  
                                     i2l3092 1680                                       i2l3084 164C  
                                     i2l3076 160C                                       i2l3068 15DC  
                                     i2l3094 1690                                       i2l3086 1650  
                                     i2l3078 1620                                       i2l3096 1694  
                                     i2l3088 1664                                       i2l3098 16A8  
                                     i2l1954 2A56                          _adc_select_volt_ref 2850  
          ADC_GetConversion_Blocking@channel 000A                             __end_of___xxtofl 1AE6  
                       _lcd_8bit_send_enable 28D6                                    ??___flmul 0018  
                                  ??___fltol 002D                     _adc_Select_result_format 2896  
                                  ??___lwdiv 0006                                    ??___lwmod 0006  
                       _lcd_8bit_send_string 2676                                       clear_0 278A  
                                     clear_1 2796                                       isa$std 0001  
                       ?_adc_select_volt_ref 0002               lcd_8bit_send_char_data_pos@col 001A  
             lcd_8bit_send_char_data_pos@lcd 0018               lcd_8bit_send_char_data_pos@ret 001C  
                lcd_8bit_send_string_pos@col 001A                  lcd_8bit_send_string_pos@lcd 0018  
             lcd_8bit_send_char_data_pos@row 0019                  lcd_8bit_send_string_pos@ret 001C  
                lcd_8bit_send_string_pos@row 0019                  lcd_8bit_send_string_pos@str 001B  
                      __end_of_lcd_8bit_init 1932                                 __pdataCOMRAM 005B  
                                  ?_ADC_Init 0005                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                   lcd_8bit_send_command@count 0011  
                               ___xxtofl@arg 000C                                 ___xxtofl@exp 000B  
                               ___xxtofl@val 0002                                   __accesstop 0080  
                    __end_of__initialization 279C                                    ?_INT0_ISR 0001  
                                  ?_INT1_ISR 0001                                    ?_INT2_ISR 0001  
                              ___rparam_used 0001                                   ___fltol@f1 0029  
                     adc_select_volt_ref@adc 0002                        ?_lcd_8bit_send_enable 000A  
                          RB5_ISR@RB5_Source 0001                       ??_gpio_pin_write_logic 0004  
                             __pcstackCOMRAM 0001                                 __pidataBANK0 29C6  
               ??_ADC_GetConversion_Blocking 000C                        ?_lcd_8bit_send_string 0012  
                      ??_adc_select_volt_ref 0003                      _ADC_GetConversionResult 2302  
                                 ??_ADC_Init 0006                             lcd_8bit_init@lcd 0012  
                       ADC_SelectChannel@adc 0005                             lcd_8bit_init@ret 0014  
                       ADC_SelectChannel@ret 0008                       ADC_StartConversion@adc 0002  
                     ADC_StartConversion@ret 0003                                   __pbssBANK0 009B  
                      _INT0_InterruptHandler 004F                                   ??_INT0_ISR 0001  
                                 ??_INT1_ISR 0001                                   ??_INT2_ISR 0001  
                                 __pnvCOMRAM 0077                   ADC_GetConversionResult@adc 0002  
                 ADC_GetConversionResult@ret 0007           gpio_pin_direction_init@_pin_config 0002  
               lcd_8bit_send_char_data@count 0011                                      _ADC_ISR 2A56  
                          RB7_ISR@RB7_Source 0001                                      _RB4_ISR 2A30  
                                    _RB5_ISR 2A16                                      _RB6_ISR 29FC  
                                    _RB7_ISR 29E2                                    ?___xxtofl 0002  
                  _RB6_InterruptHandler_HIGH 0041              ??_adc_input_channel_port_config 0002  
                                    i2u60_40 2A10                                      i2u60_41 2A0C  
                                    i2u61_40 29F6                                      i2u61_41 29F2  
                                    i2u58_40 2A44                                      i2u58_41 2A40  
                                    i2u59_40 2A2A                                      i2u59_41 2A26  
                   _RB6_InterruptHandler_LOW 003F                       ??_lcd_8bit_send_enable 000B  
                       _ADC_InterruptHandler 0051                                      __Hparam 0000  
                                    __Lparam 0000                       ??_lcd_8bit_send_string 0014  
                      _lcd_8bit_send_command 258C                                      ___flmul 1012  
                                    ___fltol 1EA2                                      ___lwdiv 2602  
                                    ___lwmod 26E0                                 __psmallconst 1000  
                  ??_ADC_GetConversionResult 0004                                      __pcinit 2744  
                                    __ramtop 1000                     _lcd_8bit_send_string_pos 2806  
                                    __ptext0 1AE6                                      __ptext1 216E  
                                    __ptext2 2238                                      __ptext3 1FAA  
                                    __ptext4 2806                                      __ptext5 2676  
                                    __ptext6 2914                                      __ptext7 23BA  
                                    __ptext8 2516                                      __ptext9 16E2  
                                    _lcd_obj 008A                                      _lat_reg 005B  
                                 ??___xxtofl 0006              lcd_8bit_send_char_data_pos@data 001B  
                             __pintcode_body 143C                         end_of_initialization 279C  
ADC_GetConversion_Blocking@conversion_status 000B                                      int_func 143C  
                 ??_adc_Select_result_format 0003           __end_of_ADC_GetConversion_Blocking 2806  
                 _ADC_GetConversion_Blocking 27A6                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                                   _motor_init 1FAA  
                                 _motor_stop 216E                        _INT1_InterruptHandler 004D  
                                  _PORTBbits 0F81                             _InterruptManager 0008  
                              ___xxtofl@sign 000A                          _ADC_StartConversion 2988  
      __end_of_adc_input_channel_port_config 216E                _adc_input_channel_port_config 2096  
                                ___flmul@grs 001D                       ?_lcd_8bit_send_command 000C  
                       ?_ADC_StartConversion 0002                convert_uint32_to_string@F3223 009B  
              convert_uint16_to_string@F3216 0031                      _gpio_pin_direction_init 1C6C  
                              __pidataCOMRAM 29AA                          start_initialization 2744  
                            motor_init@F3064 005A                              motor_init@F3066 0059  
                           _motor_move_right 2238     ADC_GetConversionResult@conversion_result 0003  
                            motor_init@motor 000A                        ??_ADC_StartConversion 0003  
                    _lcd_8bit_send_char_data 2516                  __end_of_adc_select_volt_ref 2896  
                                ?_motor_init 000A                                  __pdataBANK0 0080  
               convert_uint8_to_string@F3209 0037                                  ?_motor_stop 000A  
                                   ?_ADC_ISR 0001                          _lcd_8bit_set_cursor 23BA  
                   lcd_8bit_send_command@lcd 000C                     lcd_8bit_send_command@ret 0010  
                                   ?_RB4_ISR 0001                                     ?_RB5_ISR 0001  
                                   ?_RB6_ISR 0001                                     ?_RB7_ISR 0001  
                                  ___flmul@a 0014                                    ___flmul@b 0010  
                                __pbssCOMRAM 0031                                __pcstackBANK0 00A6  
               ?_lcd_8bit_send_char_data_pos 0018                         ?_lcd_8bit_set_cursor 0012  
           __end_of_adc_Select_result_format 28D6                        _INT2_InterruptHandler 004B  
                                  __pnvBANK0 00A8                   ??_lcd_8bit_send_string_pos 001C  
                           ___lwdiv@dividend 0002                    ??_gpio_pin_direction_init 0003  
                                  __pintcode 0008                            _ADC_SelectChannel 2950  
                lcd_8bit_send_char_data@data 000D              gpio_pin_write_logic@_pin_config 0002  
                                   ?___flmul 0010                                     ?___fltol 0029  
              ADC_GetConversion_Blocking@adc 0009                                     ?___lwdiv 0002  
                                   ?___lwmod 0002                ADC_GetConversion_Blocking@ret 000C  
                         ?_ADC_SelectChannel 0005                    gpio_pin_write_logic@logic 0003  
                            motor_stop@F3085 0054                              motor_stop@F3087 0053  
                                  _lcd_temp1 0079                                    _lcd_temp2 0077  
                                __smallconst 1000                    _RB4_InterruptHandler_HIGH 0049  
                        ??_ADC_SelectChannel 0007                                     _ADC_Init 246A  
                              _lcd_8bit_init 16E2                    _RB7_InterruptHandler_HIGH 003D  
                                ADC_Init@adc 0005                                  ADC_Init@ret 0007  
                           ___lwdiv@quotient 0006                              motor_stop@motor 000A  
                      ??_lcd_8bit_set_cursor 0015                     _RB5_InterruptHandler_LOW 0043  
                                   _INT0_ISR 2A52                                     _INT1_ISR 2A4E  
                                   _INT2_ISR 2A4A                                     _RB4_Flag 0072  
                  ??_lcd_8bit_send_char_data 000E                                     _RB5_Flag 0071  
                                   _RB6_Flag 0070                                     _RB7_Flag 006F  
                          RB4_ISR@RB4_Source 0001                     __end_of_InterruptManager 16E2  
                                   _PIE1bits 0F9D                    __end_of_ADC_SelectChannel 2988  
                                   i2u200_40 1570                                     i2u200_41 156C  
                                   i2u201_40 1580                                     i2u201_41 157C  
                                   i2u210_40 1620                                     i2u202_40 1598  
                                   i2u210_41 161C                                     i2u202_41 1594  
                                   i2u211_40 162E                                     i2u203_40 15A6  
                                   i2u211_41 162A                                     i2u203_41 15A2  
                                   i2u220_40 16C4                                     i2u212_40 163C  
                                   i2u204_40 15B4                                     i2u220_41 16C0  
                                   i2u212_41 1638                                     i2u204_41 15B0  
                                   i2u221_40 16D4                                     i2u213_40 164C  
                                   i2u205_40 15C4                                     i2u221_41 16D0  
                                   i2u213_41 1648                                     i2u205_41 15C0  
                                   i2u214_40 1664                                     i2u206_40 15DC  
                                   i2u214_41 1660                                     i2u206_41 15D8  
                                   i2u215_40 1672                                     i2u207_40 15EA  
                                   i2u215_41 166E                                     i2u207_41 15E6  
                                   i2u216_40 1680                                     i2u208_40 15F8  
                                   i2u216_41 167C                                     i2u208_41 15F4  
                                   i2u217_40 1690                                     i2u209_40 1608  
                                   i2u217_41 168C                                     i2u209_41 1604  
                                   i2u218_40 16A8                                     i2u218_41 16A4  
                                   i2u219_40 16B6                                     i2u219_41 16B2  
                                   i2u190_40 14CC                                     i2u182_40 144C  
                                   i2u190_41 14C8                                     i2u182_41 1448  
                                   i2u191_40 14DA                                     i2u183_40 145A  
                                   i2u191_41 14D6                                     i2u183_41 1456  
                                   i2u192_40 14E8                                     i2u184_40 146C  
                                   i2u192_41 14E4                                     i2u184_41 1468  
                                   i2u193_40 14F8                                     i2u185_40 147A  
                                   i2u193_41 14F4                                     i2u185_41 1476  
                                   _PIR1bits 0F9E                                     i2u194_40 1510  
                                   i2u186_40 148C                                     i2u194_41 150C  
                                   i2u186_41 1488                                     i2u195_40 151E  
                                   i2u187_40 149A                                     i2u195_41 151A  
                                   i2u187_41 1496                                     i2u196_40 152C  
                                   i2u188_40 14AC                                     i2u196_41 1528  
                                   i2u188_41 14A8                                     i2u197_40 153C  
                                   i2u189_40 14BA                                     i2u197_41 1538  
                                   i2u189_41 14B6                                     i2u198_40 1554  
                                   i2u198_41 1550                                     i2u199_40 1562  
                                   i2u199_41 155E                  ?_ADC_GetConversion_Blocking 0009  
                                 _ADCON0bits 0FC2                                   _ADCON1bits 0FC1  
                                 _ADCON2bits 0FC0                     ADC_SelectChannel@channel 0006  
                             ?_lcd_8bit_init 0012              __end_of_gpio_pin_direction_init 1D92  
                  lcd_8bit_set_cursor@column 0014                      gpio_pin_write_logic@ret 0009  
                                _INTCON2bits 0FF1                                  _INTCON3bits 0FF0  
                                  copy_data0 2758                                    copy_data1 2778  
                    lcd_8bit_send_enable@lcd 000A                      lcd_8bit_send_enable@ret 000B  
                    ??_lcd_8bit_send_command 000E                               motor_init@obj1 000D  
                             motor_init@obj2 000E                                     __Hrparam 0000  
                                   __Lrparam 0000                     ?_ADC_GetConversionResult 0002  
                   __end_of_motor_move_right 2302                            RB6_ISR@RB6_Source 0001  
            __end_of_lcd_8bit_send_char_data 258C                                     _adc_temp 007B  
                  ?_adc_Select_result_format 0002                                     ___xxtofl 1932  
                            ___lwdiv@divisor 0004                   lcd_8bit_send_char_data@lcd 000C  
                            ___lwdiv@counter 0008                   lcd_8bit_send_char_data@ret 0010  
                                   __ptext10 258C                                     __ptext11 28D6  
                                   __ptext20 2850                                     __ptext12 1D92  
                                   __ptext21 2896                                     __ptext13 1C6C  
                                   __ptext30 2A16                                     __ptext22 27A6  
                                   __ptext14 1932                                     __ptext31 2A30  
                                   __ptext23 2988                                     __ptext15 26E0  
                                   __ptext32 2A4A                                     __ptext24 2950  
                                   __ptext16 2602                                     __ptext33 2A4E  
                                   __ptext25 2096                                     __ptext17 1EA2  
                                   __ptext34 2A52                                     __ptext26 2302  
                                   __ptext18 1012                                     __ptext35 2A56  
                                   __ptext19 246A                                     __ptext28 29E2  
                                   __ptext29 29FC                               motor_stop@obj1 000C  
                             motor_stop@obj2 000D             __end_of_lcd_8bit_send_string_pos 2850  
                                   isa$xinst 0000                                     int$flags 007D  
                                   _port_reg 0080                                 ??_motor_init 000B  
                               ??_motor_stop 000B                                     _tris_reg 0065  
                adc_Select_result_format@adc 0002                              ??_lcd_8bit_init 0013  
                       motor_move_left@F3080 0055                         motor_move_left@F3078 0056  
                                 _INTCONbits 0FF2                                motor_init@ret 000C  
               __end_of_gpio_pin_write_logic 1EA2                                     intlevel2 0000  
                __end_of_ADC_StartConversion 29AA                           __end_of_motor_init 2096  
                           ___lwmod@dividend 0002                           __end_of_motor_stop 2238  
            __end_of_ADC_GetConversionResult 23BA                        motor_move_right@F3071 0058  
                      motor_move_right@F3073 0057         adc_input_channel_port_config@channel 0004  
                            ___lwmod@divisor 0004                              ___lwmod@counter 0006  
                      motor_move_right@motor 000A                   gpio_pin_direction_init@ret 0008  
                    lcd_8bit_send_string@lcd 0012                      lcd_8bit_send_string@ret 0014  
                    lcd_8bit_send_string@str 0013                         motor_move_right@obj1 000C  
                       motor_move_right@obj2 000D                 lcd_8bit_send_command@command 000D  
                          ?_InterruptManager 0001  
